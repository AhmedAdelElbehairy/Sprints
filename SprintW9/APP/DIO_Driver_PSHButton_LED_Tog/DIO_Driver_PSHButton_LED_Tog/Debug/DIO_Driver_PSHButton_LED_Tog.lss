
DIO_Driver_PSHButton_LED_Tog.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000060a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000067e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  0000067e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000067e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  000006ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ef0  00000000  00000000  000007ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000899  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ad1  00000000  00000000  00001f75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d8  00000000  00000000  00002a48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f7  00000000  00000000  00002c20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011a2  00000000  00000000  00003117  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000042b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <main>
  74:	0c 94 03 03 	jmp	0x606	; 0x606 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_PinInit>:
	else 
	{
		ErrorValue = OperationFail;
	}
	return ErrorValue;
}
  7c:	85 30       	cpi	r24, 0x05	; 5
  7e:	08 f0       	brcs	.+2      	; 0x82 <DIO_PinInit+0x6>
  80:	81 c0       	rjmp	.+258    	; 0x184 <DIO_PinInit+0x108>
  82:	68 30       	cpi	r22, 0x08	; 8
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_PinInit+0xc>
  86:	80 c0       	rjmp	.+256    	; 0x188 <DIO_PinInit+0x10c>
  88:	41 30       	cpi	r20, 0x01	; 1
  8a:	d9 f5       	brne	.+118    	; 0x102 <DIO_PinInit+0x86>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	a9 f0       	breq	.+42     	; 0xba <DIO_PinInit+0x3e>
  90:	18 f4       	brcc	.+6      	; 0x98 <DIO_PinInit+0x1c>
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	31 f0       	breq	.+12     	; 0xa2 <DIO_PinInit+0x26>
  96:	7a c0       	rjmp	.+244    	; 0x18c <DIO_PinInit+0x110>
  98:	83 30       	cpi	r24, 0x03	; 3
  9a:	d9 f0       	breq	.+54     	; 0xd2 <DIO_PinInit+0x56>
  9c:	84 30       	cpi	r24, 0x04	; 4
  9e:	29 f1       	breq	.+74     	; 0xea <DIO_PinInit+0x6e>
  a0:	75 c0       	rjmp	.+234    	; 0x18c <DIO_PinInit+0x110>
  a2:	81 e0       	ldi	r24, 0x01	; 1
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	02 c0       	rjmp	.+4      	; 0xac <DIO_PinInit+0x30>
  a8:	88 0f       	add	r24, r24
  aa:	99 1f       	adc	r25, r25
  ac:	6a 95       	dec	r22
  ae:	e2 f7       	brpl	.-8      	; 0xa8 <DIO_PinInit+0x2c>
  b0:	9a b3       	in	r25, 0x1a	; 26
  b2:	89 2b       	or	r24, r25
  b4:	8a bb       	out	0x1a, r24	; 26
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	08 95       	ret
  ba:	81 e0       	ldi	r24, 0x01	; 1
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	02 c0       	rjmp	.+4      	; 0xc4 <DIO_PinInit+0x48>
  c0:	88 0f       	add	r24, r24
  c2:	99 1f       	adc	r25, r25
  c4:	6a 95       	dec	r22
  c6:	e2 f7       	brpl	.-8      	; 0xc0 <DIO_PinInit+0x44>
  c8:	97 b3       	in	r25, 0x17	; 23
  ca:	89 2b       	or	r24, r25
  cc:	87 bb       	out	0x17, r24	; 23
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	08 95       	ret
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_PinInit+0x60>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_PinInit+0x5c>
  e0:	94 b3       	in	r25, 0x14	; 20
  e2:	89 2b       	or	r24, r25
  e4:	84 bb       	out	0x14, r24	; 20
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	08 95       	ret
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <DIO_PinInit+0x78>
  f0:	88 0f       	add	r24, r24
  f2:	99 1f       	adc	r25, r25
  f4:	6a 95       	dec	r22
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <DIO_PinInit+0x74>
  f8:	91 b3       	in	r25, 0x11	; 17
  fa:	89 2b       	or	r24, r25
  fc:	81 bb       	out	0x11, r24	; 17
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	08 95       	ret
 102:	41 11       	cpse	r20, r1
 104:	45 c0       	rjmp	.+138    	; 0x190 <DIO_PinInit+0x114>
 106:	82 30       	cpi	r24, 0x02	; 2
 108:	b1 f0       	breq	.+44     	; 0x136 <DIO_PinInit+0xba>
 10a:	18 f4       	brcc	.+6      	; 0x112 <DIO_PinInit+0x96>
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	31 f0       	breq	.+12     	; 0x11c <DIO_PinInit+0xa0>
 110:	41 c0       	rjmp	.+130    	; 0x194 <DIO_PinInit+0x118>
 112:	83 30       	cpi	r24, 0x03	; 3
 114:	e9 f0       	breq	.+58     	; 0x150 <DIO_PinInit+0xd4>
 116:	84 30       	cpi	r24, 0x04	; 4
 118:	41 f1       	breq	.+80     	; 0x16a <DIO_PinInit+0xee>
 11a:	3c c0       	rjmp	.+120    	; 0x194 <DIO_PinInit+0x118>
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_PinInit+0xaa>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_PinInit+0xa6>
 12a:	80 95       	com	r24
 12c:	9a b3       	in	r25, 0x1a	; 26
 12e:	89 23       	and	r24, r25
 130:	8a bb       	out	0x1a, r24	; 26
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	08 95       	ret
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_PinInit+0xc4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_PinInit+0xc0>
 144:	80 95       	com	r24
 146:	97 b3       	in	r25, 0x17	; 23
 148:	89 23       	and	r24, r25
 14a:	87 bb       	out	0x17, r24	; 23
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	08 95       	ret
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_PinInit+0xde>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_PinInit+0xda>
 15e:	80 95       	com	r24
 160:	94 b3       	in	r25, 0x14	; 20
 162:	89 23       	and	r24, r25
 164:	84 bb       	out	0x14, r24	; 20
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	08 95       	ret
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_PinInit+0xf8>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_PinInit+0xf4>
 178:	80 95       	com	r24
 17a:	91 b3       	in	r25, 0x11	; 17
 17c:	89 23       	and	r24, r25
 17e:	81 bb       	out	0x11, r24	; 17
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	08 95       	ret
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	08 95       	ret
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	08 95       	ret
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	08 95       	ret
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	08 95       	ret
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	08 95       	ret

00000198 <DIO_PinEnablePullUp>:
 198:	85 30       	cpi	r24, 0x05	; 5
 19a:	08 f0       	brcs	.+2      	; 0x19e <DIO_PinEnablePullUp+0x6>
 19c:	70 c0       	rjmp	.+224    	; 0x27e <DIO_PinEnablePullUp+0xe6>
 19e:	68 30       	cpi	r22, 0x08	; 8
 1a0:	08 f0       	brcs	.+2      	; 0x1a4 <DIO_PinEnablePullUp+0xc>
 1a2:	6f c0       	rjmp	.+222    	; 0x282 <DIO_PinEnablePullUp+0xea>
 1a4:	82 30       	cpi	r24, 0x02	; 2
 1a6:	19 f1       	breq	.+70     	; 0x1ee <DIO_PinEnablePullUp+0x56>
 1a8:	18 f4       	brcc	.+6      	; 0x1b0 <DIO_PinEnablePullUp+0x18>
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	39 f0       	breq	.+14     	; 0x1bc <DIO_PinEnablePullUp+0x24>
 1ae:	6b c0       	rjmp	.+214    	; 0x286 <DIO_PinEnablePullUp+0xee>
 1b0:	83 30       	cpi	r24, 0x03	; 3
 1b2:	a9 f1       	breq	.+106    	; 0x21e <DIO_PinEnablePullUp+0x86>
 1b4:	84 30       	cpi	r24, 0x04	; 4
 1b6:	09 f4       	brne	.+2      	; 0x1ba <DIO_PinEnablePullUp+0x22>
 1b8:	4a c0       	rjmp	.+148    	; 0x24e <DIO_PinEnablePullUp+0xb6>
 1ba:	65 c0       	rjmp	.+202    	; 0x286 <DIO_PinEnablePullUp+0xee>
 1bc:	8a b3       	in	r24, 0x1a	; 26
 1be:	21 e0       	ldi	r18, 0x01	; 1
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	06 2e       	mov	r0, r22
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_PinEnablePullUp+0x32>
 1c6:	22 0f       	add	r18, r18
 1c8:	33 1f       	adc	r19, r19
 1ca:	0a 94       	dec	r0
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_PinEnablePullUp+0x2e>
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	82 23       	and	r24, r18
 1d2:	93 23       	and	r25, r19
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_PinEnablePullUp+0x42>
 1d6:	95 95       	asr	r25
 1d8:	87 95       	ror	r24
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_PinEnablePullUp+0x3e>
 1de:	89 2b       	or	r24, r25
 1e0:	09 f0       	breq	.+2      	; 0x1e4 <DIO_PinEnablePullUp+0x4c>
 1e2:	53 c0       	rjmp	.+166    	; 0x28a <DIO_PinEnablePullUp+0xf2>
 1e4:	8b b3       	in	r24, 0x1b	; 27
 1e6:	28 2b       	or	r18, r24
 1e8:	2b bb       	out	0x1b, r18	; 27
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	08 95       	ret
 1ee:	87 b3       	in	r24, 0x17	; 23
 1f0:	21 e0       	ldi	r18, 0x01	; 1
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	06 2e       	mov	r0, r22
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_PinEnablePullUp+0x64>
 1f8:	22 0f       	add	r18, r18
 1fa:	33 1f       	adc	r19, r19
 1fc:	0a 94       	dec	r0
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_PinEnablePullUp+0x60>
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	82 23       	and	r24, r18
 204:	93 23       	and	r25, r19
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_PinEnablePullUp+0x74>
 208:	95 95       	asr	r25
 20a:	87 95       	ror	r24
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_PinEnablePullUp+0x70>
 210:	89 2b       	or	r24, r25
 212:	e9 f5       	brne	.+122    	; 0x28e <DIO_PinEnablePullUp+0xf6>
 214:	88 b3       	in	r24, 0x18	; 24
 216:	28 2b       	or	r18, r24
 218:	28 bb       	out	0x18, r18	; 24
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	08 95       	ret
 21e:	84 b3       	in	r24, 0x14	; 20
 220:	21 e0       	ldi	r18, 0x01	; 1
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	06 2e       	mov	r0, r22
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_PinEnablePullUp+0x94>
 228:	22 0f       	add	r18, r18
 22a:	33 1f       	adc	r19, r19
 22c:	0a 94       	dec	r0
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_PinEnablePullUp+0x90>
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	82 23       	and	r24, r18
 234:	93 23       	and	r25, r19
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_PinEnablePullUp+0xa4>
 238:	95 95       	asr	r25
 23a:	87 95       	ror	r24
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_PinEnablePullUp+0xa0>
 240:	89 2b       	or	r24, r25
 242:	39 f5       	brne	.+78     	; 0x292 <DIO_PinEnablePullUp+0xfa>
 244:	85 b3       	in	r24, 0x15	; 21
 246:	28 2b       	or	r18, r24
 248:	25 bb       	out	0x15, r18	; 21
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	08 95       	ret
 24e:	81 b3       	in	r24, 0x11	; 17
 250:	21 e0       	ldi	r18, 0x01	; 1
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	06 2e       	mov	r0, r22
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIO_PinEnablePullUp+0xc4>
 258:	22 0f       	add	r18, r18
 25a:	33 1f       	adc	r19, r19
 25c:	0a 94       	dec	r0
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIO_PinEnablePullUp+0xc0>
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	82 23       	and	r24, r18
 264:	93 23       	and	r25, r19
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_PinEnablePullUp+0xd4>
 268:	95 95       	asr	r25
 26a:	87 95       	ror	r24
 26c:	6a 95       	dec	r22
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_PinEnablePullUp+0xd0>
 270:	89 2b       	or	r24, r25
 272:	89 f4       	brne	.+34     	; 0x296 <DIO_PinEnablePullUp+0xfe>
 274:	82 b3       	in	r24, 0x12	; 18
 276:	28 2b       	or	r18, r24
 278:	22 bb       	out	0x12, r18	; 18
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	08 95       	ret
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	08 95       	ret
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	08 95       	ret
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	08 95       	ret
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	08 95       	ret
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	08 95       	ret
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	08 95       	ret
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	08 95       	ret

0000029a <DIO_GetPinVal>:
 29a:	85 30       	cpi	r24, 0x05	; 5
 29c:	08 f0       	brcs	.+2      	; 0x2a0 <DIO_GetPinVal+0x6>
 29e:	6b c0       	rjmp	.+214    	; 0x376 <DIO_GetPinVal+0xdc>
 2a0:	68 30       	cpi	r22, 0x08	; 8
 2a2:	08 f0       	brcs	.+2      	; 0x2a6 <DIO_GetPinVal+0xc>
 2a4:	6a c0       	rjmp	.+212    	; 0x37a <DIO_GetPinVal+0xe0>
 2a6:	82 30       	cpi	r24, 0x02	; 2
 2a8:	09 f1       	breq	.+66     	; 0x2ec <DIO_GetPinVal+0x52>
 2aa:	18 f4       	brcc	.+6      	; 0x2b2 <DIO_GetPinVal+0x18>
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	39 f0       	breq	.+14     	; 0x2be <DIO_GetPinVal+0x24>
 2b0:	66 c0       	rjmp	.+204    	; 0x37e <DIO_GetPinVal+0xe4>
 2b2:	83 30       	cpi	r24, 0x03	; 3
 2b4:	91 f1       	breq	.+100    	; 0x31a <DIO_GetPinVal+0x80>
 2b6:	84 30       	cpi	r24, 0x04	; 4
 2b8:	09 f4       	brne	.+2      	; 0x2bc <DIO_GetPinVal+0x22>
 2ba:	46 c0       	rjmp	.+140    	; 0x348 <DIO_GetPinVal+0xae>
 2bc:	60 c0       	rjmp	.+192    	; 0x37e <DIO_GetPinVal+0xe4>
 2be:	79 b3       	in	r23, 0x19	; 25
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	9c 01       	movw	r18, r24
 2c6:	06 2e       	mov	r0, r22
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_GetPinVal+0x34>
 2ca:	22 0f       	add	r18, r18
 2cc:	33 1f       	adc	r19, r19
 2ce:	0a 94       	dec	r0
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_GetPinVal+0x30>
 2d2:	87 2f       	mov	r24, r23
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	82 23       	and	r24, r18
 2d8:	93 23       	and	r25, r19
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_GetPinVal+0x46>
 2dc:	95 95       	asr	r25
 2de:	87 95       	ror	r24
 2e0:	6a 95       	dec	r22
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_GetPinVal+0x42>
 2e4:	fa 01       	movw	r30, r20
 2e6:	80 83       	st	Z, r24
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	08 95       	ret
 2ec:	76 b3       	in	r23, 0x16	; 22
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	9c 01       	movw	r18, r24
 2f4:	06 2e       	mov	r0, r22
 2f6:	02 c0       	rjmp	.+4      	; 0x2fc <DIO_GetPinVal+0x62>
 2f8:	22 0f       	add	r18, r18
 2fa:	33 1f       	adc	r19, r19
 2fc:	0a 94       	dec	r0
 2fe:	e2 f7       	brpl	.-8      	; 0x2f8 <DIO_GetPinVal+0x5e>
 300:	87 2f       	mov	r24, r23
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	82 23       	and	r24, r18
 306:	93 23       	and	r25, r19
 308:	02 c0       	rjmp	.+4      	; 0x30e <DIO_GetPinVal+0x74>
 30a:	95 95       	asr	r25
 30c:	87 95       	ror	r24
 30e:	6a 95       	dec	r22
 310:	e2 f7       	brpl	.-8      	; 0x30a <DIO_GetPinVal+0x70>
 312:	fa 01       	movw	r30, r20
 314:	80 83       	st	Z, r24
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	08 95       	ret
 31a:	73 b3       	in	r23, 0x13	; 19
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	9c 01       	movw	r18, r24
 322:	06 2e       	mov	r0, r22
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_GetPinVal+0x90>
 326:	22 0f       	add	r18, r18
 328:	33 1f       	adc	r19, r19
 32a:	0a 94       	dec	r0
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_GetPinVal+0x8c>
 32e:	87 2f       	mov	r24, r23
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	82 23       	and	r24, r18
 334:	93 23       	and	r25, r19
 336:	02 c0       	rjmp	.+4      	; 0x33c <DIO_GetPinVal+0xa2>
 338:	95 95       	asr	r25
 33a:	87 95       	ror	r24
 33c:	6a 95       	dec	r22
 33e:	e2 f7       	brpl	.-8      	; 0x338 <DIO_GetPinVal+0x9e>
 340:	fa 01       	movw	r30, r20
 342:	80 83       	st	Z, r24
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	08 95       	ret
 348:	70 b3       	in	r23, 0x10	; 16
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	9c 01       	movw	r18, r24
 350:	06 2e       	mov	r0, r22
 352:	02 c0       	rjmp	.+4      	; 0x358 <DIO_GetPinVal+0xbe>
 354:	22 0f       	add	r18, r18
 356:	33 1f       	adc	r19, r19
 358:	0a 94       	dec	r0
 35a:	e2 f7       	brpl	.-8      	; 0x354 <DIO_GetPinVal+0xba>
 35c:	87 2f       	mov	r24, r23
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	82 23       	and	r24, r18
 362:	93 23       	and	r25, r19
 364:	02 c0       	rjmp	.+4      	; 0x36a <DIO_GetPinVal+0xd0>
 366:	95 95       	asr	r25
 368:	87 95       	ror	r24
 36a:	6a 95       	dec	r22
 36c:	e2 f7       	brpl	.-8      	; 0x366 <DIO_GetPinVal+0xcc>
 36e:	fa 01       	movw	r30, r20
 370:	80 83       	st	Z, r24
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	08 95       	ret
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	08 95       	ret
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	08 95       	ret
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	08 95       	ret

00000382 <DIO_TogPinVal>:

uint8_t DIO_TogPinVal(uint8_t DIO_port, uint8_t DIO_pin) {
	uint8_t ErrorValue = OperationStarted;
	if ((DIO_port <= PORT_D) && (DIO_pin <= PIN7)) 
 382:	85 30       	cpi	r24, 0x05	; 5
 384:	08 f0       	brcs	.+2      	; 0x388 <DIO_TogPinVal+0x6>
 386:	70 c0       	rjmp	.+224    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 388:	68 30       	cpi	r22, 0x08	; 8
 38a:	08 f0       	brcs	.+2      	; 0x38e <DIO_TogPinVal+0xc>
 38c:	6f c0       	rjmp	.+222    	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
	{
		switch (DIO_port) 
 38e:	82 30       	cpi	r24, 0x02	; 2
 390:	19 f1       	breq	.+70     	; 0x3d8 <DIO_TogPinVal+0x56>
 392:	18 f4       	brcc	.+6      	; 0x39a <DIO_TogPinVal+0x18>
 394:	81 30       	cpi	r24, 0x01	; 1
 396:	39 f0       	breq	.+14     	; 0x3a6 <DIO_TogPinVal+0x24>
 398:	6b c0       	rjmp	.+214    	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 39a:	83 30       	cpi	r24, 0x03	; 3
 39c:	a9 f1       	breq	.+106    	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 39e:	84 30       	cpi	r24, 0x04	; 4
 3a0:	09 f4       	brne	.+2      	; 0x3a4 <DIO_TogPinVal+0x22>
 3a2:	4a c0       	rjmp	.+148    	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 3a4:	65 c0       	rjmp	.+202    	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
		{
		case PORT_A:
			if (READ_BIT(DDRA, DIO_pin) == PIN_OUTPUT) 
 3a6:	8a b3       	in	r24, 0x1a	; 26
 3a8:	21 e0       	ldi	r18, 0x01	; 1
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	06 2e       	mov	r0, r22
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <DIO_TogPinVal+0x32>
 3b0:	22 0f       	add	r18, r18
 3b2:	33 1f       	adc	r19, r19
 3b4:	0a 94       	dec	r0
 3b6:	e2 f7       	brpl	.-8      	; 0x3b0 <DIO_TogPinVal+0x2e>
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	82 23       	and	r24, r18
 3bc:	93 23       	and	r25, r19
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <DIO_TogPinVal+0x42>
 3c0:	95 95       	asr	r25
 3c2:	87 95       	ror	r24
 3c4:	6a 95       	dec	r22
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <DIO_TogPinVal+0x3e>
 3c8:	01 97       	sbiw	r24, 0x01	; 1
 3ca:	09 f0       	breq	.+2      	; 0x3ce <DIO_TogPinVal+0x4c>
 3cc:	53 c0       	rjmp	.+166    	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
			{
				TOG_BIT(PORTA, DIO_pin);
 3ce:	8b b3       	in	r24, 0x1b	; 27
 3d0:	28 27       	eor	r18, r24
 3d2:	2b bb       	out	0x1b, r18	; 27
				ErrorValue = OperationSuccess;
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	08 95       	ret
			{
				ErrorValue = OperationFail;
			}
			break;
		case PORT_B:
			if (READ_BIT(DDRB, DIO_pin) == PIN_OUTPUT) 
 3d8:	87 b3       	in	r24, 0x17	; 23
 3da:	21 e0       	ldi	r18, 0x01	; 1
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	06 2e       	mov	r0, r22
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_TogPinVal+0x64>
 3e2:	22 0f       	add	r18, r18
 3e4:	33 1f       	adc	r19, r19
 3e6:	0a 94       	dec	r0
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_TogPinVal+0x60>
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	82 23       	and	r24, r18
 3ee:	93 23       	and	r25, r19
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <DIO_TogPinVal+0x74>
 3f2:	95 95       	asr	r25
 3f4:	87 95       	ror	r24
 3f6:	6a 95       	dec	r22
 3f8:	e2 f7       	brpl	.-8      	; 0x3f2 <DIO_TogPinVal+0x70>
 3fa:	01 97       	sbiw	r24, 0x01	; 1
 3fc:	e9 f5       	brne	.+122    	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
			{
				TOG_BIT(PORTB, DIO_pin);
 3fe:	88 b3       	in	r24, 0x18	; 24
 400:	28 27       	eor	r18, r24
 402:	28 bb       	out	0x18, r18	; 24
				ErrorValue = OperationSuccess;
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	08 95       	ret
			{
				ErrorValue = OperationFail;
			}
			break;
		case PORT_C:
			if (READ_BIT(DDRC, DIO_pin) == PIN_OUTPUT) 
 408:	84 b3       	in	r24, 0x14	; 20
 40a:	21 e0       	ldi	r18, 0x01	; 1
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	06 2e       	mov	r0, r22
 410:	02 c0       	rjmp	.+4      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 412:	22 0f       	add	r18, r18
 414:	33 1f       	adc	r19, r19
 416:	0a 94       	dec	r0
 418:	e2 f7       	brpl	.-8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	82 23       	and	r24, r18
 41e:	93 23       	and	r25, r19
 420:	02 c0       	rjmp	.+4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 422:	95 95       	asr	r25
 424:	87 95       	ror	r24
 426:	6a 95       	dec	r22
 428:	e2 f7       	brpl	.-8      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	39 f5       	brne	.+78     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
			{
				TOG_BIT(PORTC, DIO_pin);
 42e:	85 b3       	in	r24, 0x15	; 21
 430:	28 27       	eor	r18, r24
 432:	25 bb       	out	0x15, r18	; 21
				ErrorValue = OperationSuccess;
 434:	80 e0       	ldi	r24, 0x00	; 0
 436:	08 95       	ret
			{
				ErrorValue = OperationFail;
			}
			break;
		case PORT_D:
			if (READ_BIT(DDRD, DIO_pin) == PIN_OUTPUT) 
 438:	81 b3       	in	r24, 0x11	; 17
 43a:	21 e0       	ldi	r18, 0x01	; 1
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	06 2e       	mov	r0, r22
 440:	02 c0       	rjmp	.+4      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 442:	22 0f       	add	r18, r18
 444:	33 1f       	adc	r19, r19
 446:	0a 94       	dec	r0
 448:	e2 f7       	brpl	.-8      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	82 23       	and	r24, r18
 44e:	93 23       	and	r25, r19
 450:	02 c0       	rjmp	.+4      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 452:	95 95       	asr	r25
 454:	87 95       	ror	r24
 456:	6a 95       	dec	r22
 458:	e2 f7       	brpl	.-8      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	89 f4       	brne	.+34     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
			{
				TOG_BIT(PORTD, DIO_pin);
 45e:	82 b3       	in	r24, 0x12	; 18
 460:	28 27       	eor	r18, r24
 462:	22 bb       	out	0x12, r18	; 18
				ErrorValue = OperationSuccess;
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	08 95       	ret
			break;
		}
	} 
	else 
	{
		ErrorValue = OperationFail;
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	08 95       	ret
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	08 95       	ret
			{
				ErrorValue = OperationFail;
			}
			break;
		default:
			ErrorValue = OperationFail;
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	08 95       	ret
				TOG_BIT(PORTA, DIO_pin);
				ErrorValue = OperationSuccess;
			} 
			else 
			{
				ErrorValue = OperationFail;
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	08 95       	ret
				TOG_BIT(PORTB, DIO_pin);
				ErrorValue = OperationSuccess;
			} 
			else 
			{
				ErrorValue = OperationFail;
 478:	81 e0       	ldi	r24, 0x01	; 1
 47a:	08 95       	ret
				TOG_BIT(PORTC, DIO_pin);
				ErrorValue = OperationSuccess;
			} 
			else 
			{
				ErrorValue = OperationFail;
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	08 95       	ret
				TOG_BIT(PORTD, DIO_pin);
				ErrorValue = OperationSuccess;
			} 
			else 
			{
				ErrorValue = OperationFail;
 480:	81 e0       	ldi	r24, 0x01	; 1
	else 
	{
		ErrorValue = OperationFail;
	}
	return ErrorValue;
}
 482:	08 95       	ret

00000484 <LED_Init>:

#include "LED.h"

void LED_Init(uint8_t port, uint8_t pin)
{
	DIO_PinInit(port, pin, PIN_OUTPUT);
 484:	41 e0       	ldi	r20, 0x01	; 1
 486:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_PinInit>
 48a:	08 95       	ret

0000048c <LED_Toggle>:
}
void LED_Toggle(uint8_t port, uint8_t pin)
{
	DIO_TogPinVal(port, pin);
 48c:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_TogPinVal>
 490:	08 95       	ret

00000492 <PSHBTTN_EnablePullUp>:
	return retVal;
}
uint8_t PSHBTTN_EnablePullUp(uint8_t port, uint8_t pin)
{
	uint8_t retVal = OperationSuccess;
	retVal |= DIO_PinEnablePullUp(port,pin);
 492:	0e 94 cc 00 	call	0x198	; 0x198 <DIO_PinEnablePullUp>
	retVal = retVal;
	return retVal;
}
 496:	08 95       	ret

00000498 <PSHBTTN_Init>:
 */

#include "PUSHBUTTON.h"

uint8_t PSHBTTN_Init (uint8_t port, uint8_t pin, uint8_t status)
{
 498:	0f 93       	push	r16
 49a:	1f 93       	push	r17
 49c:	cf 93       	push	r28
 49e:	df 93       	push	r29
 4a0:	d8 2f       	mov	r29, r24
 4a2:	16 2f       	mov	r17, r22
 4a4:	04 2f       	mov	r16, r20
	uint8_t retVal = OperationSuccess;
	retVal |= DIO_PinInit(port, pin, PIN_INPUT);
 4a6:	40 e0       	ldi	r20, 0x00	; 0
 4a8:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_PinInit>
 4ac:	c8 2f       	mov	r28, r24
	if (!status)
 4ae:	01 11       	cpse	r16, r1
 4b0:	05 c0       	rjmp	.+10     	; 0x4bc <PSHBTTN_Init+0x24>
		retVal |= PSHBTTN_EnablePullUp(port, pin);
 4b2:	61 2f       	mov	r22, r17
 4b4:	8d 2f       	mov	r24, r29
 4b6:	0e 94 49 02 	call	0x492	; 0x492 <PSHBTTN_EnablePullUp>
 4ba:	c8 2b       	or	r28, r24
	return retVal;
}
 4bc:	8c 2f       	mov	r24, r28
 4be:	df 91       	pop	r29
 4c0:	cf 91       	pop	r28
 4c2:	1f 91       	pop	r17
 4c4:	0f 91       	pop	r16
 4c6:	08 95       	ret

000004c8 <PSHBTTN_Status>:
	retVal |= DIO_PinEnablePullUp(port,pin);
	retVal = retVal;
	return retVal;
}
uint8_t PSHBTTN_Status (uint8_t port, uint8_t pin, uint8_t* status)
{
 4c8:	cf 92       	push	r12
 4ca:	df 92       	push	r13
 4cc:	ff 92       	push	r15
 4ce:	0f 93       	push	r16
 4d0:	1f 93       	push	r17
 4d2:	cf 93       	push	r28
 4d4:	df 93       	push	r29
 4d6:	00 d0       	rcall	.+0      	; 0x4d8 <PSHBTTN_Status+0x10>
 4d8:	00 d0       	rcall	.+0      	; 0x4da <PSHBTTN_Status+0x12>
 4da:	1f 92       	push	r1
 4dc:	cd b7       	in	r28, 0x3d	; 61
 4de:	de b7       	in	r29, 0x3e	; 62
 4e0:	08 2f       	mov	r16, r24
 4e2:	f6 2e       	mov	r15, r22
 4e4:	6a 01       	movw	r12, r20
	uint8_t retVal = OperationSuccess;
	uint8_t FunRetVal = 0;
 4e6:	19 82       	std	Y+1, r1	; 0x01
	retVal |= DIO_GetPinVal(port, pin, &FunRetVal);
 4e8:	ae 01       	movw	r20, r28
 4ea:	4f 5f       	subi	r20, 0xFF	; 255
 4ec:	5f 4f       	sbci	r21, 0xFF	; 255
 4ee:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_GetPinVal>
 4f2:	18 2f       	mov	r17, r24
	if (FunRetVal == 0)
 4f4:	89 81       	ldd	r24, Y+1	; 0x01
 4f6:	81 11       	cpse	r24, r1
 4f8:	25 c0       	rjmp	.+74     	; 0x544 <PSHBTTN_Status+0x7c>
	{
		for(volatile uint16_t i=0; i<1000; i++)
 4fa:	1b 82       	std	Y+3, r1	; 0x03
 4fc:	1a 82       	std	Y+2, r1	; 0x02
 4fe:	15 c0       	rjmp	.+42     	; 0x52a <PSHBTTN_Status+0x62>
		{
			for(volatile uint8_t j=0; j<16; j++)
 500:	1d 82       	std	Y+5, r1	; 0x05
 502:	0b c0       	rjmp	.+22     	; 0x51a <PSHBTTN_Status+0x52>
			{
				for(volatile uint8_t k=0; k<20; k++);}}//dummy delay for 20ms
 504:	1c 82       	std	Y+4, r1	; 0x04
 506:	03 c0       	rjmp	.+6      	; 0x50e <PSHBTTN_Status+0x46>
 508:	8c 81       	ldd	r24, Y+4	; 0x04
 50a:	8f 5f       	subi	r24, 0xFF	; 255
 50c:	8c 83       	std	Y+4, r24	; 0x04
 50e:	8c 81       	ldd	r24, Y+4	; 0x04
 510:	84 31       	cpi	r24, 0x14	; 20
 512:	d0 f3       	brcs	.-12     	; 0x508 <PSHBTTN_Status+0x40>
	retVal |= DIO_GetPinVal(port, pin, &FunRetVal);
	if (FunRetVal == 0)
	{
		for(volatile uint16_t i=0; i<1000; i++)
		{
			for(volatile uint8_t j=0; j<16; j++)
 514:	8d 81       	ldd	r24, Y+5	; 0x05
 516:	8f 5f       	subi	r24, 0xFF	; 255
 518:	8d 83       	std	Y+5, r24	; 0x05
 51a:	8d 81       	ldd	r24, Y+5	; 0x05
 51c:	80 31       	cpi	r24, 0x10	; 16
 51e:	90 f3       	brcs	.-28     	; 0x504 <PSHBTTN_Status+0x3c>
	uint8_t retVal = OperationSuccess;
	uint8_t FunRetVal = 0;
	retVal |= DIO_GetPinVal(port, pin, &FunRetVal);
	if (FunRetVal == 0)
	{
		for(volatile uint16_t i=0; i<1000; i++)
 520:	8a 81       	ldd	r24, Y+2	; 0x02
 522:	9b 81       	ldd	r25, Y+3	; 0x03
 524:	01 96       	adiw	r24, 0x01	; 1
 526:	9b 83       	std	Y+3, r25	; 0x03
 528:	8a 83       	std	Y+2, r24	; 0x02
 52a:	8a 81       	ldd	r24, Y+2	; 0x02
 52c:	9b 81       	ldd	r25, Y+3	; 0x03
 52e:	88 3e       	cpi	r24, 0xE8	; 232
 530:	93 40       	sbci	r25, 0x03	; 3
 532:	30 f3       	brcs	.-52     	; 0x500 <PSHBTTN_Status+0x38>
		{
			for(volatile uint8_t j=0; j<16; j++)
			{
				for(volatile uint8_t k=0; k<20; k++);}}//dummy delay for 20ms
		retVal |= DIO_GetPinVal(port, pin, &FunRetVal);
 534:	ae 01       	movw	r20, r28
 536:	4f 5f       	subi	r20, 0xFF	; 255
 538:	5f 4f       	sbci	r21, 0xFF	; 255
 53a:	6f 2d       	mov	r22, r15
 53c:	80 2f       	mov	r24, r16
 53e:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_GetPinVal>
 542:	18 2b       	or	r17, r24
	}
	*status = FunRetVal;
 544:	89 81       	ldd	r24, Y+1	; 0x01
 546:	f6 01       	movw	r30, r12
 548:	80 83       	st	Z, r24
	return retVal;
}
 54a:	81 2f       	mov	r24, r17
 54c:	0f 90       	pop	r0
 54e:	0f 90       	pop	r0
 550:	0f 90       	pop	r0
 552:	0f 90       	pop	r0
 554:	0f 90       	pop	r0
 556:	df 91       	pop	r29
 558:	cf 91       	pop	r28
 55a:	1f 91       	pop	r17
 55c:	0f 91       	pop	r16
 55e:	ff 90       	pop	r15
 560:	df 90       	pop	r13
 562:	cf 90       	pop	r12
 564:	08 95       	ret

00000566 <APP_init>:
uint8_t static BUTTON_PORT;
uint8_t static BUTTON_PIN;
uint8_t static LED_PORT;
uint8_t static LED_PIN;
void APP_init(uint8_t button_port, uint8_t button_pin, uint8_t led_port, uint8_t led_pin)
{
 566:	0f 93       	push	r16
 568:	1f 93       	push	r17
 56a:	cf 93       	push	r28
 56c:	df 93       	push	r29
 56e:	08 2f       	mov	r16, r24
 570:	16 2f       	mov	r17, r22
 572:	d4 2f       	mov	r29, r20
 574:	c2 2f       	mov	r28, r18
	LED_Init(led_port, led_pin);
 576:	62 2f       	mov	r22, r18
 578:	84 2f       	mov	r24, r20
 57a:	0e 94 42 02 	call	0x484	; 0x484 <LED_Init>
	PSHBTTN_Init(button_port, button_pin, PULLED_UP);
 57e:	40 e0       	ldi	r20, 0x00	; 0
 580:	61 2f       	mov	r22, r17
 582:	80 2f       	mov	r24, r16
 584:	0e 94 4c 02 	call	0x498	; 0x498 <PSHBTTN_Init>
	BUTTON_PORT=button_port;	
 588:	00 93 63 00 	sts	0x0063, r16	; 0x800063 <BUTTON_PORT>
	BUTTON_PIN=button_pin;
 58c:	10 93 62 00 	sts	0x0062, r17	; 0x800062 <BUTTON_PIN>
	LED_PORT=led_port;	
 590:	d0 93 61 00 	sts	0x0061, r29	; 0x800061 <LED_PORT>
	LED_PIN=led_pin;
 594:	c0 93 60 00 	sts	0x0060, r28	; 0x800060 <__DATA_REGION_ORIGIN__>

}
 598:	df 91       	pop	r29
 59a:	cf 91       	pop	r28
 59c:	1f 91       	pop	r17
 59e:	0f 91       	pop	r16
 5a0:	08 95       	ret

000005a2 <APP_start>:

void APP_start()
{
 5a2:	cf 93       	push	r28
 5a4:	df 93       	push	r29
 5a6:	1f 92       	push	r1
 5a8:	cd b7       	in	r28, 0x3d	; 61
 5aa:	de b7       	in	r29, 0x3e	; 62
	uint8_t status = 0;
 5ac:	19 82       	std	Y+1, r1	; 0x01
	PSHBTTN_Status (BUTTON_PORT, BUTTON_PIN, &status);
 5ae:	ae 01       	movw	r20, r28
 5b0:	4f 5f       	subi	r20, 0xFF	; 255
 5b2:	5f 4f       	sbci	r21, 0xFF	; 255
 5b4:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <BUTTON_PIN>
 5b8:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <BUTTON_PORT>
 5bc:	0e 94 64 02 	call	0x4c8	; 0x4c8 <PSHBTTN_Status>
	if(status == 0)
 5c0:	89 81       	ldd	r24, Y+1	; 0x01
 5c2:	88 23       	and	r24, r24
 5c4:	51 f0       	breq	.+20     	; 0x5da <APP_start+0x38>
 5c6:	12 c0       	rjmp	.+36     	; 0x5ec <APP_start+0x4a>
	{
		while(status == 0)
		{
			PSHBTTN_Status (BUTTON_PORT, BUTTON_PIN, &status);
 5c8:	ae 01       	movw	r20, r28
 5ca:	4f 5f       	subi	r20, 0xFF	; 255
 5cc:	5f 4f       	sbci	r21, 0xFF	; 255
 5ce:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <BUTTON_PIN>
 5d2:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <BUTTON_PORT>
 5d6:	0e 94 64 02 	call	0x4c8	; 0x4c8 <PSHBTTN_Status>
{
	uint8_t status = 0;
	PSHBTTN_Status (BUTTON_PORT, BUTTON_PIN, &status);
	if(status == 0)
	{
		while(status == 0)
 5da:	89 81       	ldd	r24, Y+1	; 0x01
 5dc:	88 23       	and	r24, r24
 5de:	a1 f3       	breq	.-24     	; 0x5c8 <APP_start+0x26>
		{
			PSHBTTN_Status (BUTTON_PORT, BUTTON_PIN, &status);
		}
		LED_Toggle(LED_PORT, LED_PIN);
 5e0:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 5e4:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <LED_PORT>
 5e8:	0e 94 46 02 	call	0x48c	; 0x48c <LED_Toggle>
	}
}
 5ec:	0f 90       	pop	r0
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	08 95       	ret

000005f4 <main>:
#include "APP.h"

int main(void)
{

	APP_init(PORT_A,PIN1,PORT_A, PIN0);
 5f4:	20 e0       	ldi	r18, 0x00	; 0
 5f6:	41 e0       	ldi	r20, 0x01	; 1
 5f8:	61 e0       	ldi	r22, 0x01	; 1
 5fa:	81 e0       	ldi	r24, 0x01	; 1
 5fc:	0e 94 b3 02 	call	0x566	; 0x566 <APP_init>
    while (1)
    {
    	APP_start();
 600:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <APP_start>
 604:	fd cf       	rjmp	.-6      	; 0x600 <main+0xc>

00000606 <_exit>:
 606:	f8 94       	cli

00000608 <__stop_program>:
 608:	ff cf       	rjmp	.-2      	; 0x608 <__stop_program>
