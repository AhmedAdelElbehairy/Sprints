
simpleCarProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001d0a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010c  00800060  00001d0a  00001d7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001c20  00000000  00000000  00001e8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001a09  00000000  00000000  00003aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  000054b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001b4  00000000  00000000  00005615  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f0e  00000000  00000000  000057c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010c3  00000000  00000000  000076d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001032  00000000  00000000  0000879a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  000097cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002e3  00000000  00000000  0000994c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000956  00000000  00000000  00009c2f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a585  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e0       	ldi	r30, 0x0A	; 10
      68:	fd e1       	ldi	r31, 0x1D	; 29
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 36       	cpi	r26, 0x6C	; 108
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <main>
      7a:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 bd 03 	call	0x77a	; 0x77a <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4b 04 	call	0x896	; 0x896 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4b 04 	call	0x896	; 0x896 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 68 0e 	jmp	0x1cd0	; 0x1cd0 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 74 0e 	jmp	0x1ce8	; 0x1ce8 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 74 0e 	jmp	0x1ce8	; 0x1ce8 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 68 0e 	jmp	0x1cd0	; 0x1cd0 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 54 0e 	jmp	0x1ca8	; 0x1ca8 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__epilogue_restores__+0x10>

0000077a <__gesf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gesf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gesf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 3b 06 	call	0xc76	; 0xc76 <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gesf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 74 0e 	jmp	0x1ce8	; 0x1ce8 <__epilogue_restores__+0x18>

000007da <__floatsisf>:
     7da:	a8 e0       	ldi	r26, 0x08	; 8
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 55 0e 	jmp	0x1caa	; 0x1caa <__prologue_saves__+0x12>
     7e6:	9b 01       	movw	r18, r22
     7e8:	ac 01       	movw	r20, r24
     7ea:	83 e0       	ldi	r24, 0x03	; 3
     7ec:	89 83       	std	Y+1, r24	; 0x01
     7ee:	da 01       	movw	r26, r20
     7f0:	c9 01       	movw	r24, r18
     7f2:	88 27       	eor	r24, r24
     7f4:	b7 fd       	sbrc	r27, 7
     7f6:	83 95       	inc	r24
     7f8:	99 27       	eor	r25, r25
     7fa:	aa 27       	eor	r26, r26
     7fc:	bb 27       	eor	r27, r27
     7fe:	b8 2e       	mov	r11, r24
     800:	21 15       	cp	r18, r1
     802:	31 05       	cpc	r19, r1
     804:	41 05       	cpc	r20, r1
     806:	51 05       	cpc	r21, r1
     808:	19 f4       	brne	.+6      	; 0x810 <__floatsisf+0x36>
     80a:	82 e0       	ldi	r24, 0x02	; 2
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	3a c0       	rjmp	.+116    	; 0x884 <__stack+0x25>
     810:	88 23       	and	r24, r24
     812:	a9 f0       	breq	.+42     	; 0x83e <__floatsisf+0x64>
     814:	20 30       	cpi	r18, 0x00	; 0
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	38 07       	cpc	r19, r24
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	48 07       	cpc	r20, r24
     81e:	80 e8       	ldi	r24, 0x80	; 128
     820:	58 07       	cpc	r21, r24
     822:	29 f4       	brne	.+10     	; 0x82e <__floatsisf+0x54>
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	70 e0       	ldi	r23, 0x00	; 0
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	9f ec       	ldi	r25, 0xCF	; 207
     82c:	30 c0       	rjmp	.+96     	; 0x88e <__stack+0x2f>
     82e:	ee 24       	eor	r14, r14
     830:	ff 24       	eor	r15, r15
     832:	87 01       	movw	r16, r14
     834:	e2 1a       	sub	r14, r18
     836:	f3 0a       	sbc	r15, r19
     838:	04 0b       	sbc	r16, r20
     83a:	15 0b       	sbc	r17, r21
     83c:	02 c0       	rjmp	.+4      	; 0x842 <__floatsisf+0x68>
     83e:	79 01       	movw	r14, r18
     840:	8a 01       	movw	r16, r20
     842:	8e e1       	ldi	r24, 0x1E	; 30
     844:	c8 2e       	mov	r12, r24
     846:	d1 2c       	mov	r13, r1
     848:	dc 82       	std	Y+4, r13	; 0x04
     84a:	cb 82       	std	Y+3, r12	; 0x03
     84c:	ed 82       	std	Y+5, r14	; 0x05
     84e:	fe 82       	std	Y+6, r15	; 0x06
     850:	0f 83       	std	Y+7, r16	; 0x07
     852:	18 87       	std	Y+8, r17	; 0x08
     854:	c8 01       	movw	r24, r16
     856:	b7 01       	movw	r22, r14
     858:	0e 94 9f 04 	call	0x93e	; 0x93e <__clzsi2>
     85c:	01 97       	sbiw	r24, 0x01	; 1
     85e:	18 16       	cp	r1, r24
     860:	19 06       	cpc	r1, r25
     862:	84 f4       	brge	.+32     	; 0x884 <__stack+0x25>
     864:	08 2e       	mov	r0, r24
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	ee 0c       	add	r14, r14
     86a:	ff 1c       	adc	r15, r15
     86c:	00 1f       	adc	r16, r16
     86e:	11 1f       	adc	r17, r17
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	ed 82       	std	Y+5, r14	; 0x05
     876:	fe 82       	std	Y+6, r15	; 0x06
     878:	0f 83       	std	Y+7, r16	; 0x07
     87a:	18 87       	std	Y+8, r17	; 0x08
     87c:	c8 1a       	sub	r12, r24
     87e:	d9 0a       	sbc	r13, r25
     880:	dc 82       	std	Y+4, r13	; 0x04
     882:	cb 82       	std	Y+3, r12	; 0x03
     884:	ba 82       	std	Y+2, r11	; 0x02
     886:	ce 01       	movw	r24, r28
     888:	01 96       	adiw	r24, 0x01	; 1
     88a:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__pack_f>
     88e:	28 96       	adiw	r28, 0x08	; 8
     890:	e9 e0       	ldi	r30, 0x09	; 9
     892:	0c 94 71 0e 	jmp	0x1ce2	; 0x1ce2 <__epilogue_restores__+0x12>

00000896 <__fixsfsi>:
     896:	ac e0       	ldi	r26, 0x0C	; 12
     898:	b0 e0       	ldi	r27, 0x00	; 0
     89a:	e1 e5       	ldi	r30, 0x51	; 81
     89c:	f4 e0       	ldi	r31, 0x04	; 4
     89e:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__prologue_saves__+0x20>
     8a2:	69 83       	std	Y+1, r22	; 0x01
     8a4:	7a 83       	std	Y+2, r23	; 0x02
     8a6:	8b 83       	std	Y+3, r24	; 0x03
     8a8:	9c 83       	std	Y+4, r25	; 0x04
     8aa:	ce 01       	movw	r24, r28
     8ac:	01 96       	adiw	r24, 0x01	; 1
     8ae:	be 01       	movw	r22, r28
     8b0:	6b 5f       	subi	r22, 0xFB	; 251
     8b2:	7f 4f       	sbci	r23, 0xFF	; 255
     8b4:	0e 94 c3 05 	call	0xb86	; 0xb86 <__unpack_f>
     8b8:	8d 81       	ldd	r24, Y+5	; 0x05
     8ba:	82 30       	cpi	r24, 0x02	; 2
     8bc:	61 f1       	breq	.+88     	; 0x916 <__fixsfsi+0x80>
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	50 f1       	brcs	.+84     	; 0x916 <__fixsfsi+0x80>
     8c2:	84 30       	cpi	r24, 0x04	; 4
     8c4:	21 f4       	brne	.+8      	; 0x8ce <__fixsfsi+0x38>
     8c6:	8e 81       	ldd	r24, Y+6	; 0x06
     8c8:	88 23       	and	r24, r24
     8ca:	51 f1       	breq	.+84     	; 0x920 <__fixsfsi+0x8a>
     8cc:	2e c0       	rjmp	.+92     	; 0x92a <__fixsfsi+0x94>
     8ce:	2f 81       	ldd	r18, Y+7	; 0x07
     8d0:	38 85       	ldd	r19, Y+8	; 0x08
     8d2:	37 fd       	sbrc	r19, 7
     8d4:	20 c0       	rjmp	.+64     	; 0x916 <__fixsfsi+0x80>
     8d6:	6e 81       	ldd	r22, Y+6	; 0x06
     8d8:	2f 31       	cpi	r18, 0x1F	; 31
     8da:	31 05       	cpc	r19, r1
     8dc:	1c f0       	brlt	.+6      	; 0x8e4 <__fixsfsi+0x4e>
     8de:	66 23       	and	r22, r22
     8e0:	f9 f0       	breq	.+62     	; 0x920 <__fixsfsi+0x8a>
     8e2:	23 c0       	rjmp	.+70     	; 0x92a <__fixsfsi+0x94>
     8e4:	8e e1       	ldi	r24, 0x1E	; 30
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	82 1b       	sub	r24, r18
     8ea:	93 0b       	sbc	r25, r19
     8ec:	29 85       	ldd	r18, Y+9	; 0x09
     8ee:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f0:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f2:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f4:	04 c0       	rjmp	.+8      	; 0x8fe <__fixsfsi+0x68>
     8f6:	56 95       	lsr	r21
     8f8:	47 95       	ror	r20
     8fa:	37 95       	ror	r19
     8fc:	27 95       	ror	r18
     8fe:	8a 95       	dec	r24
     900:	d2 f7       	brpl	.-12     	; 0x8f6 <__fixsfsi+0x60>
     902:	66 23       	and	r22, r22
     904:	b1 f0       	breq	.+44     	; 0x932 <__fixsfsi+0x9c>
     906:	50 95       	com	r21
     908:	40 95       	com	r20
     90a:	30 95       	com	r19
     90c:	21 95       	neg	r18
     90e:	3f 4f       	sbci	r19, 0xFF	; 255
     910:	4f 4f       	sbci	r20, 0xFF	; 255
     912:	5f 4f       	sbci	r21, 0xFF	; 255
     914:	0e c0       	rjmp	.+28     	; 0x932 <__fixsfsi+0x9c>
     916:	20 e0       	ldi	r18, 0x00	; 0
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	40 e0       	ldi	r20, 0x00	; 0
     91c:	50 e0       	ldi	r21, 0x00	; 0
     91e:	09 c0       	rjmp	.+18     	; 0x932 <__fixsfsi+0x9c>
     920:	2f ef       	ldi	r18, 0xFF	; 255
     922:	3f ef       	ldi	r19, 0xFF	; 255
     924:	4f ef       	ldi	r20, 0xFF	; 255
     926:	5f e7       	ldi	r21, 0x7F	; 127
     928:	04 c0       	rjmp	.+8      	; 0x932 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e8       	ldi	r21, 0x80	; 128
     932:	b9 01       	movw	r22, r18
     934:	ca 01       	movw	r24, r20
     936:	2c 96       	adiw	r28, 0x0c	; 12
     938:	e2 e0       	ldi	r30, 0x02	; 2
     93a:	0c 94 78 0e 	jmp	0x1cf0	; 0x1cf0 <__epilogue_restores__+0x20>

0000093e <__clzsi2>:
     93e:	ef 92       	push	r14
     940:	ff 92       	push	r15
     942:	0f 93       	push	r16
     944:	1f 93       	push	r17
     946:	7b 01       	movw	r14, r22
     948:	8c 01       	movw	r16, r24
     94a:	80 e0       	ldi	r24, 0x00	; 0
     94c:	e8 16       	cp	r14, r24
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	f8 06       	cpc	r15, r24
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	08 07       	cpc	r16, r24
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	18 07       	cpc	r17, r24
     95a:	88 f4       	brcc	.+34     	; 0x97e <__clzsi2+0x40>
     95c:	8f ef       	ldi	r24, 0xFF	; 255
     95e:	e8 16       	cp	r14, r24
     960:	f1 04       	cpc	r15, r1
     962:	01 05       	cpc	r16, r1
     964:	11 05       	cpc	r17, r1
     966:	31 f0       	breq	.+12     	; 0x974 <__clzsi2+0x36>
     968:	28 f0       	brcs	.+10     	; 0x974 <__clzsi2+0x36>
     96a:	88 e0       	ldi	r24, 0x08	; 8
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	a0 e0       	ldi	r26, 0x00	; 0
     970:	b0 e0       	ldi	r27, 0x00	; 0
     972:	17 c0       	rjmp	.+46     	; 0x9a2 <__clzsi2+0x64>
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	a0 e0       	ldi	r26, 0x00	; 0
     97a:	b0 e0       	ldi	r27, 0x00	; 0
     97c:	12 c0       	rjmp	.+36     	; 0x9a2 <__clzsi2+0x64>
     97e:	80 e0       	ldi	r24, 0x00	; 0
     980:	e8 16       	cp	r14, r24
     982:	80 e0       	ldi	r24, 0x00	; 0
     984:	f8 06       	cpc	r15, r24
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	08 07       	cpc	r16, r24
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	18 07       	cpc	r17, r24
     98e:	28 f0       	brcs	.+10     	; 0x99a <__clzsi2+0x5c>
     990:	88 e1       	ldi	r24, 0x18	; 24
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	a0 e0       	ldi	r26, 0x00	; 0
     996:	b0 e0       	ldi	r27, 0x00	; 0
     998:	04 c0       	rjmp	.+8      	; 0x9a2 <__clzsi2+0x64>
     99a:	80 e1       	ldi	r24, 0x10	; 16
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	a0 e0       	ldi	r26, 0x00	; 0
     9a0:	b0 e0       	ldi	r27, 0x00	; 0
     9a2:	20 e2       	ldi	r18, 0x20	; 32
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 e0       	ldi	r20, 0x00	; 0
     9a8:	50 e0       	ldi	r21, 0x00	; 0
     9aa:	28 1b       	sub	r18, r24
     9ac:	39 0b       	sbc	r19, r25
     9ae:	4a 0b       	sbc	r20, r26
     9b0:	5b 0b       	sbc	r21, r27
     9b2:	04 c0       	rjmp	.+8      	; 0x9bc <__clzsi2+0x7e>
     9b4:	16 95       	lsr	r17
     9b6:	07 95       	ror	r16
     9b8:	f7 94       	ror	r15
     9ba:	e7 94       	ror	r14
     9bc:	8a 95       	dec	r24
     9be:	d2 f7       	brpl	.-12     	; 0x9b4 <__clzsi2+0x76>
     9c0:	f7 01       	movw	r30, r14
     9c2:	e8 59       	subi	r30, 0x98	; 152
     9c4:	ff 4f       	sbci	r31, 0xFF	; 255
     9c6:	80 81       	ld	r24, Z
     9c8:	28 1b       	sub	r18, r24
     9ca:	31 09       	sbc	r19, r1
     9cc:	41 09       	sbc	r20, r1
     9ce:	51 09       	sbc	r21, r1
     9d0:	c9 01       	movw	r24, r18
     9d2:	1f 91       	pop	r17
     9d4:	0f 91       	pop	r16
     9d6:	ff 90       	pop	r15
     9d8:	ef 90       	pop	r14
     9da:	08 95       	ret

000009dc <__pack_f>:
     9dc:	df 92       	push	r13
     9de:	ef 92       	push	r14
     9e0:	ff 92       	push	r15
     9e2:	0f 93       	push	r16
     9e4:	1f 93       	push	r17
     9e6:	fc 01       	movw	r30, r24
     9e8:	e4 80       	ldd	r14, Z+4	; 0x04
     9ea:	f5 80       	ldd	r15, Z+5	; 0x05
     9ec:	06 81       	ldd	r16, Z+6	; 0x06
     9ee:	17 81       	ldd	r17, Z+7	; 0x07
     9f0:	d1 80       	ldd	r13, Z+1	; 0x01
     9f2:	80 81       	ld	r24, Z
     9f4:	82 30       	cpi	r24, 0x02	; 2
     9f6:	48 f4       	brcc	.+18     	; 0xa0a <__pack_f+0x2e>
     9f8:	80 e0       	ldi	r24, 0x00	; 0
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e1       	ldi	r26, 0x10	; 16
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	e8 2a       	or	r14, r24
     a02:	f9 2a       	or	r15, r25
     a04:	0a 2b       	or	r16, r26
     a06:	1b 2b       	or	r17, r27
     a08:	a5 c0       	rjmp	.+330    	; 0xb54 <__pack_f+0x178>
     a0a:	84 30       	cpi	r24, 0x04	; 4
     a0c:	09 f4       	brne	.+2      	; 0xa10 <__pack_f+0x34>
     a0e:	9f c0       	rjmp	.+318    	; 0xb4e <__pack_f+0x172>
     a10:	82 30       	cpi	r24, 0x02	; 2
     a12:	21 f4       	brne	.+8      	; 0xa1c <__pack_f+0x40>
     a14:	ee 24       	eor	r14, r14
     a16:	ff 24       	eor	r15, r15
     a18:	87 01       	movw	r16, r14
     a1a:	05 c0       	rjmp	.+10     	; 0xa26 <__pack_f+0x4a>
     a1c:	e1 14       	cp	r14, r1
     a1e:	f1 04       	cpc	r15, r1
     a20:	01 05       	cpc	r16, r1
     a22:	11 05       	cpc	r17, r1
     a24:	19 f4       	brne	.+6      	; 0xa2c <__pack_f+0x50>
     a26:	e0 e0       	ldi	r30, 0x00	; 0
     a28:	f0 e0       	ldi	r31, 0x00	; 0
     a2a:	96 c0       	rjmp	.+300    	; 0xb58 <__pack_f+0x17c>
     a2c:	62 81       	ldd	r22, Z+2	; 0x02
     a2e:	73 81       	ldd	r23, Z+3	; 0x03
     a30:	9f ef       	ldi	r25, 0xFF	; 255
     a32:	62 38       	cpi	r22, 0x82	; 130
     a34:	79 07       	cpc	r23, r25
     a36:	0c f0       	brlt	.+2      	; 0xa3a <__pack_f+0x5e>
     a38:	5b c0       	rjmp	.+182    	; 0xaf0 <__pack_f+0x114>
     a3a:	22 e8       	ldi	r18, 0x82	; 130
     a3c:	3f ef       	ldi	r19, 0xFF	; 255
     a3e:	26 1b       	sub	r18, r22
     a40:	37 0b       	sbc	r19, r23
     a42:	2a 31       	cpi	r18, 0x1A	; 26
     a44:	31 05       	cpc	r19, r1
     a46:	2c f0       	brlt	.+10     	; 0xa52 <__pack_f+0x76>
     a48:	20 e0       	ldi	r18, 0x00	; 0
     a4a:	30 e0       	ldi	r19, 0x00	; 0
     a4c:	40 e0       	ldi	r20, 0x00	; 0
     a4e:	50 e0       	ldi	r21, 0x00	; 0
     a50:	2a c0       	rjmp	.+84     	; 0xaa6 <__pack_f+0xca>
     a52:	b8 01       	movw	r22, r16
     a54:	a7 01       	movw	r20, r14
     a56:	02 2e       	mov	r0, r18
     a58:	04 c0       	rjmp	.+8      	; 0xa62 <__pack_f+0x86>
     a5a:	76 95       	lsr	r23
     a5c:	67 95       	ror	r22
     a5e:	57 95       	ror	r21
     a60:	47 95       	ror	r20
     a62:	0a 94       	dec	r0
     a64:	d2 f7       	brpl	.-12     	; 0xa5a <__pack_f+0x7e>
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	a0 e0       	ldi	r26, 0x00	; 0
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	04 c0       	rjmp	.+8      	; 0xa78 <__pack_f+0x9c>
     a70:	88 0f       	add	r24, r24
     a72:	99 1f       	adc	r25, r25
     a74:	aa 1f       	adc	r26, r26
     a76:	bb 1f       	adc	r27, r27
     a78:	2a 95       	dec	r18
     a7a:	d2 f7       	brpl	.-12     	; 0xa70 <__pack_f+0x94>
     a7c:	01 97       	sbiw	r24, 0x01	; 1
     a7e:	a1 09       	sbc	r26, r1
     a80:	b1 09       	sbc	r27, r1
     a82:	8e 21       	and	r24, r14
     a84:	9f 21       	and	r25, r15
     a86:	a0 23       	and	r26, r16
     a88:	b1 23       	and	r27, r17
     a8a:	00 97       	sbiw	r24, 0x00	; 0
     a8c:	a1 05       	cpc	r26, r1
     a8e:	b1 05       	cpc	r27, r1
     a90:	21 f0       	breq	.+8      	; 0xa9a <__pack_f+0xbe>
     a92:	81 e0       	ldi	r24, 0x01	; 1
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	a0 e0       	ldi	r26, 0x00	; 0
     a98:	b0 e0       	ldi	r27, 0x00	; 0
     a9a:	9a 01       	movw	r18, r20
     a9c:	ab 01       	movw	r20, r22
     a9e:	28 2b       	or	r18, r24
     aa0:	39 2b       	or	r19, r25
     aa2:	4a 2b       	or	r20, r26
     aa4:	5b 2b       	or	r21, r27
     aa6:	da 01       	movw	r26, r20
     aa8:	c9 01       	movw	r24, r18
     aaa:	8f 77       	andi	r24, 0x7F	; 127
     aac:	90 70       	andi	r25, 0x00	; 0
     aae:	a0 70       	andi	r26, 0x00	; 0
     ab0:	b0 70       	andi	r27, 0x00	; 0
     ab2:	80 34       	cpi	r24, 0x40	; 64
     ab4:	91 05       	cpc	r25, r1
     ab6:	a1 05       	cpc	r26, r1
     ab8:	b1 05       	cpc	r27, r1
     aba:	39 f4       	brne	.+14     	; 0xaca <__pack_f+0xee>
     abc:	27 ff       	sbrs	r18, 7
     abe:	09 c0       	rjmp	.+18     	; 0xad2 <__pack_f+0xf6>
     ac0:	20 5c       	subi	r18, 0xC0	; 192
     ac2:	3f 4f       	sbci	r19, 0xFF	; 255
     ac4:	4f 4f       	sbci	r20, 0xFF	; 255
     ac6:	5f 4f       	sbci	r21, 0xFF	; 255
     ac8:	04 c0       	rjmp	.+8      	; 0xad2 <__pack_f+0xf6>
     aca:	21 5c       	subi	r18, 0xC1	; 193
     acc:	3f 4f       	sbci	r19, 0xFF	; 255
     ace:	4f 4f       	sbci	r20, 0xFF	; 255
     ad0:	5f 4f       	sbci	r21, 0xFF	; 255
     ad2:	e0 e0       	ldi	r30, 0x00	; 0
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	20 30       	cpi	r18, 0x00	; 0
     ad8:	a0 e0       	ldi	r26, 0x00	; 0
     ada:	3a 07       	cpc	r19, r26
     adc:	a0 e0       	ldi	r26, 0x00	; 0
     ade:	4a 07       	cpc	r20, r26
     ae0:	a0 e4       	ldi	r26, 0x40	; 64
     ae2:	5a 07       	cpc	r21, r26
     ae4:	10 f0       	brcs	.+4      	; 0xaea <__pack_f+0x10e>
     ae6:	e1 e0       	ldi	r30, 0x01	; 1
     ae8:	f0 e0       	ldi	r31, 0x00	; 0
     aea:	79 01       	movw	r14, r18
     aec:	8a 01       	movw	r16, r20
     aee:	27 c0       	rjmp	.+78     	; 0xb3e <__pack_f+0x162>
     af0:	60 38       	cpi	r22, 0x80	; 128
     af2:	71 05       	cpc	r23, r1
     af4:	64 f5       	brge	.+88     	; 0xb4e <__pack_f+0x172>
     af6:	fb 01       	movw	r30, r22
     af8:	e1 58       	subi	r30, 0x81	; 129
     afa:	ff 4f       	sbci	r31, 0xFF	; 255
     afc:	d8 01       	movw	r26, r16
     afe:	c7 01       	movw	r24, r14
     b00:	8f 77       	andi	r24, 0x7F	; 127
     b02:	90 70       	andi	r25, 0x00	; 0
     b04:	a0 70       	andi	r26, 0x00	; 0
     b06:	b0 70       	andi	r27, 0x00	; 0
     b08:	80 34       	cpi	r24, 0x40	; 64
     b0a:	91 05       	cpc	r25, r1
     b0c:	a1 05       	cpc	r26, r1
     b0e:	b1 05       	cpc	r27, r1
     b10:	39 f4       	brne	.+14     	; 0xb20 <__pack_f+0x144>
     b12:	e7 fe       	sbrs	r14, 7
     b14:	0d c0       	rjmp	.+26     	; 0xb30 <__pack_f+0x154>
     b16:	80 e4       	ldi	r24, 0x40	; 64
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	a0 e0       	ldi	r26, 0x00	; 0
     b1c:	b0 e0       	ldi	r27, 0x00	; 0
     b1e:	04 c0       	rjmp	.+8      	; 0xb28 <__pack_f+0x14c>
     b20:	8f e3       	ldi	r24, 0x3F	; 63
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	a0 e0       	ldi	r26, 0x00	; 0
     b26:	b0 e0       	ldi	r27, 0x00	; 0
     b28:	e8 0e       	add	r14, r24
     b2a:	f9 1e       	adc	r15, r25
     b2c:	0a 1f       	adc	r16, r26
     b2e:	1b 1f       	adc	r17, r27
     b30:	17 ff       	sbrs	r17, 7
     b32:	05 c0       	rjmp	.+10     	; 0xb3e <__pack_f+0x162>
     b34:	16 95       	lsr	r17
     b36:	07 95       	ror	r16
     b38:	f7 94       	ror	r15
     b3a:	e7 94       	ror	r14
     b3c:	31 96       	adiw	r30, 0x01	; 1
     b3e:	87 e0       	ldi	r24, 0x07	; 7
     b40:	16 95       	lsr	r17
     b42:	07 95       	ror	r16
     b44:	f7 94       	ror	r15
     b46:	e7 94       	ror	r14
     b48:	8a 95       	dec	r24
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__pack_f+0x164>
     b4c:	05 c0       	rjmp	.+10     	; 0xb58 <__pack_f+0x17c>
     b4e:	ee 24       	eor	r14, r14
     b50:	ff 24       	eor	r15, r15
     b52:	87 01       	movw	r16, r14
     b54:	ef ef       	ldi	r30, 0xFF	; 255
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	6e 2f       	mov	r22, r30
     b5a:	67 95       	ror	r22
     b5c:	66 27       	eor	r22, r22
     b5e:	67 95       	ror	r22
     b60:	90 2f       	mov	r25, r16
     b62:	9f 77       	andi	r25, 0x7F	; 127
     b64:	d7 94       	ror	r13
     b66:	dd 24       	eor	r13, r13
     b68:	d7 94       	ror	r13
     b6a:	8e 2f       	mov	r24, r30
     b6c:	86 95       	lsr	r24
     b6e:	49 2f       	mov	r20, r25
     b70:	46 2b       	or	r20, r22
     b72:	58 2f       	mov	r21, r24
     b74:	5d 29       	or	r21, r13
     b76:	b7 01       	movw	r22, r14
     b78:	ca 01       	movw	r24, r20
     b7a:	1f 91       	pop	r17
     b7c:	0f 91       	pop	r16
     b7e:	ff 90       	pop	r15
     b80:	ef 90       	pop	r14
     b82:	df 90       	pop	r13
     b84:	08 95       	ret

00000b86 <__unpack_f>:
     b86:	fc 01       	movw	r30, r24
     b88:	db 01       	movw	r26, r22
     b8a:	40 81       	ld	r20, Z
     b8c:	51 81       	ldd	r21, Z+1	; 0x01
     b8e:	22 81       	ldd	r18, Z+2	; 0x02
     b90:	62 2f       	mov	r22, r18
     b92:	6f 77       	andi	r22, 0x7F	; 127
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	22 1f       	adc	r18, r18
     b98:	22 27       	eor	r18, r18
     b9a:	22 1f       	adc	r18, r18
     b9c:	93 81       	ldd	r25, Z+3	; 0x03
     b9e:	89 2f       	mov	r24, r25
     ba0:	88 0f       	add	r24, r24
     ba2:	82 2b       	or	r24, r18
     ba4:	28 2f       	mov	r18, r24
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	99 1f       	adc	r25, r25
     baa:	99 27       	eor	r25, r25
     bac:	99 1f       	adc	r25, r25
     bae:	11 96       	adiw	r26, 0x01	; 1
     bb0:	9c 93       	st	X, r25
     bb2:	11 97       	sbiw	r26, 0x01	; 1
     bb4:	21 15       	cp	r18, r1
     bb6:	31 05       	cpc	r19, r1
     bb8:	a9 f5       	brne	.+106    	; 0xc24 <__unpack_f+0x9e>
     bba:	41 15       	cp	r20, r1
     bbc:	51 05       	cpc	r21, r1
     bbe:	61 05       	cpc	r22, r1
     bc0:	71 05       	cpc	r23, r1
     bc2:	11 f4       	brne	.+4      	; 0xbc8 <__unpack_f+0x42>
     bc4:	82 e0       	ldi	r24, 0x02	; 2
     bc6:	37 c0       	rjmp	.+110    	; 0xc36 <__unpack_f+0xb0>
     bc8:	82 e8       	ldi	r24, 0x82	; 130
     bca:	9f ef       	ldi	r25, 0xFF	; 255
     bcc:	13 96       	adiw	r26, 0x03	; 3
     bce:	9c 93       	st	X, r25
     bd0:	8e 93       	st	-X, r24
     bd2:	12 97       	sbiw	r26, 0x02	; 2
     bd4:	9a 01       	movw	r18, r20
     bd6:	ab 01       	movw	r20, r22
     bd8:	67 e0       	ldi	r22, 0x07	; 7
     bda:	22 0f       	add	r18, r18
     bdc:	33 1f       	adc	r19, r19
     bde:	44 1f       	adc	r20, r20
     be0:	55 1f       	adc	r21, r21
     be2:	6a 95       	dec	r22
     be4:	d1 f7       	brne	.-12     	; 0xbda <__unpack_f+0x54>
     be6:	83 e0       	ldi	r24, 0x03	; 3
     be8:	8c 93       	st	X, r24
     bea:	0d c0       	rjmp	.+26     	; 0xc06 <__unpack_f+0x80>
     bec:	22 0f       	add	r18, r18
     bee:	33 1f       	adc	r19, r19
     bf0:	44 1f       	adc	r20, r20
     bf2:	55 1f       	adc	r21, r21
     bf4:	12 96       	adiw	r26, 0x02	; 2
     bf6:	8d 91       	ld	r24, X+
     bf8:	9c 91       	ld	r25, X
     bfa:	13 97       	sbiw	r26, 0x03	; 3
     bfc:	01 97       	sbiw	r24, 0x01	; 1
     bfe:	13 96       	adiw	r26, 0x03	; 3
     c00:	9c 93       	st	X, r25
     c02:	8e 93       	st	-X, r24
     c04:	12 97       	sbiw	r26, 0x02	; 2
     c06:	20 30       	cpi	r18, 0x00	; 0
     c08:	80 e0       	ldi	r24, 0x00	; 0
     c0a:	38 07       	cpc	r19, r24
     c0c:	80 e0       	ldi	r24, 0x00	; 0
     c0e:	48 07       	cpc	r20, r24
     c10:	80 e4       	ldi	r24, 0x40	; 64
     c12:	58 07       	cpc	r21, r24
     c14:	58 f3       	brcs	.-42     	; 0xbec <__unpack_f+0x66>
     c16:	14 96       	adiw	r26, 0x04	; 4
     c18:	2d 93       	st	X+, r18
     c1a:	3d 93       	st	X+, r19
     c1c:	4d 93       	st	X+, r20
     c1e:	5c 93       	st	X, r21
     c20:	17 97       	sbiw	r26, 0x07	; 7
     c22:	08 95       	ret
     c24:	2f 3f       	cpi	r18, 0xFF	; 255
     c26:	31 05       	cpc	r19, r1
     c28:	79 f4       	brne	.+30     	; 0xc48 <__unpack_f+0xc2>
     c2a:	41 15       	cp	r20, r1
     c2c:	51 05       	cpc	r21, r1
     c2e:	61 05       	cpc	r22, r1
     c30:	71 05       	cpc	r23, r1
     c32:	19 f4       	brne	.+6      	; 0xc3a <__unpack_f+0xb4>
     c34:	84 e0       	ldi	r24, 0x04	; 4
     c36:	8c 93       	st	X, r24
     c38:	08 95       	ret
     c3a:	64 ff       	sbrs	r22, 4
     c3c:	03 c0       	rjmp	.+6      	; 0xc44 <__unpack_f+0xbe>
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	8c 93       	st	X, r24
     c42:	12 c0       	rjmp	.+36     	; 0xc68 <__unpack_f+0xe2>
     c44:	1c 92       	st	X, r1
     c46:	10 c0       	rjmp	.+32     	; 0xc68 <__unpack_f+0xe2>
     c48:	2f 57       	subi	r18, 0x7F	; 127
     c4a:	30 40       	sbci	r19, 0x00	; 0
     c4c:	13 96       	adiw	r26, 0x03	; 3
     c4e:	3c 93       	st	X, r19
     c50:	2e 93       	st	-X, r18
     c52:	12 97       	sbiw	r26, 0x02	; 2
     c54:	83 e0       	ldi	r24, 0x03	; 3
     c56:	8c 93       	st	X, r24
     c58:	87 e0       	ldi	r24, 0x07	; 7
     c5a:	44 0f       	add	r20, r20
     c5c:	55 1f       	adc	r21, r21
     c5e:	66 1f       	adc	r22, r22
     c60:	77 1f       	adc	r23, r23
     c62:	8a 95       	dec	r24
     c64:	d1 f7       	brne	.-12     	; 0xc5a <__unpack_f+0xd4>
     c66:	70 64       	ori	r23, 0x40	; 64
     c68:	14 96       	adiw	r26, 0x04	; 4
     c6a:	4d 93       	st	X+, r20
     c6c:	5d 93       	st	X+, r21
     c6e:	6d 93       	st	X+, r22
     c70:	7c 93       	st	X, r23
     c72:	17 97       	sbiw	r26, 0x07	; 7
     c74:	08 95       	ret

00000c76 <__fpcmp_parts_f>:
     c76:	1f 93       	push	r17
     c78:	dc 01       	movw	r26, r24
     c7a:	fb 01       	movw	r30, r22
     c7c:	9c 91       	ld	r25, X
     c7e:	92 30       	cpi	r25, 0x02	; 2
     c80:	08 f4       	brcc	.+2      	; 0xc84 <__fpcmp_parts_f+0xe>
     c82:	47 c0       	rjmp	.+142    	; 0xd12 <__fpcmp_parts_f+0x9c>
     c84:	80 81       	ld	r24, Z
     c86:	82 30       	cpi	r24, 0x02	; 2
     c88:	08 f4       	brcc	.+2      	; 0xc8c <__fpcmp_parts_f+0x16>
     c8a:	43 c0       	rjmp	.+134    	; 0xd12 <__fpcmp_parts_f+0x9c>
     c8c:	94 30       	cpi	r25, 0x04	; 4
     c8e:	51 f4       	brne	.+20     	; 0xca4 <__fpcmp_parts_f+0x2e>
     c90:	11 96       	adiw	r26, 0x01	; 1
     c92:	1c 91       	ld	r17, X
     c94:	84 30       	cpi	r24, 0x04	; 4
     c96:	99 f5       	brne	.+102    	; 0xcfe <__fpcmp_parts_f+0x88>
     c98:	81 81       	ldd	r24, Z+1	; 0x01
     c9a:	68 2f       	mov	r22, r24
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	61 1b       	sub	r22, r17
     ca0:	71 09       	sbc	r23, r1
     ca2:	3f c0       	rjmp	.+126    	; 0xd22 <__fpcmp_parts_f+0xac>
     ca4:	84 30       	cpi	r24, 0x04	; 4
     ca6:	21 f0       	breq	.+8      	; 0xcb0 <__fpcmp_parts_f+0x3a>
     ca8:	92 30       	cpi	r25, 0x02	; 2
     caa:	31 f4       	brne	.+12     	; 0xcb8 <__fpcmp_parts_f+0x42>
     cac:	82 30       	cpi	r24, 0x02	; 2
     cae:	b9 f1       	breq	.+110    	; 0xd1e <__fpcmp_parts_f+0xa8>
     cb0:	81 81       	ldd	r24, Z+1	; 0x01
     cb2:	88 23       	and	r24, r24
     cb4:	89 f1       	breq	.+98     	; 0xd18 <__fpcmp_parts_f+0xa2>
     cb6:	2d c0       	rjmp	.+90     	; 0xd12 <__fpcmp_parts_f+0x9c>
     cb8:	11 96       	adiw	r26, 0x01	; 1
     cba:	1c 91       	ld	r17, X
     cbc:	11 97       	sbiw	r26, 0x01	; 1
     cbe:	82 30       	cpi	r24, 0x02	; 2
     cc0:	f1 f0       	breq	.+60     	; 0xcfe <__fpcmp_parts_f+0x88>
     cc2:	81 81       	ldd	r24, Z+1	; 0x01
     cc4:	18 17       	cp	r17, r24
     cc6:	d9 f4       	brne	.+54     	; 0xcfe <__fpcmp_parts_f+0x88>
     cc8:	12 96       	adiw	r26, 0x02	; 2
     cca:	2d 91       	ld	r18, X+
     ccc:	3c 91       	ld	r19, X
     cce:	13 97       	sbiw	r26, 0x03	; 3
     cd0:	82 81       	ldd	r24, Z+2	; 0x02
     cd2:	93 81       	ldd	r25, Z+3	; 0x03
     cd4:	82 17       	cp	r24, r18
     cd6:	93 07       	cpc	r25, r19
     cd8:	94 f0       	brlt	.+36     	; 0xcfe <__fpcmp_parts_f+0x88>
     cda:	28 17       	cp	r18, r24
     cdc:	39 07       	cpc	r19, r25
     cde:	bc f0       	brlt	.+46     	; 0xd0e <__fpcmp_parts_f+0x98>
     ce0:	14 96       	adiw	r26, 0x04	; 4
     ce2:	8d 91       	ld	r24, X+
     ce4:	9d 91       	ld	r25, X+
     ce6:	0d 90       	ld	r0, X+
     ce8:	bc 91       	ld	r27, X
     cea:	a0 2d       	mov	r26, r0
     cec:	24 81       	ldd	r18, Z+4	; 0x04
     cee:	35 81       	ldd	r19, Z+5	; 0x05
     cf0:	46 81       	ldd	r20, Z+6	; 0x06
     cf2:	57 81       	ldd	r21, Z+7	; 0x07
     cf4:	28 17       	cp	r18, r24
     cf6:	39 07       	cpc	r19, r25
     cf8:	4a 07       	cpc	r20, r26
     cfa:	5b 07       	cpc	r21, r27
     cfc:	18 f4       	brcc	.+6      	; 0xd04 <__fpcmp_parts_f+0x8e>
     cfe:	11 23       	and	r17, r17
     d00:	41 f0       	breq	.+16     	; 0xd12 <__fpcmp_parts_f+0x9c>
     d02:	0a c0       	rjmp	.+20     	; 0xd18 <__fpcmp_parts_f+0xa2>
     d04:	82 17       	cp	r24, r18
     d06:	93 07       	cpc	r25, r19
     d08:	a4 07       	cpc	r26, r20
     d0a:	b5 07       	cpc	r27, r21
     d0c:	40 f4       	brcc	.+16     	; 0xd1e <__fpcmp_parts_f+0xa8>
     d0e:	11 23       	and	r17, r17
     d10:	19 f0       	breq	.+6      	; 0xd18 <__fpcmp_parts_f+0xa2>
     d12:	61 e0       	ldi	r22, 0x01	; 1
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	05 c0       	rjmp	.+10     	; 0xd22 <__fpcmp_parts_f+0xac>
     d18:	6f ef       	ldi	r22, 0xFF	; 255
     d1a:	7f ef       	ldi	r23, 0xFF	; 255
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <__fpcmp_parts_f+0xac>
     d1e:	60 e0       	ldi	r22, 0x00	; 0
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	cb 01       	movw	r24, r22
     d24:	1f 91       	pop	r17
     d26:	08 95       	ret

00000d28 <PwmInit>:
 */ 

#include "Pwm.h"

uint8_t PwmInit(void)
{
     d28:	df 93       	push	r29
     d2a:	cf 93       	push	r28
     d2c:	0f 92       	push	r0
     d2e:	cd b7       	in	r28, 0x3d	; 61
     d30:	de b7       	in	r29, 0x3e	; 62
		
		TWO_BITS_WRITE(TCCR0,COM00,OC0_WAVEFORM_MODE);			
	#endif

	#if (OC1A || OC1B)
		TWO_BITS_WRITE(TCCR1A,WGM10,TWO_BITS_GET(OC1_MODE,BIT0));
     d32:	af e4       	ldi	r26, 0x4F	; 79
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	ef e4       	ldi	r30, 0x4F	; 79
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	80 81       	ld	r24, Z
     d3c:	8c 7f       	andi	r24, 0xFC	; 252
     d3e:	81 60       	ori	r24, 0x01	; 1
     d40:	8c 93       	st	X, r24
		TWO_BITS_WRITE(TCCR1B,WGM12,TWO_BITS_GET(OC1_MODE,BIT2));
     d42:	ae e4       	ldi	r26, 0x4E	; 78
     d44:	b0 e0       	ldi	r27, 0x00	; 0
     d46:	ee e4       	ldi	r30, 0x4E	; 78
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	80 81       	ld	r24, Z
     d4c:	87 7e       	andi	r24, 0xE7	; 231
     d4e:	88 60       	ori	r24, 0x08	; 8
     d50:	8c 93       	st	X, r24
	#endif

	#if OC1A
		TWO_BITS_WRITE(TCCR1A,COM1A0,OC1A_WAVEFORM_MODE);			
     d52:	af e4       	ldi	r26, 0x4F	; 79
     d54:	b0 e0       	ldi	r27, 0x00	; 0
     d56:	ef e4       	ldi	r30, 0x4F	; 79
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	80 81       	ld	r24, Z
     d5c:	8f 73       	andi	r24, 0x3F	; 63
     d5e:	80 68       	ori	r24, 0x80	; 128
     d60:	8c 93       	st	X, r24
	#endif
	
	#if OC1B		
		TWO_BITS_WRITE(TCCR1A,COM1B0,OC1B_WAVEFORM_MODE);		
     d62:	af e4       	ldi	r26, 0x4F	; 79
     d64:	b0 e0       	ldi	r27, 0x00	; 0
     d66:	ef e4       	ldi	r30, 0x4F	; 79
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	80 81       	ld	r24, Z
     d6c:	8f 7c       	andi	r24, 0xCF	; 207
     d6e:	80 62       	ori	r24, 0x20	; 32
     d70:	8c 93       	st	X, r24
		BIT_WRITE(TCCR2,WGM20,BIT_GET(OC2_MODE,BIT0));
		BIT_WRITE(TCCR2,WGM21,BIT_GET(OC2_MODE,BIT1));
		
		TWO_BITS_WRITE(TCCR2,COM20,OC2_WAVEFORM_MODE);			
	#endif	
}
     d72:	0f 90       	pop	r0
     d74:	cf 91       	pop	r28
     d76:	df 91       	pop	r29
     d78:	08 95       	ret

00000d7a <PwmStart>:

uint8_t PwmStart(uint8_t PwmChannelNumber)
{
     d7a:	df 93       	push	r29
     d7c:	cf 93       	push	r28
     d7e:	00 d0       	rcall	.+0      	; 0xd80 <PwmStart+0x6>
     d80:	00 d0       	rcall	.+0      	; 0xd82 <PwmStart+0x8>
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
     d86:	89 83       	std	Y+1, r24	; 0x01
	switch(PwmChannelNumber)
     d88:	89 81       	ldd	r24, Y+1	; 0x01
     d8a:	28 2f       	mov	r18, r24
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	3b 83       	std	Y+3, r19	; 0x03
     d90:	2a 83       	std	Y+2, r18	; 0x02
     d92:	8a 81       	ldd	r24, Y+2	; 0x02
     d94:	9b 81       	ldd	r25, Y+3	; 0x03
     d96:	81 30       	cpi	r24, 0x01	; 1
     d98:	91 05       	cpc	r25, r1
     d9a:	31 f0       	breq	.+12     	; 0xda8 <PwmStart+0x2e>
     d9c:	2a 81       	ldd	r18, Y+2	; 0x02
     d9e:	3b 81       	ldd	r19, Y+3	; 0x03
     da0:	22 30       	cpi	r18, 0x02	; 2
     da2:	31 05       	cpc	r19, r1
     da4:	51 f0       	breq	.+20     	; 0xdba <PwmStart+0x40>
     da6:	11 c0       	rjmp	.+34     	; 0xdca <PwmStart+0x50>
				THREE_BITS_WRITE(TCCR0,CS00,OC0_FREQUANCY);	
			#endif
			break;
		case PWM_CHANNEL_OC1A:
			#if OC1A
				THREE_BITS_WRITE(TCCR1B,CS10,OC1_FREQUANCY);
     da8:	ae e4       	ldi	r26, 0x4E	; 78
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	ee e4       	ldi	r30, 0x4E	; 78
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	80 81       	ld	r24, Z
     db2:	88 7f       	andi	r24, 0xF8	; 248
     db4:	85 60       	ori	r24, 0x05	; 5
     db6:	8c 93       	st	X, r24
     db8:	08 c0       	rjmp	.+16     	; 0xdca <PwmStart+0x50>
			#endif
			break;
		case PWM_CHANNEL_OC1B:
			#if OC1B
				THREE_BITS_WRITE(TCCR1B,CS10,OC1_FREQUANCY);
     dba:	ae e4       	ldi	r26, 0x4E	; 78
     dbc:	b0 e0       	ldi	r27, 0x00	; 0
     dbe:	ee e4       	ldi	r30, 0x4E	; 78
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	80 81       	ld	r24, Z
     dc4:	88 7f       	andi	r24, 0xF8	; 248
     dc6:	85 60       	ori	r24, 0x05	; 5
     dc8:	8c 93       	st	X, r24
			#endif
			break;
		default:
			break;			
	}
}
     dca:	0f 90       	pop	r0
     dcc:	0f 90       	pop	r0
     dce:	0f 90       	pop	r0
     dd0:	0f 90       	pop	r0
     dd2:	cf 91       	pop	r28
     dd4:	df 91       	pop	r29
     dd6:	08 95       	ret

00000dd8 <PwmStop>:

uint8_t PwmStop(uint8_t PwmChannelNumber )
{
     dd8:	df 93       	push	r29
     dda:	cf 93       	push	r28
     ddc:	00 d0       	rcall	.+0      	; 0xdde <PwmStop+0x6>
     dde:	00 d0       	rcall	.+0      	; 0xde0 <PwmStop+0x8>
     de0:	cd b7       	in	r28, 0x3d	; 61
     de2:	de b7       	in	r29, 0x3e	; 62
     de4:	89 83       	std	Y+1, r24	; 0x01
	switch(PwmChannelNumber)
     de6:	89 81       	ldd	r24, Y+1	; 0x01
     de8:	28 2f       	mov	r18, r24
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	3b 83       	std	Y+3, r19	; 0x03
     dee:	2a 83       	std	Y+2, r18	; 0x02
     df0:	8a 81       	ldd	r24, Y+2	; 0x02
     df2:	9b 81       	ldd	r25, Y+3	; 0x03
     df4:	81 30       	cpi	r24, 0x01	; 1
     df6:	91 05       	cpc	r25, r1
     df8:	31 f0       	breq	.+12     	; 0xe06 <PwmStop+0x2e>
     dfa:	2a 81       	ldd	r18, Y+2	; 0x02
     dfc:	3b 81       	ldd	r19, Y+3	; 0x03
     dfe:	22 30       	cpi	r18, 0x02	; 2
     e00:	31 05       	cpc	r19, r1
     e02:	49 f0       	breq	.+18     	; 0xe16 <PwmStop+0x3e>
     e04:	0f c0       	rjmp	.+30     	; 0xe24 <PwmStop+0x4c>
				THREE_BITS_WRITE(TCCR0,CS00,OC0_NO_CLK);
			#endif
			break;
		case PWM_CHANNEL_OC1A:
			#if OC1A
				THREE_BITS_WRITE(TCCR1B,CS10,OC1_NO_CLK);
     e06:	ae e4       	ldi	r26, 0x4E	; 78
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	ee e4       	ldi	r30, 0x4E	; 78
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	80 81       	ld	r24, Z
     e10:	88 7f       	andi	r24, 0xF8	; 248
     e12:	8c 93       	st	X, r24
     e14:	07 c0       	rjmp	.+14     	; 0xe24 <PwmStop+0x4c>
			#endif	
			break;
		case PWM_CHANNEL_OC1B:
			#if OC1B
				THREE_BITS_WRITE(TCCR1B,CS10,OC1_NO_CLK);
     e16:	ae e4       	ldi	r26, 0x4E	; 78
     e18:	b0 e0       	ldi	r27, 0x00	; 0
     e1a:	ee e4       	ldi	r30, 0x4E	; 78
     e1c:	f0 e0       	ldi	r31, 0x00	; 0
     e1e:	80 81       	ld	r24, Z
     e20:	88 7f       	andi	r24, 0xF8	; 248
     e22:	8c 93       	st	X, r24
			#endif
			break;
		default:
			break;			
	}
}
     e24:	0f 90       	pop	r0
     e26:	0f 90       	pop	r0
     e28:	0f 90       	pop	r0
     e2a:	0f 90       	pop	r0
     e2c:	cf 91       	pop	r28
     e2e:	df 91       	pop	r29
     e30:	08 95       	ret

00000e32 <PwmConnect>:

uint8_t PwmConnect(uint8_t PwmChannelNumber)
{
     e32:	df 93       	push	r29
     e34:	cf 93       	push	r28
     e36:	00 d0       	rcall	.+0      	; 0xe38 <PwmConnect+0x6>
     e38:	00 d0       	rcall	.+0      	; 0xe3a <PwmConnect+0x8>
     e3a:	cd b7       	in	r28, 0x3d	; 61
     e3c:	de b7       	in	r29, 0x3e	; 62
     e3e:	89 83       	std	Y+1, r24	; 0x01
	switch(PwmChannelNumber)
     e40:	89 81       	ldd	r24, Y+1	; 0x01
     e42:	28 2f       	mov	r18, r24
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	3b 83       	std	Y+3, r19	; 0x03
     e48:	2a 83       	std	Y+2, r18	; 0x02
     e4a:	8a 81       	ldd	r24, Y+2	; 0x02
     e4c:	9b 81       	ldd	r25, Y+3	; 0x03
     e4e:	81 30       	cpi	r24, 0x01	; 1
     e50:	91 05       	cpc	r25, r1
     e52:	31 f0       	breq	.+12     	; 0xe60 <PwmConnect+0x2e>
     e54:	2a 81       	ldd	r18, Y+2	; 0x02
     e56:	3b 81       	ldd	r19, Y+3	; 0x03
     e58:	22 30       	cpi	r18, 0x02	; 2
     e5a:	31 05       	cpc	r19, r1
     e5c:	51 f0       	breq	.+20     	; 0xe72 <PwmConnect+0x40>
     e5e:	11 c0       	rjmp	.+34     	; 0xe82 <PwmConnect+0x50>
				TWO_BITS_WRITE(TCCR0,COM00,OC0_WAVEFORM_MODE);
			#endif
			break;
		case PWM_CHANNEL_OC1A:
			#if OC1A
				TWO_BITS_WRITE(TCCR1A,COM1A0,OC1A_WAVEFORM_MODE);
     e60:	af e4       	ldi	r26, 0x4F	; 79
     e62:	b0 e0       	ldi	r27, 0x00	; 0
     e64:	ef e4       	ldi	r30, 0x4F	; 79
     e66:	f0 e0       	ldi	r31, 0x00	; 0
     e68:	80 81       	ld	r24, Z
     e6a:	8f 73       	andi	r24, 0x3F	; 63
     e6c:	80 68       	ori	r24, 0x80	; 128
     e6e:	8c 93       	st	X, r24
     e70:	08 c0       	rjmp	.+16     	; 0xe82 <PwmConnect+0x50>
			#endif
			break;
		case PWM_CHANNEL_OC1B:
			#if OC1B
				TWO_BITS_WRITE(TCCR1A,COM1B0,OC1B_WAVEFORM_MODE);
     e72:	af e4       	ldi	r26, 0x4F	; 79
     e74:	b0 e0       	ldi	r27, 0x00	; 0
     e76:	ef e4       	ldi	r30, 0x4F	; 79
     e78:	f0 e0       	ldi	r31, 0x00	; 0
     e7a:	80 81       	ld	r24, Z
     e7c:	8f 7c       	andi	r24, 0xCF	; 207
     e7e:	80 62       	ori	r24, 0x20	; 32
     e80:	8c 93       	st	X, r24
			#endif
			break;
		default:
			break;			
	}	
}
     e82:	0f 90       	pop	r0
     e84:	0f 90       	pop	r0
     e86:	0f 90       	pop	r0
     e88:	0f 90       	pop	r0
     e8a:	cf 91       	pop	r28
     e8c:	df 91       	pop	r29
     e8e:	08 95       	ret

00000e90 <PwmDisconnect>:

uint8_t PwmDisconnect(uint8_t PwmChannelNumber)
{
     e90:	df 93       	push	r29
     e92:	cf 93       	push	r28
     e94:	00 d0       	rcall	.+0      	; 0xe96 <PwmDisconnect+0x6>
     e96:	00 d0       	rcall	.+0      	; 0xe98 <PwmDisconnect+0x8>
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
     e9c:	89 83       	std	Y+1, r24	; 0x01
	switch(PwmChannelNumber)
     e9e:	89 81       	ldd	r24, Y+1	; 0x01
     ea0:	28 2f       	mov	r18, r24
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	3b 83       	std	Y+3, r19	; 0x03
     ea6:	2a 83       	std	Y+2, r18	; 0x02
     ea8:	8a 81       	ldd	r24, Y+2	; 0x02
     eaa:	9b 81       	ldd	r25, Y+3	; 0x03
     eac:	81 30       	cpi	r24, 0x01	; 1
     eae:	91 05       	cpc	r25, r1
     eb0:	31 f0       	breq	.+12     	; 0xebe <PwmDisconnect+0x2e>
     eb2:	2a 81       	ldd	r18, Y+2	; 0x02
     eb4:	3b 81       	ldd	r19, Y+3	; 0x03
     eb6:	22 30       	cpi	r18, 0x02	; 2
     eb8:	31 05       	cpc	r19, r1
     eba:	49 f0       	breq	.+18     	; 0xece <PwmDisconnect+0x3e>
     ebc:	0f c0       	rjmp	.+30     	; 0xedc <PwmDisconnect+0x4c>
				TWO_BITS_WRITE(TCCR0,COM00,DISCONNECT);	
			#endif
			break;
		case PWM_CHANNEL_OC1A:
			#if OC1A
				TWO_BITS_WRITE(TCCR1A,COM1A0,DISCONNECT);
     ebe:	af e4       	ldi	r26, 0x4F	; 79
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	ef e4       	ldi	r30, 0x4F	; 79
     ec4:	f0 e0       	ldi	r31, 0x00	; 0
     ec6:	80 81       	ld	r24, Z
     ec8:	8f 73       	andi	r24, 0x3F	; 63
     eca:	8c 93       	st	X, r24
     ecc:	07 c0       	rjmp	.+14     	; 0xedc <PwmDisconnect+0x4c>
			#endif
			break;
		case PWM_CHANNEL_OC1B:
			#if OC1B
				TWO_BITS_WRITE(TCCR1A,COM1B0,DISCONNECT);
     ece:	af e4       	ldi	r26, 0x4F	; 79
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	ef e4       	ldi	r30, 0x4F	; 79
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	8f 7c       	andi	r24, 0xCF	; 207
     eda:	8c 93       	st	X, r24
			#endif
			break;
		default:
			break;			
	}	
}
     edc:	0f 90       	pop	r0
     ede:	0f 90       	pop	r0
     ee0:	0f 90       	pop	r0
     ee2:	0f 90       	pop	r0
     ee4:	cf 91       	pop	r28
     ee6:	df 91       	pop	r29
     ee8:	08 95       	ret

00000eea <PwmSetDuty>:

uint8_t PwmSetDuty(uint8_t PwmChannelNumber,uint8_t PwmDuty )
{
     eea:	0f 93       	push	r16
     eec:	1f 93       	push	r17
     eee:	df 93       	push	r29
     ef0:	cf 93       	push	r28
     ef2:	00 d0       	rcall	.+0      	; 0xef4 <PwmSetDuty+0xa>
     ef4:	00 d0       	rcall	.+0      	; 0xef6 <PwmSetDuty+0xc>
     ef6:	0f 92       	push	r0
     ef8:	cd b7       	in	r28, 0x3d	; 61
     efa:	de b7       	in	r29, 0x3e	; 62
     efc:	89 83       	std	Y+1, r24	; 0x01
     efe:	6a 83       	std	Y+2, r22	; 0x02
	switch(PwmChannelNumber)
     f00:	89 81       	ldd	r24, Y+1	; 0x01
     f02:	28 2f       	mov	r18, r24
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	3c 83       	std	Y+4, r19	; 0x04
     f08:	2b 83       	std	Y+3, r18	; 0x03
     f0a:	8b 81       	ldd	r24, Y+3	; 0x03
     f0c:	9c 81       	ldd	r25, Y+4	; 0x04
     f0e:	81 30       	cpi	r24, 0x01	; 1
     f10:	91 05       	cpc	r25, r1
     f12:	31 f0       	breq	.+12     	; 0xf20 <PwmSetDuty+0x36>
     f14:	eb 81       	ldd	r30, Y+3	; 0x03
     f16:	fc 81       	ldd	r31, Y+4	; 0x04
     f18:	e2 30       	cpi	r30, 0x02	; 2
     f1a:	f1 05       	cpc	r31, r1
     f1c:	c1 f1       	breq	.+112    	; 0xf8e <PwmSetDuty+0xa4>
     f1e:	6d c0       	rjmp	.+218    	; 0xffa <PwmSetDuty+0x110>
			break;
		case PWM_CHANNEL_OC1A:
			#if OC1A
				#if ((OC1_MODE==OC1_PHASE_CORRECT_8BITS)||(OC1_MODE==OC1_FAST_PWM_8BITS))
					#if OC1A_WAVEFORM_MODE == NON_INVERTING	
						OCR1A = (uint16_t)(((PwmDuty/100.0)*256.0)-1);
     f20:	0a e4       	ldi	r16, 0x4A	; 74
     f22:	10 e0       	ldi	r17, 0x00	; 0
     f24:	8a 81       	ldd	r24, Y+2	; 0x02
     f26:	88 2f       	mov	r24, r24
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	aa 27       	eor	r26, r26
     f2c:	97 fd       	sbrc	r25, 7
     f2e:	a0 95       	com	r26
     f30:	ba 2f       	mov	r27, r26
     f32:	bc 01       	movw	r22, r24
     f34:	cd 01       	movw	r24, r26
     f36:	0e 94 ed 03 	call	0x7da	; 0x7da <__floatsisf>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	bc 01       	movw	r22, r24
     f40:	cd 01       	movw	r24, r26
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	48 ec       	ldi	r20, 0xC8	; 200
     f48:	52 e4       	ldi	r21, 0x42	; 66
     f4a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
     f4e:	dc 01       	movw	r26, r24
     f50:	cb 01       	movw	r24, r22
     f52:	bc 01       	movw	r22, r24
     f54:	cd 01       	movw	r24, r26
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	40 e8       	ldi	r20, 0x80	; 128
     f5c:	53 e4       	ldi	r21, 0x43	; 67
     f5e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f62:	dc 01       	movw	r26, r24
     f64:	cb 01       	movw	r24, r22
     f66:	bc 01       	movw	r22, r24
     f68:	cd 01       	movw	r24, r26
     f6a:	20 e0       	ldi	r18, 0x00	; 0
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	40 e8       	ldi	r20, 0x80	; 128
     f70:	5f e3       	ldi	r21, 0x3F	; 63
     f72:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
     f76:	dc 01       	movw	r26, r24
     f78:	cb 01       	movw	r24, r22
     f7a:	bc 01       	movw	r22, r24
     f7c:	cd 01       	movw	r24, r26
     f7e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f82:	dc 01       	movw	r26, r24
     f84:	cb 01       	movw	r24, r22
     f86:	f8 01       	movw	r30, r16
     f88:	91 83       	std	Z+1, r25	; 0x01
     f8a:	80 83       	st	Z, r24
     f8c:	36 c0       	rjmp	.+108    	; 0xffa <PwmSetDuty+0x110>
			break;
		case PWM_CHANNEL_OC1B:
			#if OC1B
				#if ((OC1_MODE==OC1_PHASE_CORRECT_8BITS)||(OC1_MODE==OC1_FAST_PWM_8BITS))				
					#if OC1B_WAVEFORM_MODE == NON_INVERTING	
						OCR1B = (uint16_t)(((PwmDuty/100.0)*256.0)-1);
     f8e:	08 e4       	ldi	r16, 0x48	; 72
     f90:	10 e0       	ldi	r17, 0x00	; 0
     f92:	8a 81       	ldd	r24, Y+2	; 0x02
     f94:	88 2f       	mov	r24, r24
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	aa 27       	eor	r26, r26
     f9a:	97 fd       	sbrc	r25, 7
     f9c:	a0 95       	com	r26
     f9e:	ba 2f       	mov	r27, r26
     fa0:	bc 01       	movw	r22, r24
     fa2:	cd 01       	movw	r24, r26
     fa4:	0e 94 ed 03 	call	0x7da	; 0x7da <__floatsisf>
     fa8:	dc 01       	movw	r26, r24
     faa:	cb 01       	movw	r24, r22
     fac:	bc 01       	movw	r22, r24
     fae:	cd 01       	movw	r24, r26
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	48 ec       	ldi	r20, 0xC8	; 200
     fb6:	52 e4       	ldi	r21, 0x42	; 66
     fb8:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
     fbc:	dc 01       	movw	r26, r24
     fbe:	cb 01       	movw	r24, r22
     fc0:	bc 01       	movw	r22, r24
     fc2:	cd 01       	movw	r24, r26
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	40 e8       	ldi	r20, 0x80	; 128
     fca:	53 e4       	ldi	r21, 0x43	; 67
     fcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fd0:	dc 01       	movw	r26, r24
     fd2:	cb 01       	movw	r24, r22
     fd4:	bc 01       	movw	r22, r24
     fd6:	cd 01       	movw	r24, r26
     fd8:	20 e0       	ldi	r18, 0x00	; 0
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	40 e8       	ldi	r20, 0x80	; 128
     fde:	5f e3       	ldi	r21, 0x3F	; 63
     fe0:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
     fe4:	dc 01       	movw	r26, r24
     fe6:	cb 01       	movw	r24, r22
     fe8:	bc 01       	movw	r22, r24
     fea:	cd 01       	movw	r24, r26
     fec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ff0:	dc 01       	movw	r26, r24
     ff2:	cb 01       	movw	r24, r22
     ff4:	f8 01       	movw	r30, r16
     ff6:	91 83       	std	Z+1, r25	; 0x01
     ff8:	80 83       	st	Z, r24
			#endif
			break;
		default:
			break;			
	}
     ffa:	0f 90       	pop	r0
     ffc:	0f 90       	pop	r0
     ffe:	0f 90       	pop	r0
    1000:	0f 90       	pop	r0
    1002:	0f 90       	pop	r0
    1004:	cf 91       	pop	r28
    1006:	df 91       	pop	r29
    1008:	1f 91       	pop	r17
    100a:	0f 91       	pop	r16
    100c:	08 95       	ret

0000100e <GpioSetPinDirection>:
 */ 

#include "Gpio.h"

uint8_t GpioSetPinDirection(uint8_t PortName , uint8_t PinNo ,uint8_t PinDirection)
{
    100e:	df 93       	push	r29
    1010:	cf 93       	push	r28
    1012:	00 d0       	rcall	.+0      	; 0x1014 <GpioSetPinDirection+0x6>
    1014:	00 d0       	rcall	.+0      	; 0x1016 <GpioSetPinDirection+0x8>
    1016:	00 d0       	rcall	.+0      	; 0x1018 <GpioSetPinDirection+0xa>
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	89 83       	std	Y+1, r24	; 0x01
    101e:	6a 83       	std	Y+2, r22	; 0x02
    1020:	4b 83       	std	Y+3, r20	; 0x03
	switch(PortName)
    1022:	89 81       	ldd	r24, Y+1	; 0x01
    1024:	28 2f       	mov	r18, r24
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	3d 83       	std	Y+5, r19	; 0x05
    102a:	2c 83       	std	Y+4, r18	; 0x04
    102c:	6c 81       	ldd	r22, Y+4	; 0x04
    102e:	7d 81       	ldd	r23, Y+5	; 0x05
    1030:	61 30       	cpi	r22, 0x01	; 1
    1032:	71 05       	cpc	r23, r1
    1034:	d1 f1       	breq	.+116    	; 0x10aa <GpioSetPinDirection+0x9c>
    1036:	8c 81       	ldd	r24, Y+4	; 0x04
    1038:	9d 81       	ldd	r25, Y+5	; 0x05
    103a:	82 30       	cpi	r24, 0x02	; 2
    103c:	91 05       	cpc	r25, r1
    103e:	34 f4       	brge	.+12     	; 0x104c <GpioSetPinDirection+0x3e>
    1040:	2c 81       	ldd	r18, Y+4	; 0x04
    1042:	3d 81       	ldd	r19, Y+5	; 0x05
    1044:	21 15       	cp	r18, r1
    1046:	31 05       	cpc	r19, r1
    1048:	71 f0       	breq	.+28     	; 0x1066 <GpioSetPinDirection+0x58>
    104a:	94 c0       	rjmp	.+296    	; 0x1174 <GpioSetPinDirection+0x166>
    104c:	6c 81       	ldd	r22, Y+4	; 0x04
    104e:	7d 81       	ldd	r23, Y+5	; 0x05
    1050:	62 30       	cpi	r22, 0x02	; 2
    1052:	71 05       	cpc	r23, r1
    1054:	09 f4       	brne	.+2      	; 0x1058 <GpioSetPinDirection+0x4a>
    1056:	4b c0       	rjmp	.+150    	; 0x10ee <GpioSetPinDirection+0xe0>
    1058:	8c 81       	ldd	r24, Y+4	; 0x04
    105a:	9d 81       	ldd	r25, Y+5	; 0x05
    105c:	83 30       	cpi	r24, 0x03	; 3
    105e:	91 05       	cpc	r25, r1
    1060:	09 f4       	brne	.+2      	; 0x1064 <GpioSetPinDirection+0x56>
    1062:	67 c0       	rjmp	.+206    	; 0x1132 <GpioSetPinDirection+0x124>
    1064:	87 c0       	rjmp	.+270    	; 0x1174 <GpioSetPinDirection+0x166>
	{
		case PORT_A:
			BIT_WRITE(DDRA,PinNo,PinDirection);
    1066:	aa e3       	ldi	r26, 0x3A	; 58
    1068:	b0 e0       	ldi	r27, 0x00	; 0
    106a:	ea e3       	ldi	r30, 0x3A	; 58
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	80 81       	ld	r24, Z
    1070:	48 2f       	mov	r20, r24
    1072:	8a 81       	ldd	r24, Y+2	; 0x02
    1074:	28 2f       	mov	r18, r24
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <GpioSetPinDirection+0x74>
    107e:	88 0f       	add	r24, r24
    1080:	99 1f       	adc	r25, r25
    1082:	2a 95       	dec	r18
    1084:	e2 f7       	brpl	.-8      	; 0x107e <GpioSetPinDirection+0x70>
    1086:	80 95       	com	r24
    1088:	48 23       	and	r20, r24
    108a:	8b 81       	ldd	r24, Y+3	; 0x03
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	8a 81       	ldd	r24, Y+2	; 0x02
    1092:	88 2f       	mov	r24, r24
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	b9 01       	movw	r22, r18
    1098:	02 c0       	rjmp	.+4      	; 0x109e <GpioSetPinDirection+0x90>
    109a:	66 0f       	add	r22, r22
    109c:	77 1f       	adc	r23, r23
    109e:	8a 95       	dec	r24
    10a0:	e2 f7       	brpl	.-8      	; 0x109a <GpioSetPinDirection+0x8c>
    10a2:	cb 01       	movw	r24, r22
    10a4:	84 2b       	or	r24, r20
    10a6:	8c 93       	st	X, r24
    10a8:	65 c0       	rjmp	.+202    	; 0x1174 <GpioSetPinDirection+0x166>
			break;
		case PORT_B:
			BIT_WRITE(DDRB,PinNo,PinDirection);
    10aa:	a7 e3       	ldi	r26, 0x37	; 55
    10ac:	b0 e0       	ldi	r27, 0x00	; 0
    10ae:	e7 e3       	ldi	r30, 0x37	; 55
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	80 81       	ld	r24, Z
    10b4:	48 2f       	mov	r20, r24
    10b6:	8a 81       	ldd	r24, Y+2	; 0x02
    10b8:	28 2f       	mov	r18, r24
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	02 c0       	rjmp	.+4      	; 0x10c6 <GpioSetPinDirection+0xb8>
    10c2:	88 0f       	add	r24, r24
    10c4:	99 1f       	adc	r25, r25
    10c6:	2a 95       	dec	r18
    10c8:	e2 f7       	brpl	.-8      	; 0x10c2 <GpioSetPinDirection+0xb4>
    10ca:	80 95       	com	r24
    10cc:	48 23       	and	r20, r24
    10ce:	8b 81       	ldd	r24, Y+3	; 0x03
    10d0:	28 2f       	mov	r18, r24
    10d2:	30 e0       	ldi	r19, 0x00	; 0
    10d4:	8a 81       	ldd	r24, Y+2	; 0x02
    10d6:	88 2f       	mov	r24, r24
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	b9 01       	movw	r22, r18
    10dc:	02 c0       	rjmp	.+4      	; 0x10e2 <GpioSetPinDirection+0xd4>
    10de:	66 0f       	add	r22, r22
    10e0:	77 1f       	adc	r23, r23
    10e2:	8a 95       	dec	r24
    10e4:	e2 f7       	brpl	.-8      	; 0x10de <GpioSetPinDirection+0xd0>
    10e6:	cb 01       	movw	r24, r22
    10e8:	84 2b       	or	r24, r20
    10ea:	8c 93       	st	X, r24
    10ec:	43 c0       	rjmp	.+134    	; 0x1174 <GpioSetPinDirection+0x166>
			break;
		case PORT_C:
			BIT_WRITE(DDRC,PinNo,PinDirection);
    10ee:	a4 e3       	ldi	r26, 0x34	; 52
    10f0:	b0 e0       	ldi	r27, 0x00	; 0
    10f2:	e4 e3       	ldi	r30, 0x34	; 52
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	48 2f       	mov	r20, r24
    10fa:	8a 81       	ldd	r24, Y+2	; 0x02
    10fc:	28 2f       	mov	r18, r24
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	02 c0       	rjmp	.+4      	; 0x110a <GpioSetPinDirection+0xfc>
    1106:	88 0f       	add	r24, r24
    1108:	99 1f       	adc	r25, r25
    110a:	2a 95       	dec	r18
    110c:	e2 f7       	brpl	.-8      	; 0x1106 <GpioSetPinDirection+0xf8>
    110e:	80 95       	com	r24
    1110:	48 23       	and	r20, r24
    1112:	8b 81       	ldd	r24, Y+3	; 0x03
    1114:	28 2f       	mov	r18, r24
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	8a 81       	ldd	r24, Y+2	; 0x02
    111a:	88 2f       	mov	r24, r24
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	b9 01       	movw	r22, r18
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <GpioSetPinDirection+0x118>
    1122:	66 0f       	add	r22, r22
    1124:	77 1f       	adc	r23, r23
    1126:	8a 95       	dec	r24
    1128:	e2 f7       	brpl	.-8      	; 0x1122 <GpioSetPinDirection+0x114>
    112a:	cb 01       	movw	r24, r22
    112c:	84 2b       	or	r24, r20
    112e:	8c 93       	st	X, r24
    1130:	21 c0       	rjmp	.+66     	; 0x1174 <GpioSetPinDirection+0x166>
			break;
		case PORT_D:
			BIT_WRITE(DDRD,PinNo,PinDirection);
    1132:	a1 e3       	ldi	r26, 0x31	; 49
    1134:	b0 e0       	ldi	r27, 0x00	; 0
    1136:	e1 e3       	ldi	r30, 0x31	; 49
    1138:	f0 e0       	ldi	r31, 0x00	; 0
    113a:	80 81       	ld	r24, Z
    113c:	48 2f       	mov	r20, r24
    113e:	8a 81       	ldd	r24, Y+2	; 0x02
    1140:	28 2f       	mov	r18, r24
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	81 e0       	ldi	r24, 0x01	; 1
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	02 c0       	rjmp	.+4      	; 0x114e <GpioSetPinDirection+0x140>
    114a:	88 0f       	add	r24, r24
    114c:	99 1f       	adc	r25, r25
    114e:	2a 95       	dec	r18
    1150:	e2 f7       	brpl	.-8      	; 0x114a <GpioSetPinDirection+0x13c>
    1152:	80 95       	com	r24
    1154:	48 23       	and	r20, r24
    1156:	8b 81       	ldd	r24, Y+3	; 0x03
    1158:	28 2f       	mov	r18, r24
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	8a 81       	ldd	r24, Y+2	; 0x02
    115e:	88 2f       	mov	r24, r24
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	b9 01       	movw	r22, r18
    1164:	02 c0       	rjmp	.+4      	; 0x116a <GpioSetPinDirection+0x15c>
    1166:	66 0f       	add	r22, r22
    1168:	77 1f       	adc	r23, r23
    116a:	8a 95       	dec	r24
    116c:	e2 f7       	brpl	.-8      	; 0x1166 <GpioSetPinDirection+0x158>
    116e:	cb 01       	movw	r24, r22
    1170:	84 2b       	or	r24, r20
    1172:	8c 93       	st	X, r24
			break;
		default:
			break;
	}
}
    1174:	26 96       	adiw	r28, 0x06	; 6
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	cf 91       	pop	r28
    1182:	df 91       	pop	r29
    1184:	08 95       	ret

00001186 <GpioWritePin>:
uint8_t GpioWritePin(uint8_t PortName , uint8_t PinNo ,uint8_t PinValue)
{
    1186:	df 93       	push	r29
    1188:	cf 93       	push	r28
    118a:	00 d0       	rcall	.+0      	; 0x118c <GpioWritePin+0x6>
    118c:	00 d0       	rcall	.+0      	; 0x118e <GpioWritePin+0x8>
    118e:	00 d0       	rcall	.+0      	; 0x1190 <GpioWritePin+0xa>
    1190:	cd b7       	in	r28, 0x3d	; 61
    1192:	de b7       	in	r29, 0x3e	; 62
    1194:	89 83       	std	Y+1, r24	; 0x01
    1196:	6a 83       	std	Y+2, r22	; 0x02
    1198:	4b 83       	std	Y+3, r20	; 0x03
	switch(PortName)
    119a:	89 81       	ldd	r24, Y+1	; 0x01
    119c:	28 2f       	mov	r18, r24
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	3d 83       	std	Y+5, r19	; 0x05
    11a2:	2c 83       	std	Y+4, r18	; 0x04
    11a4:	6c 81       	ldd	r22, Y+4	; 0x04
    11a6:	7d 81       	ldd	r23, Y+5	; 0x05
    11a8:	61 30       	cpi	r22, 0x01	; 1
    11aa:	71 05       	cpc	r23, r1
    11ac:	d1 f1       	breq	.+116    	; 0x1222 <GpioWritePin+0x9c>
    11ae:	8c 81       	ldd	r24, Y+4	; 0x04
    11b0:	9d 81       	ldd	r25, Y+5	; 0x05
    11b2:	82 30       	cpi	r24, 0x02	; 2
    11b4:	91 05       	cpc	r25, r1
    11b6:	34 f4       	brge	.+12     	; 0x11c4 <GpioWritePin+0x3e>
    11b8:	2c 81       	ldd	r18, Y+4	; 0x04
    11ba:	3d 81       	ldd	r19, Y+5	; 0x05
    11bc:	21 15       	cp	r18, r1
    11be:	31 05       	cpc	r19, r1
    11c0:	71 f0       	breq	.+28     	; 0x11de <GpioWritePin+0x58>
    11c2:	94 c0       	rjmp	.+296    	; 0x12ec <GpioWritePin+0x166>
    11c4:	6c 81       	ldd	r22, Y+4	; 0x04
    11c6:	7d 81       	ldd	r23, Y+5	; 0x05
    11c8:	62 30       	cpi	r22, 0x02	; 2
    11ca:	71 05       	cpc	r23, r1
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <GpioWritePin+0x4a>
    11ce:	4b c0       	rjmp	.+150    	; 0x1266 <GpioWritePin+0xe0>
    11d0:	8c 81       	ldd	r24, Y+4	; 0x04
    11d2:	9d 81       	ldd	r25, Y+5	; 0x05
    11d4:	83 30       	cpi	r24, 0x03	; 3
    11d6:	91 05       	cpc	r25, r1
    11d8:	09 f4       	brne	.+2      	; 0x11dc <GpioWritePin+0x56>
    11da:	67 c0       	rjmp	.+206    	; 0x12aa <GpioWritePin+0x124>
    11dc:	87 c0       	rjmp	.+270    	; 0x12ec <GpioWritePin+0x166>
	{
		case PORT_A:
			BIT_WRITE(PORTA,PinNo,PinValue);
    11de:	ab e3       	ldi	r26, 0x3B	; 59
    11e0:	b0 e0       	ldi	r27, 0x00	; 0
    11e2:	eb e3       	ldi	r30, 0x3B	; 59
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	80 81       	ld	r24, Z
    11e8:	48 2f       	mov	r20, r24
    11ea:	8a 81       	ldd	r24, Y+2	; 0x02
    11ec:	28 2f       	mov	r18, r24
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <GpioWritePin+0x74>
    11f6:	88 0f       	add	r24, r24
    11f8:	99 1f       	adc	r25, r25
    11fa:	2a 95       	dec	r18
    11fc:	e2 f7       	brpl	.-8      	; 0x11f6 <GpioWritePin+0x70>
    11fe:	80 95       	com	r24
    1200:	48 23       	and	r20, r24
    1202:	8b 81       	ldd	r24, Y+3	; 0x03
    1204:	28 2f       	mov	r18, r24
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	8a 81       	ldd	r24, Y+2	; 0x02
    120a:	88 2f       	mov	r24, r24
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	b9 01       	movw	r22, r18
    1210:	02 c0       	rjmp	.+4      	; 0x1216 <GpioWritePin+0x90>
    1212:	66 0f       	add	r22, r22
    1214:	77 1f       	adc	r23, r23
    1216:	8a 95       	dec	r24
    1218:	e2 f7       	brpl	.-8      	; 0x1212 <GpioWritePin+0x8c>
    121a:	cb 01       	movw	r24, r22
    121c:	84 2b       	or	r24, r20
    121e:	8c 93       	st	X, r24
    1220:	65 c0       	rjmp	.+202    	; 0x12ec <GpioWritePin+0x166>
			break;
		case PORT_B:
			BIT_WRITE(PORTB,PinNo,PinValue);
    1222:	a8 e3       	ldi	r26, 0x38	; 56
    1224:	b0 e0       	ldi	r27, 0x00	; 0
    1226:	e8 e3       	ldi	r30, 0x38	; 56
    1228:	f0 e0       	ldi	r31, 0x00	; 0
    122a:	80 81       	ld	r24, Z
    122c:	48 2f       	mov	r20, r24
    122e:	8a 81       	ldd	r24, Y+2	; 0x02
    1230:	28 2f       	mov	r18, r24
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	81 e0       	ldi	r24, 0x01	; 1
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	02 c0       	rjmp	.+4      	; 0x123e <GpioWritePin+0xb8>
    123a:	88 0f       	add	r24, r24
    123c:	99 1f       	adc	r25, r25
    123e:	2a 95       	dec	r18
    1240:	e2 f7       	brpl	.-8      	; 0x123a <GpioWritePin+0xb4>
    1242:	80 95       	com	r24
    1244:	48 23       	and	r20, r24
    1246:	8b 81       	ldd	r24, Y+3	; 0x03
    1248:	28 2f       	mov	r18, r24
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	8a 81       	ldd	r24, Y+2	; 0x02
    124e:	88 2f       	mov	r24, r24
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	b9 01       	movw	r22, r18
    1254:	02 c0       	rjmp	.+4      	; 0x125a <GpioWritePin+0xd4>
    1256:	66 0f       	add	r22, r22
    1258:	77 1f       	adc	r23, r23
    125a:	8a 95       	dec	r24
    125c:	e2 f7       	brpl	.-8      	; 0x1256 <GpioWritePin+0xd0>
    125e:	cb 01       	movw	r24, r22
    1260:	84 2b       	or	r24, r20
    1262:	8c 93       	st	X, r24
    1264:	43 c0       	rjmp	.+134    	; 0x12ec <GpioWritePin+0x166>
			break;
		case PORT_C:
			BIT_WRITE(PORTC,PinNo,PinValue);
    1266:	a5 e3       	ldi	r26, 0x35	; 53
    1268:	b0 e0       	ldi	r27, 0x00	; 0
    126a:	e5 e3       	ldi	r30, 0x35	; 53
    126c:	f0 e0       	ldi	r31, 0x00	; 0
    126e:	80 81       	ld	r24, Z
    1270:	48 2f       	mov	r20, r24
    1272:	8a 81       	ldd	r24, Y+2	; 0x02
    1274:	28 2f       	mov	r18, r24
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	81 e0       	ldi	r24, 0x01	; 1
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <GpioWritePin+0xfc>
    127e:	88 0f       	add	r24, r24
    1280:	99 1f       	adc	r25, r25
    1282:	2a 95       	dec	r18
    1284:	e2 f7       	brpl	.-8      	; 0x127e <GpioWritePin+0xf8>
    1286:	80 95       	com	r24
    1288:	48 23       	and	r20, r24
    128a:	8b 81       	ldd	r24, Y+3	; 0x03
    128c:	28 2f       	mov	r18, r24
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	8a 81       	ldd	r24, Y+2	; 0x02
    1292:	88 2f       	mov	r24, r24
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	b9 01       	movw	r22, r18
    1298:	02 c0       	rjmp	.+4      	; 0x129e <GpioWritePin+0x118>
    129a:	66 0f       	add	r22, r22
    129c:	77 1f       	adc	r23, r23
    129e:	8a 95       	dec	r24
    12a0:	e2 f7       	brpl	.-8      	; 0x129a <GpioWritePin+0x114>
    12a2:	cb 01       	movw	r24, r22
    12a4:	84 2b       	or	r24, r20
    12a6:	8c 93       	st	X, r24
    12a8:	21 c0       	rjmp	.+66     	; 0x12ec <GpioWritePin+0x166>
			break;
		case PORT_D:
			BIT_WRITE(PORTD,PinNo,PinValue);
    12aa:	a2 e3       	ldi	r26, 0x32	; 50
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	e2 e3       	ldi	r30, 0x32	; 50
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	80 81       	ld	r24, Z
    12b4:	48 2f       	mov	r20, r24
    12b6:	8a 81       	ldd	r24, Y+2	; 0x02
    12b8:	28 2f       	mov	r18, r24
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <GpioWritePin+0x140>
    12c2:	88 0f       	add	r24, r24
    12c4:	99 1f       	adc	r25, r25
    12c6:	2a 95       	dec	r18
    12c8:	e2 f7       	brpl	.-8      	; 0x12c2 <GpioWritePin+0x13c>
    12ca:	80 95       	com	r24
    12cc:	48 23       	and	r20, r24
    12ce:	8b 81       	ldd	r24, Y+3	; 0x03
    12d0:	28 2f       	mov	r18, r24
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	8a 81       	ldd	r24, Y+2	; 0x02
    12d6:	88 2f       	mov	r24, r24
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	b9 01       	movw	r22, r18
    12dc:	02 c0       	rjmp	.+4      	; 0x12e2 <GpioWritePin+0x15c>
    12de:	66 0f       	add	r22, r22
    12e0:	77 1f       	adc	r23, r23
    12e2:	8a 95       	dec	r24
    12e4:	e2 f7       	brpl	.-8      	; 0x12de <GpioWritePin+0x158>
    12e6:	cb 01       	movw	r24, r22
    12e8:	84 2b       	or	r24, r20
    12ea:	8c 93       	st	X, r24
			break;
		default:
			break;
	}	
}
    12ec:	26 96       	adiw	r28, 0x06	; 6
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	f8 94       	cli
    12f2:	de bf       	out	0x3e, r29	; 62
    12f4:	0f be       	out	0x3f, r0	; 63
    12f6:	cd bf       	out	0x3d, r28	; 61
    12f8:	cf 91       	pop	r28
    12fa:	df 91       	pop	r29
    12fc:	08 95       	ret

000012fe <GpioTogglePin>:
uint8_t GpioTogglePin(uint8_t PortName,uint8_t PinNo)
{
    12fe:	df 93       	push	r29
    1300:	cf 93       	push	r28
    1302:	00 d0       	rcall	.+0      	; 0x1304 <GpioTogglePin+0x6>
    1304:	00 d0       	rcall	.+0      	; 0x1306 <GpioTogglePin+0x8>
    1306:	0f 92       	push	r0
    1308:	cd b7       	in	r28, 0x3d	; 61
    130a:	de b7       	in	r29, 0x3e	; 62
    130c:	89 83       	std	Y+1, r24	; 0x01
    130e:	6a 83       	std	Y+2, r22	; 0x02
	switch(PortName)
    1310:	89 81       	ldd	r24, Y+1	; 0x01
    1312:	28 2f       	mov	r18, r24
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	3c 83       	std	Y+4, r19	; 0x04
    1318:	2b 83       	std	Y+3, r18	; 0x03
    131a:	8b 81       	ldd	r24, Y+3	; 0x03
    131c:	9c 81       	ldd	r25, Y+4	; 0x04
    131e:	81 30       	cpi	r24, 0x01	; 1
    1320:	91 05       	cpc	r25, r1
    1322:	49 f1       	breq	.+82     	; 0x1376 <GpioTogglePin+0x78>
    1324:	2b 81       	ldd	r18, Y+3	; 0x03
    1326:	3c 81       	ldd	r19, Y+4	; 0x04
    1328:	22 30       	cpi	r18, 0x02	; 2
    132a:	31 05       	cpc	r19, r1
    132c:	2c f4       	brge	.+10     	; 0x1338 <GpioTogglePin+0x3a>
    132e:	8b 81       	ldd	r24, Y+3	; 0x03
    1330:	9c 81       	ldd	r25, Y+4	; 0x04
    1332:	00 97       	sbiw	r24, 0x00	; 0
    1334:	61 f0       	breq	.+24     	; 0x134e <GpioTogglePin+0x50>
    1336:	5a c0       	rjmp	.+180    	; 0x13ec <GpioTogglePin+0xee>
    1338:	2b 81       	ldd	r18, Y+3	; 0x03
    133a:	3c 81       	ldd	r19, Y+4	; 0x04
    133c:	22 30       	cpi	r18, 0x02	; 2
    133e:	31 05       	cpc	r19, r1
    1340:	71 f1       	breq	.+92     	; 0x139e <GpioTogglePin+0xa0>
    1342:	8b 81       	ldd	r24, Y+3	; 0x03
    1344:	9c 81       	ldd	r25, Y+4	; 0x04
    1346:	83 30       	cpi	r24, 0x03	; 3
    1348:	91 05       	cpc	r25, r1
    134a:	e9 f1       	breq	.+122    	; 0x13c6 <GpioTogglePin+0xc8>
    134c:	4f c0       	rjmp	.+158    	; 0x13ec <GpioTogglePin+0xee>
	{
		case PORT_A:
			BIT_TOGGLE(PORTA,PinNo);
    134e:	ab e3       	ldi	r26, 0x3B	; 59
    1350:	b0 e0       	ldi	r27, 0x00	; 0
    1352:	eb e3       	ldi	r30, 0x3B	; 59
    1354:	f0 e0       	ldi	r31, 0x00	; 0
    1356:	80 81       	ld	r24, Z
    1358:	48 2f       	mov	r20, r24
    135a:	8a 81       	ldd	r24, Y+2	; 0x02
    135c:	28 2f       	mov	r18, r24
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	02 2e       	mov	r0, r18
    1366:	02 c0       	rjmp	.+4      	; 0x136c <GpioTogglePin+0x6e>
    1368:	88 0f       	add	r24, r24
    136a:	99 1f       	adc	r25, r25
    136c:	0a 94       	dec	r0
    136e:	e2 f7       	brpl	.-8      	; 0x1368 <GpioTogglePin+0x6a>
    1370:	84 27       	eor	r24, r20
    1372:	8c 93       	st	X, r24
    1374:	3b c0       	rjmp	.+118    	; 0x13ec <GpioTogglePin+0xee>
			break;
		case PORT_B:
			BIT_TOGGLE(PORTB,PinNo);
    1376:	a8 e3       	ldi	r26, 0x38	; 56
    1378:	b0 e0       	ldi	r27, 0x00	; 0
    137a:	e8 e3       	ldi	r30, 0x38	; 56
    137c:	f0 e0       	ldi	r31, 0x00	; 0
    137e:	80 81       	ld	r24, Z
    1380:	48 2f       	mov	r20, r24
    1382:	8a 81       	ldd	r24, Y+2	; 0x02
    1384:	28 2f       	mov	r18, r24
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	81 e0       	ldi	r24, 0x01	; 1
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	02 2e       	mov	r0, r18
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <GpioTogglePin+0x96>
    1390:	88 0f       	add	r24, r24
    1392:	99 1f       	adc	r25, r25
    1394:	0a 94       	dec	r0
    1396:	e2 f7       	brpl	.-8      	; 0x1390 <GpioTogglePin+0x92>
    1398:	84 27       	eor	r24, r20
    139a:	8c 93       	st	X, r24
    139c:	27 c0       	rjmp	.+78     	; 0x13ec <GpioTogglePin+0xee>
			break;
		case PORT_C:
			BIT_TOGGLE(PORTC,PinNo);
    139e:	a5 e3       	ldi	r26, 0x35	; 53
    13a0:	b0 e0       	ldi	r27, 0x00	; 0
    13a2:	e5 e3       	ldi	r30, 0x35	; 53
    13a4:	f0 e0       	ldi	r31, 0x00	; 0
    13a6:	80 81       	ld	r24, Z
    13a8:	48 2f       	mov	r20, r24
    13aa:	8a 81       	ldd	r24, Y+2	; 0x02
    13ac:	28 2f       	mov	r18, r24
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	81 e0       	ldi	r24, 0x01	; 1
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	02 2e       	mov	r0, r18
    13b6:	02 c0       	rjmp	.+4      	; 0x13bc <GpioTogglePin+0xbe>
    13b8:	88 0f       	add	r24, r24
    13ba:	99 1f       	adc	r25, r25
    13bc:	0a 94       	dec	r0
    13be:	e2 f7       	brpl	.-8      	; 0x13b8 <GpioTogglePin+0xba>
    13c0:	84 27       	eor	r24, r20
    13c2:	8c 93       	st	X, r24
    13c4:	13 c0       	rjmp	.+38     	; 0x13ec <GpioTogglePin+0xee>
			break;
		case PORT_D:
			BIT_TOGGLE(PORTD,PinNo);
    13c6:	a2 e3       	ldi	r26, 0x32	; 50
    13c8:	b0 e0       	ldi	r27, 0x00	; 0
    13ca:	e2 e3       	ldi	r30, 0x32	; 50
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	80 81       	ld	r24, Z
    13d0:	48 2f       	mov	r20, r24
    13d2:	8a 81       	ldd	r24, Y+2	; 0x02
    13d4:	28 2f       	mov	r18, r24
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	02 2e       	mov	r0, r18
    13de:	02 c0       	rjmp	.+4      	; 0x13e4 <GpioTogglePin+0xe6>
    13e0:	88 0f       	add	r24, r24
    13e2:	99 1f       	adc	r25, r25
    13e4:	0a 94       	dec	r0
    13e6:	e2 f7       	brpl	.-8      	; 0x13e0 <GpioTogglePin+0xe2>
    13e8:	84 27       	eor	r24, r20
    13ea:	8c 93       	st	X, r24
			break;
		default:
			break;	
	}	
}
    13ec:	0f 90       	pop	r0
    13ee:	0f 90       	pop	r0
    13f0:	0f 90       	pop	r0
    13f2:	0f 90       	pop	r0
    13f4:	0f 90       	pop	r0
    13f6:	cf 91       	pop	r28
    13f8:	df 91       	pop	r29
    13fa:	08 95       	ret

000013fc <GpioReadPin>:
uint8_t GpioReadPin(uint8_t PortName,uint8_t PinNo,ptr_uint8_t PinData)
{
    13fc:	df 93       	push	r29
    13fe:	cf 93       	push	r28
    1400:	cd b7       	in	r28, 0x3d	; 61
    1402:	de b7       	in	r29, 0x3e	; 62
    1404:	27 97       	sbiw	r28, 0x07	; 7
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	f8 94       	cli
    140a:	de bf       	out	0x3e, r29	; 62
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	cd bf       	out	0x3d, r28	; 61
    1410:	89 83       	std	Y+1, r24	; 0x01
    1412:	6a 83       	std	Y+2, r22	; 0x02
    1414:	5c 83       	std	Y+4, r21	; 0x04
    1416:	4b 83       	std	Y+3, r20	; 0x03
	switch(PortName)
    1418:	89 81       	ldd	r24, Y+1	; 0x01
    141a:	28 2f       	mov	r18, r24
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	3e 83       	std	Y+6, r19	; 0x06
    1420:	2d 83       	std	Y+5, r18	; 0x05
    1422:	4d 81       	ldd	r20, Y+5	; 0x05
    1424:	5e 81       	ldd	r21, Y+6	; 0x06
    1426:	41 30       	cpi	r20, 0x01	; 1
    1428:	51 05       	cpc	r21, r1
    142a:	59 f1       	breq	.+86     	; 0x1482 <GpioReadPin+0x86>
    142c:	8d 81       	ldd	r24, Y+5	; 0x05
    142e:	9e 81       	ldd	r25, Y+6	; 0x06
    1430:	82 30       	cpi	r24, 0x02	; 2
    1432:	91 05       	cpc	r25, r1
    1434:	34 f4       	brge	.+12     	; 0x1442 <GpioReadPin+0x46>
    1436:	2d 81       	ldd	r18, Y+5	; 0x05
    1438:	3e 81       	ldd	r19, Y+6	; 0x06
    143a:	21 15       	cp	r18, r1
    143c:	31 05       	cpc	r19, r1
    143e:	69 f0       	breq	.+26     	; 0x145a <GpioReadPin+0x5e>
    1440:	5b c0       	rjmp	.+182    	; 0x14f8 <GpioReadPin+0xfc>
    1442:	4d 81       	ldd	r20, Y+5	; 0x05
    1444:	5e 81       	ldd	r21, Y+6	; 0x06
    1446:	42 30       	cpi	r20, 0x02	; 2
    1448:	51 05       	cpc	r21, r1
    144a:	79 f1       	breq	.+94     	; 0x14aa <GpioReadPin+0xae>
    144c:	8d 81       	ldd	r24, Y+5	; 0x05
    144e:	9e 81       	ldd	r25, Y+6	; 0x06
    1450:	83 30       	cpi	r24, 0x03	; 3
    1452:	91 05       	cpc	r25, r1
    1454:	09 f4       	brne	.+2      	; 0x1458 <GpioReadPin+0x5c>
    1456:	3d c0       	rjmp	.+122    	; 0x14d2 <GpioReadPin+0xd6>
    1458:	4f c0       	rjmp	.+158    	; 0x14f8 <GpioReadPin+0xfc>
	{
		case PORT_A:
			* PinData=BIT_GET(PINA,PinNo);
    145a:	e9 e3       	ldi	r30, 0x39	; 57
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	80 81       	ld	r24, Z
    1460:	28 2f       	mov	r18, r24
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	8a 81       	ldd	r24, Y+2	; 0x02
    1466:	88 2f       	mov	r24, r24
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	a9 01       	movw	r20, r18
    146c:	02 c0       	rjmp	.+4      	; 0x1472 <GpioReadPin+0x76>
    146e:	55 95       	asr	r21
    1470:	47 95       	ror	r20
    1472:	8a 95       	dec	r24
    1474:	e2 f7       	brpl	.-8      	; 0x146e <GpioReadPin+0x72>
    1476:	ca 01       	movw	r24, r20
    1478:	81 70       	andi	r24, 0x01	; 1
    147a:	eb 81       	ldd	r30, Y+3	; 0x03
    147c:	fc 81       	ldd	r31, Y+4	; 0x04
    147e:	80 83       	st	Z, r24
    1480:	3b c0       	rjmp	.+118    	; 0x14f8 <GpioReadPin+0xfc>
			break;
		case PORT_B:
			* PinData=BIT_GET(PINB,PinNo);
    1482:	e6 e3       	ldi	r30, 0x36	; 54
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	80 81       	ld	r24, Z
    1488:	28 2f       	mov	r18, r24
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	8a 81       	ldd	r24, Y+2	; 0x02
    148e:	88 2f       	mov	r24, r24
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	a9 01       	movw	r20, r18
    1494:	02 c0       	rjmp	.+4      	; 0x149a <GpioReadPin+0x9e>
    1496:	55 95       	asr	r21
    1498:	47 95       	ror	r20
    149a:	8a 95       	dec	r24
    149c:	e2 f7       	brpl	.-8      	; 0x1496 <GpioReadPin+0x9a>
    149e:	ca 01       	movw	r24, r20
    14a0:	81 70       	andi	r24, 0x01	; 1
    14a2:	eb 81       	ldd	r30, Y+3	; 0x03
    14a4:	fc 81       	ldd	r31, Y+4	; 0x04
    14a6:	80 83       	st	Z, r24
    14a8:	27 c0       	rjmp	.+78     	; 0x14f8 <GpioReadPin+0xfc>
			break;
		case PORT_C:
			* PinData=BIT_GET(PINC,PinNo);
    14aa:	e3 e3       	ldi	r30, 0x33	; 51
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	80 81       	ld	r24, Z
    14b0:	28 2f       	mov	r18, r24
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	8a 81       	ldd	r24, Y+2	; 0x02
    14b6:	88 2f       	mov	r24, r24
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	a9 01       	movw	r20, r18
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <GpioReadPin+0xc6>
    14be:	55 95       	asr	r21
    14c0:	47 95       	ror	r20
    14c2:	8a 95       	dec	r24
    14c4:	e2 f7       	brpl	.-8      	; 0x14be <GpioReadPin+0xc2>
    14c6:	ca 01       	movw	r24, r20
    14c8:	81 70       	andi	r24, 0x01	; 1
    14ca:	eb 81       	ldd	r30, Y+3	; 0x03
    14cc:	fc 81       	ldd	r31, Y+4	; 0x04
    14ce:	80 83       	st	Z, r24
    14d0:	13 c0       	rjmp	.+38     	; 0x14f8 <GpioReadPin+0xfc>
			break;
		case PORT_D:
			* PinData=BIT_GET(PIND,PinNo);
    14d2:	e0 e3       	ldi	r30, 0x30	; 48
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	80 81       	ld	r24, Z
    14d8:	28 2f       	mov	r18, r24
    14da:	30 e0       	ldi	r19, 0x00	; 0
    14dc:	8a 81       	ldd	r24, Y+2	; 0x02
    14de:	88 2f       	mov	r24, r24
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	a9 01       	movw	r20, r18
    14e4:	02 c0       	rjmp	.+4      	; 0x14ea <GpioReadPin+0xee>
    14e6:	55 95       	asr	r21
    14e8:	47 95       	ror	r20
    14ea:	8a 95       	dec	r24
    14ec:	e2 f7       	brpl	.-8      	; 0x14e6 <GpioReadPin+0xea>
    14ee:	ca 01       	movw	r24, r20
    14f0:	81 70       	andi	r24, 0x01	; 1
    14f2:	eb 81       	ldd	r30, Y+3	; 0x03
    14f4:	fc 81       	ldd	r31, Y+4	; 0x04
    14f6:	80 83       	st	Z, r24
			break;
		default:
			break;
	}
}
    14f8:	27 96       	adiw	r28, 0x07	; 7
    14fa:	0f b6       	in	r0, 0x3f	; 63
    14fc:	f8 94       	cli
    14fe:	de bf       	out	0x3e, r29	; 62
    1500:	0f be       	out	0x3f, r0	; 63
    1502:	cd bf       	out	0x3d, r28	; 61
    1504:	cf 91       	pop	r28
    1506:	df 91       	pop	r29
    1508:	08 95       	ret

0000150a <GpioEnablePinPullup>:


uint8_t GpioEnablePinPullup(uint8_t PortName,uint8_t PinNo)
{
    150a:	df 93       	push	r29
    150c:	cf 93       	push	r28
    150e:	00 d0       	rcall	.+0      	; 0x1510 <GpioEnablePinPullup+0x6>
    1510:	00 d0       	rcall	.+0      	; 0x1512 <GpioEnablePinPullup+0x8>
    1512:	0f 92       	push	r0
    1514:	cd b7       	in	r28, 0x3d	; 61
    1516:	de b7       	in	r29, 0x3e	; 62
    1518:	89 83       	std	Y+1, r24	; 0x01
    151a:	6a 83       	std	Y+2, r22	; 0x02
	switch(PortName)
    151c:	89 81       	ldd	r24, Y+1	; 0x01
    151e:	28 2f       	mov	r18, r24
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	3c 83       	std	Y+4, r19	; 0x04
    1524:	2b 83       	std	Y+3, r18	; 0x03
    1526:	8b 81       	ldd	r24, Y+3	; 0x03
    1528:	9c 81       	ldd	r25, Y+4	; 0x04
    152a:	81 30       	cpi	r24, 0x01	; 1
    152c:	91 05       	cpc	r25, r1
    152e:	b9 f1       	breq	.+110    	; 0x159e <GpioEnablePinPullup+0x94>
    1530:	2b 81       	ldd	r18, Y+3	; 0x03
    1532:	3c 81       	ldd	r19, Y+4	; 0x04
    1534:	22 30       	cpi	r18, 0x02	; 2
    1536:	31 05       	cpc	r19, r1
    1538:	2c f4       	brge	.+10     	; 0x1544 <GpioEnablePinPullup+0x3a>
    153a:	8b 81       	ldd	r24, Y+3	; 0x03
    153c:	9c 81       	ldd	r25, Y+4	; 0x04
    153e:	00 97       	sbiw	r24, 0x00	; 0
    1540:	71 f0       	breq	.+28     	; 0x155e <GpioEnablePinPullup+0x54>
    1542:	8c c0       	rjmp	.+280    	; 0x165c <GpioEnablePinPullup+0x152>
    1544:	2b 81       	ldd	r18, Y+3	; 0x03
    1546:	3c 81       	ldd	r19, Y+4	; 0x04
    1548:	22 30       	cpi	r18, 0x02	; 2
    154a:	31 05       	cpc	r19, r1
    154c:	09 f4       	brne	.+2      	; 0x1550 <GpioEnablePinPullup+0x46>
    154e:	47 c0       	rjmp	.+142    	; 0x15de <GpioEnablePinPullup+0xd4>
    1550:	8b 81       	ldd	r24, Y+3	; 0x03
    1552:	9c 81       	ldd	r25, Y+4	; 0x04
    1554:	83 30       	cpi	r24, 0x03	; 3
    1556:	91 05       	cpc	r25, r1
    1558:	09 f4       	brne	.+2      	; 0x155c <GpioEnablePinPullup+0x52>
    155a:	61 c0       	rjmp	.+194    	; 0x161e <GpioEnablePinPullup+0x114>
    155c:	7f c0       	rjmp	.+254    	; 0x165c <GpioEnablePinPullup+0x152>
	{
		case PORT_A:
			BIT_WRITE(PORTA,PinNo,PIN_HIGH);
    155e:	ab e3       	ldi	r26, 0x3B	; 59
    1560:	b0 e0       	ldi	r27, 0x00	; 0
    1562:	eb e3       	ldi	r30, 0x3B	; 59
    1564:	f0 e0       	ldi	r31, 0x00	; 0
    1566:	80 81       	ld	r24, Z
    1568:	48 2f       	mov	r20, r24
    156a:	8a 81       	ldd	r24, Y+2	; 0x02
    156c:	28 2f       	mov	r18, r24
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	81 e0       	ldi	r24, 0x01	; 1
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	02 c0       	rjmp	.+4      	; 0x157a <GpioEnablePinPullup+0x70>
    1576:	88 0f       	add	r24, r24
    1578:	99 1f       	adc	r25, r25
    157a:	2a 95       	dec	r18
    157c:	e2 f7       	brpl	.-8      	; 0x1576 <GpioEnablePinPullup+0x6c>
    157e:	80 95       	com	r24
    1580:	48 23       	and	r20, r24
    1582:	8a 81       	ldd	r24, Y+2	; 0x02
    1584:	28 2f       	mov	r18, r24
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	02 2e       	mov	r0, r18
    158e:	02 c0       	rjmp	.+4      	; 0x1594 <GpioEnablePinPullup+0x8a>
    1590:	88 0f       	add	r24, r24
    1592:	99 1f       	adc	r25, r25
    1594:	0a 94       	dec	r0
    1596:	e2 f7       	brpl	.-8      	; 0x1590 <GpioEnablePinPullup+0x86>
    1598:	84 2b       	or	r24, r20
    159a:	8c 93       	st	X, r24
    159c:	5f c0       	rjmp	.+190    	; 0x165c <GpioEnablePinPullup+0x152>
			break;
		case PORT_B:
			BIT_WRITE(PORTB,PinNo,PIN_HIGH);
    159e:	a8 e3       	ldi	r26, 0x38	; 56
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	e8 e3       	ldi	r30, 0x38	; 56
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	80 81       	ld	r24, Z
    15a8:	48 2f       	mov	r20, r24
    15aa:	8a 81       	ldd	r24, Y+2	; 0x02
    15ac:	28 2f       	mov	r18, r24
    15ae:	30 e0       	ldi	r19, 0x00	; 0
    15b0:	81 e0       	ldi	r24, 0x01	; 1
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	02 c0       	rjmp	.+4      	; 0x15ba <GpioEnablePinPullup+0xb0>
    15b6:	88 0f       	add	r24, r24
    15b8:	99 1f       	adc	r25, r25
    15ba:	2a 95       	dec	r18
    15bc:	e2 f7       	brpl	.-8      	; 0x15b6 <GpioEnablePinPullup+0xac>
    15be:	80 95       	com	r24
    15c0:	48 23       	and	r20, r24
    15c2:	8a 81       	ldd	r24, Y+2	; 0x02
    15c4:	28 2f       	mov	r18, r24
    15c6:	30 e0       	ldi	r19, 0x00	; 0
    15c8:	81 e0       	ldi	r24, 0x01	; 1
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	02 2e       	mov	r0, r18
    15ce:	02 c0       	rjmp	.+4      	; 0x15d4 <GpioEnablePinPullup+0xca>
    15d0:	88 0f       	add	r24, r24
    15d2:	99 1f       	adc	r25, r25
    15d4:	0a 94       	dec	r0
    15d6:	e2 f7       	brpl	.-8      	; 0x15d0 <GpioEnablePinPullup+0xc6>
    15d8:	84 2b       	or	r24, r20
    15da:	8c 93       	st	X, r24
    15dc:	3f c0       	rjmp	.+126    	; 0x165c <GpioEnablePinPullup+0x152>
			break;                            
		case PORT_C:                          
			BIT_WRITE(PORTC,PinNo,PIN_HIGH);
    15de:	a5 e3       	ldi	r26, 0x35	; 53
    15e0:	b0 e0       	ldi	r27, 0x00	; 0
    15e2:	e5 e3       	ldi	r30, 0x35	; 53
    15e4:	f0 e0       	ldi	r31, 0x00	; 0
    15e6:	80 81       	ld	r24, Z
    15e8:	48 2f       	mov	r20, r24
    15ea:	8a 81       	ldd	r24, Y+2	; 0x02
    15ec:	28 2f       	mov	r18, r24
    15ee:	30 e0       	ldi	r19, 0x00	; 0
    15f0:	81 e0       	ldi	r24, 0x01	; 1
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	02 c0       	rjmp	.+4      	; 0x15fa <GpioEnablePinPullup+0xf0>
    15f6:	88 0f       	add	r24, r24
    15f8:	99 1f       	adc	r25, r25
    15fa:	2a 95       	dec	r18
    15fc:	e2 f7       	brpl	.-8      	; 0x15f6 <GpioEnablePinPullup+0xec>
    15fe:	80 95       	com	r24
    1600:	48 23       	and	r20, r24
    1602:	8a 81       	ldd	r24, Y+2	; 0x02
    1604:	28 2f       	mov	r18, r24
    1606:	30 e0       	ldi	r19, 0x00	; 0
    1608:	81 e0       	ldi	r24, 0x01	; 1
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	02 2e       	mov	r0, r18
    160e:	02 c0       	rjmp	.+4      	; 0x1614 <GpioEnablePinPullup+0x10a>
    1610:	88 0f       	add	r24, r24
    1612:	99 1f       	adc	r25, r25
    1614:	0a 94       	dec	r0
    1616:	e2 f7       	brpl	.-8      	; 0x1610 <GpioEnablePinPullup+0x106>
    1618:	84 2b       	or	r24, r20
    161a:	8c 93       	st	X, r24
    161c:	1f c0       	rjmp	.+62     	; 0x165c <GpioEnablePinPullup+0x152>
			break;                            
		case PORT_D:                          
			BIT_WRITE(PORTD,PinNo,PIN_HIGH);
    161e:	a2 e3       	ldi	r26, 0x32	; 50
    1620:	b0 e0       	ldi	r27, 0x00	; 0
    1622:	e2 e3       	ldi	r30, 0x32	; 50
    1624:	f0 e0       	ldi	r31, 0x00	; 0
    1626:	80 81       	ld	r24, Z
    1628:	48 2f       	mov	r20, r24
    162a:	8a 81       	ldd	r24, Y+2	; 0x02
    162c:	28 2f       	mov	r18, r24
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	02 c0       	rjmp	.+4      	; 0x163a <GpioEnablePinPullup+0x130>
    1636:	88 0f       	add	r24, r24
    1638:	99 1f       	adc	r25, r25
    163a:	2a 95       	dec	r18
    163c:	e2 f7       	brpl	.-8      	; 0x1636 <GpioEnablePinPullup+0x12c>
    163e:	80 95       	com	r24
    1640:	48 23       	and	r20, r24
    1642:	8a 81       	ldd	r24, Y+2	; 0x02
    1644:	28 2f       	mov	r18, r24
    1646:	30 e0       	ldi	r19, 0x00	; 0
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	02 2e       	mov	r0, r18
    164e:	02 c0       	rjmp	.+4      	; 0x1654 <GpioEnablePinPullup+0x14a>
    1650:	88 0f       	add	r24, r24
    1652:	99 1f       	adc	r25, r25
    1654:	0a 94       	dec	r0
    1656:	e2 f7       	brpl	.-8      	; 0x1650 <GpioEnablePinPullup+0x146>
    1658:	84 2b       	or	r24, r20
    165a:	8c 93       	st	X, r24
			break;
		default:
			break;
	}	
}
    165c:	0f 90       	pop	r0
    165e:	0f 90       	pop	r0
    1660:	0f 90       	pop	r0
    1662:	0f 90       	pop	r0
    1664:	0f 90       	pop	r0
    1666:	cf 91       	pop	r28
    1668:	df 91       	pop	r29
    166a:	08 95       	ret

0000166c <MOTOR_init>:
#include"Motor.h"

void MOTOR_init(void) {
    166c:	df 93       	push	r29
    166e:	cf 93       	push	r28
    1670:	cd b7       	in	r28, 0x3d	; 61
    1672:	de b7       	in	r29, 0x3e	; 62
	PwmInit();
    1674:	0e 94 94 06 	call	0xd28	; 0xd28 <PwmInit>
	/*SETTING MOTOR1 DIR PINS TO OUTPUT*/
	GpioSetPinDirection(PORT_D, PIN4, PIN_OUTPUT);
    1678:	83 e0       	ldi	r24, 0x03	; 3
    167a:	64 e0       	ldi	r22, 0x04	; 4
    167c:	41 e0       	ldi	r20, 0x01	; 1
    167e:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
	GpioSetPinDirection(PORT_D, PIN2, PIN_OUTPUT);
    1682:	83 e0       	ldi	r24, 0x03	; 3
    1684:	62 e0       	ldi	r22, 0x02	; 2
    1686:	41 e0       	ldi	r20, 0x01	; 1
    1688:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
	GpioSetPinDirection(PORT_D, PIN3, PIN_OUTPUT);
    168c:	83 e0       	ldi	r24, 0x03	; 3
    168e:	63 e0       	ldi	r22, 0x03	; 3
    1690:	41 e0       	ldi	r20, 0x01	; 1
    1692:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
	/*SETTING MOTOR2 DIR PINS TO OUTPUT*/
	GpioSetPinDirection(PORT_D, PIN5, PIN_OUTPUT);
    1696:	83 e0       	ldi	r24, 0x03	; 3
    1698:	65 e0       	ldi	r22, 0x05	; 5
    169a:	41 e0       	ldi	r20, 0x01	; 1
    169c:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
	GpioSetPinDirection(PORT_D, PIN6, PIN_OUTPUT);
    16a0:	83 e0       	ldi	r24, 0x03	; 3
    16a2:	66 e0       	ldi	r22, 0x06	; 6
    16a4:	41 e0       	ldi	r20, 0x01	; 1
    16a6:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
	GpioSetPinDirection(PORT_D, PIN7, PIN_OUTPUT);
    16aa:	83 e0       	ldi	r24, 0x03	; 3
    16ac:	67 e0       	ldi	r22, 0x07	; 7
    16ae:	41 e0       	ldi	r20, 0x01	; 1
    16b0:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
	/*START THE PWM WAVE*/
	PwmStart(PWM_CHANNEL_OC1A);
    16b4:	81 e0       	ldi	r24, 0x01	; 1
    16b6:	0e 94 bd 06 	call	0xd7a	; 0xd7a <PwmStart>
	/*STOP MOTOER EN PINS AT THE START*/

}
    16ba:	cf 91       	pop	r28
    16bc:	df 91       	pop	r29
    16be:	08 95       	ret

000016c0 <MOTOR_start>:
void MOTOR_start(uint8_t motor_no, uint8_t speed, uint8_t dir) {
    16c0:	df 93       	push	r29
    16c2:	cf 93       	push	r28
    16c4:	cd b7       	in	r28, 0x3d	; 61
    16c6:	de b7       	in	r29, 0x3e	; 62
    16c8:	29 97       	sbiw	r28, 0x09	; 9
    16ca:	0f b6       	in	r0, 0x3f	; 63
    16cc:	f8 94       	cli
    16ce:	de bf       	out	0x3e, r29	; 62
    16d0:	0f be       	out	0x3f, r0	; 63
    16d2:	cd bf       	out	0x3d, r28	; 61
    16d4:	89 83       	std	Y+1, r24	; 0x01
    16d6:	6a 83       	std	Y+2, r22	; 0x02
    16d8:	4b 83       	std	Y+3, r20	; 0x03
	switch (motor_no) {
    16da:	89 81       	ldd	r24, Y+1	; 0x01
    16dc:	28 2f       	mov	r18, r24
    16de:	30 e0       	ldi	r19, 0x00	; 0
    16e0:	39 87       	std	Y+9, r19	; 0x09
    16e2:	28 87       	std	Y+8, r18	; 0x08
    16e4:	88 85       	ldd	r24, Y+8	; 0x08
    16e6:	99 85       	ldd	r25, Y+9	; 0x09
    16e8:	00 97       	sbiw	r24, 0x00	; 0
    16ea:	31 f0       	breq	.+12     	; 0x16f8 <MOTOR_start+0x38>
    16ec:	28 85       	ldd	r18, Y+8	; 0x08
    16ee:	39 85       	ldd	r19, Y+9	; 0x09
    16f0:	21 30       	cpi	r18, 0x01	; 1
    16f2:	31 05       	cpc	r19, r1
    16f4:	69 f1       	breq	.+90     	; 0x1750 <MOTOR_start+0x90>
    16f6:	56 c0       	rjmp	.+172    	; 0x17a4 <MOTOR_start+0xe4>
	case MOTER1 :
		PwmSetDuty(PWM_CHANNEL_OC1A, speed);
    16f8:	81 e0       	ldi	r24, 0x01	; 1
    16fa:	6a 81       	ldd	r22, Y+2	; 0x02
    16fc:	0e 94 75 07 	call	0xeea	; 0xeea <PwmSetDuty>
		PwmConnect(PWM_CHANNEL_OC1A);
    1700:	81 e0       	ldi	r24, 0x01	; 1
    1702:	0e 94 19 07 	call	0xe32	; 0xe32 <PwmConnect>
		switch (dir) {
    1706:	8b 81       	ldd	r24, Y+3	; 0x03
    1708:	28 2f       	mov	r18, r24
    170a:	30 e0       	ldi	r19, 0x00	; 0
    170c:	3f 83       	std	Y+7, r19	; 0x07
    170e:	2e 83       	std	Y+6, r18	; 0x06
    1710:	8e 81       	ldd	r24, Y+6	; 0x06
    1712:	9f 81       	ldd	r25, Y+7	; 0x07
    1714:	00 97       	sbiw	r24, 0x00	; 0
    1716:	89 f0       	breq	.+34     	; 0x173a <MOTOR_start+0x7a>
    1718:	2e 81       	ldd	r18, Y+6	; 0x06
    171a:	3f 81       	ldd	r19, Y+7	; 0x07
    171c:	21 30       	cpi	r18, 0x01	; 1
    171e:	31 05       	cpc	r19, r1
    1720:	09 f0       	breq	.+2      	; 0x1724 <MOTOR_start+0x64>
    1722:	40 c0       	rjmp	.+128    	; 0x17a4 <MOTOR_start+0xe4>
		case MOTOR1_FORWARD :
			GpioWritePin(PORT_D, PIN2,PIN_HIGH);
    1724:	83 e0       	ldi	r24, 0x03	; 3
    1726:	62 e0       	ldi	r22, 0x02	; 2
    1728:	41 e0       	ldi	r20, 0x01	; 1
    172a:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
			GpioWritePin(PORT_D, PIN3,PIN_LOW);
    172e:	83 e0       	ldi	r24, 0x03	; 3
    1730:	63 e0       	ldi	r22, 0x03	; 3
    1732:	40 e0       	ldi	r20, 0x00	; 0
    1734:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
    1738:	35 c0       	rjmp	.+106    	; 0x17a4 <MOTOR_start+0xe4>
			break;
		case MOTOR1_BACKWARD :
			GpioWritePin(PORT_D, PIN2,PIN_LOW);
    173a:	83 e0       	ldi	r24, 0x03	; 3
    173c:	62 e0       	ldi	r22, 0x02	; 2
    173e:	40 e0       	ldi	r20, 0x00	; 0
    1740:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
			GpioWritePin(PORT_D, PIN3,PIN_HIGH);
    1744:	83 e0       	ldi	r24, 0x03	; 3
    1746:	63 e0       	ldi	r22, 0x03	; 3
    1748:	41 e0       	ldi	r20, 0x01	; 1
    174a:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
    174e:	2a c0       	rjmp	.+84     	; 0x17a4 <MOTOR_start+0xe4>
		default:
			break;
		}
		break;
	case MOTER2 :
		PwmSetDuty(PWM_CHANNEL_OC1B, speed);
    1750:	82 e0       	ldi	r24, 0x02	; 2
    1752:	6a 81       	ldd	r22, Y+2	; 0x02
    1754:	0e 94 75 07 	call	0xeea	; 0xeea <PwmSetDuty>
		PwmConnect(PWM_CHANNEL_OC1B);
    1758:	82 e0       	ldi	r24, 0x02	; 2
    175a:	0e 94 19 07 	call	0xe32	; 0xe32 <PwmConnect>
		switch (dir) {
    175e:	8b 81       	ldd	r24, Y+3	; 0x03
    1760:	28 2f       	mov	r18, r24
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	3d 83       	std	Y+5, r19	; 0x05
    1766:	2c 83       	std	Y+4, r18	; 0x04
    1768:	8c 81       	ldd	r24, Y+4	; 0x04
    176a:	9d 81       	ldd	r25, Y+5	; 0x05
    176c:	00 97       	sbiw	r24, 0x00	; 0
    176e:	81 f0       	breq	.+32     	; 0x1790 <MOTOR_start+0xd0>
    1770:	2c 81       	ldd	r18, Y+4	; 0x04
    1772:	3d 81       	ldd	r19, Y+5	; 0x05
    1774:	21 30       	cpi	r18, 0x01	; 1
    1776:	31 05       	cpc	r19, r1
    1778:	a9 f4       	brne	.+42     	; 0x17a4 <MOTOR_start+0xe4>
		case MOTOR2_FORWARD :
			GpioWritePin(PORT_D, PIN6,PIN_HIGH);
    177a:	83 e0       	ldi	r24, 0x03	; 3
    177c:	66 e0       	ldi	r22, 0x06	; 6
    177e:	41 e0       	ldi	r20, 0x01	; 1
    1780:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
			GpioWritePin(PORT_D, PIN7,PIN_LOW);
    1784:	83 e0       	ldi	r24, 0x03	; 3
    1786:	67 e0       	ldi	r22, 0x07	; 7
    1788:	40 e0       	ldi	r20, 0x00	; 0
    178a:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
    178e:	0a c0       	rjmp	.+20     	; 0x17a4 <MOTOR_start+0xe4>
			break;
		case MOTOR2_BACKWARD :
			GpioWritePin(PORT_D, PIN6,PIN_LOW);
    1790:	83 e0       	ldi	r24, 0x03	; 3
    1792:	66 e0       	ldi	r22, 0x06	; 6
    1794:	40 e0       	ldi	r20, 0x00	; 0
    1796:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
			GpioWritePin(PORT_D, PIN7,PIN_HIGH);
    179a:	83 e0       	ldi	r24, 0x03	; 3
    179c:	67 e0       	ldi	r22, 0x07	; 7
    179e:	41 e0       	ldi	r20, 0x01	; 1
    17a0:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
		break;
	default:
		break;
	}

}
    17a4:	29 96       	adiw	r28, 0x09	; 9
    17a6:	0f b6       	in	r0, 0x3f	; 63
    17a8:	f8 94       	cli
    17aa:	de bf       	out	0x3e, r29	; 62
    17ac:	0f be       	out	0x3f, r0	; 63
    17ae:	cd bf       	out	0x3d, r28	; 61
    17b0:	cf 91       	pop	r28
    17b2:	df 91       	pop	r29
    17b4:	08 95       	ret

000017b6 <MOTOR_stop>:
void MOTOR_stop(uint8_t motor_no) {
    17b6:	df 93       	push	r29
    17b8:	cf 93       	push	r28
    17ba:	00 d0       	rcall	.+0      	; 0x17bc <MOTOR_stop+0x6>
    17bc:	0f 92       	push	r0
    17be:	cd b7       	in	r28, 0x3d	; 61
    17c0:	de b7       	in	r29, 0x3e	; 62
    17c2:	89 83       	std	Y+1, r24	; 0x01
	switch (motor_no){
    17c4:	89 81       	ldd	r24, Y+1	; 0x01
    17c6:	28 2f       	mov	r18, r24
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	3b 83       	std	Y+3, r19	; 0x03
    17cc:	2a 83       	std	Y+2, r18	; 0x02
    17ce:	8a 81       	ldd	r24, Y+2	; 0x02
    17d0:	9b 81       	ldd	r25, Y+3	; 0x03
    17d2:	00 97       	sbiw	r24, 0x00	; 0
    17d4:	31 f0       	breq	.+12     	; 0x17e2 <MOTOR_stop+0x2c>
    17d6:	2a 81       	ldd	r18, Y+2	; 0x02
    17d8:	3b 81       	ldd	r19, Y+3	; 0x03
    17da:	21 30       	cpi	r18, 0x01	; 1
    17dc:	31 05       	cpc	r19, r1
    17de:	51 f0       	breq	.+20     	; 0x17f4 <MOTOR_stop+0x3e>
    17e0:	11 c0       	rjmp	.+34     	; 0x1804 <MOTOR_stop+0x4e>
	case MOTER1:
		PwmDisconnect(PWM_CHANNEL_OC1A);
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	0e 94 48 07 	call	0xe90	; 0xe90 <PwmDisconnect>
		GpioWritePin(PORT_D, PIN4,PIN_LOW);//TO ENSURE PIN IS LOW LEVEL
    17e8:	83 e0       	ldi	r24, 0x03	; 3
    17ea:	64 e0       	ldi	r22, 0x04	; 4
    17ec:	40 e0       	ldi	r20, 0x00	; 0
    17ee:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
    17f2:	08 c0       	rjmp	.+16     	; 0x1804 <MOTOR_stop+0x4e>
		break;
	case MOTER2:
		PwmDisconnect(PWM_CHANNEL_OC1B);
    17f4:	82 e0       	ldi	r24, 0x02	; 2
    17f6:	0e 94 48 07 	call	0xe90	; 0xe90 <PwmDisconnect>
		GpioWritePin(PORT_D, PIN5,PIN_LOW);//TO ENSURE PIN IS LOW LEVEL
    17fa:	83 e0       	ldi	r24, 0x03	; 3
    17fc:	65 e0       	ldi	r22, 0x05	; 5
    17fe:	40 e0       	ldi	r20, 0x00	; 0
    1800:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
		break;
	default:
		break;
	}
}
    1804:	0f 90       	pop	r0
    1806:	0f 90       	pop	r0
    1808:	0f 90       	pop	r0
    180a:	cf 91       	pop	r28
    180c:	df 91       	pop	r29
    180e:	08 95       	ret

00001810 <MOTOR_speed>:
void MOTOR_speed(uint8_t motor_no, uint8_t speed) {
    1810:	df 93       	push	r29
    1812:	cf 93       	push	r28
    1814:	00 d0       	rcall	.+0      	; 0x1816 <MOTOR_speed+0x6>
    1816:	00 d0       	rcall	.+0      	; 0x1818 <MOTOR_speed+0x8>
    1818:	cd b7       	in	r28, 0x3d	; 61
    181a:	de b7       	in	r29, 0x3e	; 62
    181c:	89 83       	std	Y+1, r24	; 0x01
    181e:	6a 83       	std	Y+2, r22	; 0x02
	switch (motor_no){
    1820:	89 81       	ldd	r24, Y+1	; 0x01
    1822:	28 2f       	mov	r18, r24
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	3c 83       	std	Y+4, r19	; 0x04
    1828:	2b 83       	std	Y+3, r18	; 0x03
    182a:	8b 81       	ldd	r24, Y+3	; 0x03
    182c:	9c 81       	ldd	r25, Y+4	; 0x04
    182e:	00 97       	sbiw	r24, 0x00	; 0
    1830:	31 f0       	breq	.+12     	; 0x183e <MOTOR_speed+0x2e>
    1832:	2b 81       	ldd	r18, Y+3	; 0x03
    1834:	3c 81       	ldd	r19, Y+4	; 0x04
    1836:	21 30       	cpi	r18, 0x01	; 1
    1838:	31 05       	cpc	r19, r1
    183a:	31 f0       	breq	.+12     	; 0x1848 <MOTOR_speed+0x38>
    183c:	09 c0       	rjmp	.+18     	; 0x1850 <MOTOR_speed+0x40>
	case MOTER1:
		PwmSetDuty(PWM_CHANNEL_OC1A, speed);
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	6a 81       	ldd	r22, Y+2	; 0x02
    1842:	0e 94 75 07 	call	0xeea	; 0xeea <PwmSetDuty>
    1846:	04 c0       	rjmp	.+8      	; 0x1850 <MOTOR_speed+0x40>
		break;
	case MOTER2:
		PwmSetDuty(PWM_CHANNEL_OC1B, speed);
    1848:	82 e0       	ldi	r24, 0x02	; 2
    184a:	6a 81       	ldd	r22, Y+2	; 0x02
    184c:	0e 94 75 07 	call	0xeea	; 0xeea <PwmSetDuty>
		break;
	default:
		break;
	}
}
    1850:	0f 90       	pop	r0
    1852:	0f 90       	pop	r0
    1854:	0f 90       	pop	r0
    1856:	0f 90       	pop	r0
    1858:	cf 91       	pop	r28
    185a:	df 91       	pop	r29
    185c:	08 95       	ret

0000185e <MOTOR_dir>:
void MOTOR_dir(uint8_t motor_no, uint8_t dir) {
    185e:	df 93       	push	r29
    1860:	cf 93       	push	r28
    1862:	cd b7       	in	r28, 0x3d	; 61
    1864:	de b7       	in	r29, 0x3e	; 62
    1866:	28 97       	sbiw	r28, 0x08	; 8
    1868:	0f b6       	in	r0, 0x3f	; 63
    186a:	f8 94       	cli
    186c:	de bf       	out	0x3e, r29	; 62
    186e:	0f be       	out	0x3f, r0	; 63
    1870:	cd bf       	out	0x3d, r28	; 61
    1872:	89 83       	std	Y+1, r24	; 0x01
    1874:	6a 83       	std	Y+2, r22	; 0x02
	switch (motor_no) {
    1876:	89 81       	ldd	r24, Y+1	; 0x01
    1878:	28 2f       	mov	r18, r24
    187a:	30 e0       	ldi	r19, 0x00	; 0
    187c:	38 87       	std	Y+8, r19	; 0x08
    187e:	2f 83       	std	Y+7, r18	; 0x07
    1880:	8f 81       	ldd	r24, Y+7	; 0x07
    1882:	98 85       	ldd	r25, Y+8	; 0x08
    1884:	00 97       	sbiw	r24, 0x00	; 0
    1886:	31 f0       	breq	.+12     	; 0x1894 <MOTOR_dir+0x36>
    1888:	2f 81       	ldd	r18, Y+7	; 0x07
    188a:	38 85       	ldd	r19, Y+8	; 0x08
    188c:	21 30       	cpi	r18, 0x01	; 1
    188e:	31 05       	cpc	r19, r1
    1890:	29 f1       	breq	.+74     	; 0x18dc <MOTOR_dir+0x7e>
    1892:	47 c0       	rjmp	.+142    	; 0x1922 <MOTOR_dir+0xc4>
		case MOTER1 :
			switch (dir) {
    1894:	8a 81       	ldd	r24, Y+2	; 0x02
    1896:	28 2f       	mov	r18, r24
    1898:	30 e0       	ldi	r19, 0x00	; 0
    189a:	3e 83       	std	Y+6, r19	; 0x06
    189c:	2d 83       	std	Y+5, r18	; 0x05
    189e:	8d 81       	ldd	r24, Y+5	; 0x05
    18a0:	9e 81       	ldd	r25, Y+6	; 0x06
    18a2:	00 97       	sbiw	r24, 0x00	; 0
    18a4:	81 f0       	breq	.+32     	; 0x18c6 <MOTOR_dir+0x68>
    18a6:	2d 81       	ldd	r18, Y+5	; 0x05
    18a8:	3e 81       	ldd	r19, Y+6	; 0x06
    18aa:	21 30       	cpi	r18, 0x01	; 1
    18ac:	31 05       	cpc	r19, r1
    18ae:	c9 f5       	brne	.+114    	; 0x1922 <MOTOR_dir+0xc4>
			case MOTOR1_FORWARD :
				GpioWritePin(PORT_D, PIN2,PIN_HIGH);
    18b0:	83 e0       	ldi	r24, 0x03	; 3
    18b2:	62 e0       	ldi	r22, 0x02	; 2
    18b4:	41 e0       	ldi	r20, 0x01	; 1
    18b6:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
				GpioWritePin(PORT_D, PIN3,PIN_LOW);
    18ba:	83 e0       	ldi	r24, 0x03	; 3
    18bc:	63 e0       	ldi	r22, 0x03	; 3
    18be:	40 e0       	ldi	r20, 0x00	; 0
    18c0:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
    18c4:	2e c0       	rjmp	.+92     	; 0x1922 <MOTOR_dir+0xc4>
				break;
			case MOTOR1_BACKWARD :
				GpioWritePin(PORT_D, PIN2,PIN_LOW);
    18c6:	83 e0       	ldi	r24, 0x03	; 3
    18c8:	62 e0       	ldi	r22, 0x02	; 2
    18ca:	40 e0       	ldi	r20, 0x00	; 0
    18cc:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
				GpioWritePin(PORT_D, PIN3,PIN_HIGH);
    18d0:	83 e0       	ldi	r24, 0x03	; 3
    18d2:	63 e0       	ldi	r22, 0x03	; 3
    18d4:	41 e0       	ldi	r20, 0x01	; 1
    18d6:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
    18da:	23 c0       	rjmp	.+70     	; 0x1922 <MOTOR_dir+0xc4>
			default:
				break;
			}
			break;
		case MOTER2 :
			switch (dir) {
    18dc:	8a 81       	ldd	r24, Y+2	; 0x02
    18de:	28 2f       	mov	r18, r24
    18e0:	30 e0       	ldi	r19, 0x00	; 0
    18e2:	3c 83       	std	Y+4, r19	; 0x04
    18e4:	2b 83       	std	Y+3, r18	; 0x03
    18e6:	8b 81       	ldd	r24, Y+3	; 0x03
    18e8:	9c 81       	ldd	r25, Y+4	; 0x04
    18ea:	00 97       	sbiw	r24, 0x00	; 0
    18ec:	81 f0       	breq	.+32     	; 0x190e <MOTOR_dir+0xb0>
    18ee:	2b 81       	ldd	r18, Y+3	; 0x03
    18f0:	3c 81       	ldd	r19, Y+4	; 0x04
    18f2:	21 30       	cpi	r18, 0x01	; 1
    18f4:	31 05       	cpc	r19, r1
    18f6:	a9 f4       	brne	.+42     	; 0x1922 <MOTOR_dir+0xc4>
			case MOTOR2_FORWARD :
				GpioWritePin(PORT_D, PIN6,PIN_HIGH);
    18f8:	83 e0       	ldi	r24, 0x03	; 3
    18fa:	66 e0       	ldi	r22, 0x06	; 6
    18fc:	41 e0       	ldi	r20, 0x01	; 1
    18fe:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
				GpioWritePin(PORT_D, PIN7,PIN_LOW);
    1902:	83 e0       	ldi	r24, 0x03	; 3
    1904:	67 e0       	ldi	r22, 0x07	; 7
    1906:	40 e0       	ldi	r20, 0x00	; 0
    1908:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
    190c:	0a c0       	rjmp	.+20     	; 0x1922 <MOTOR_dir+0xc4>
				break;
			case MOTOR2_BACKWARD :
				GpioWritePin(PORT_D, PIN6,PIN_LOW);
    190e:	83 e0       	ldi	r24, 0x03	; 3
    1910:	66 e0       	ldi	r22, 0x06	; 6
    1912:	40 e0       	ldi	r20, 0x00	; 0
    1914:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
				GpioWritePin(PORT_D, PIN7,PIN_HIGH);
    1918:	83 e0       	ldi	r24, 0x03	; 3
    191a:	67 e0       	ldi	r22, 0x07	; 7
    191c:	41 e0       	ldi	r20, 0x01	; 1
    191e:	0e 94 c3 08 	call	0x1186	; 0x1186 <GpioWritePin>
			}
			break;
		default:
			break;
		}
}
    1922:	28 96       	adiw	r28, 0x08	; 8
    1924:	0f b6       	in	r0, 0x3f	; 63
    1926:	f8 94       	cli
    1928:	de bf       	out	0x3e, r29	; 62
    192a:	0f be       	out	0x3f, r0	; 63
    192c:	cd bf       	out	0x3d, r28	; 61
    192e:	cf 91       	pop	r28
    1930:	df 91       	pop	r29
    1932:	08 95       	ret

00001934 <PSHBTTN_Init>:
 */

#include "PushButton.h"

PSHBTTN_ERROR_RETVAL_t PSHBTTN_Init(DIO_PORT_ID_t port, DIO_PIN_ID_t pin,
		PSHBTTN_PULLUP_Status_t status){
    1934:	df 93       	push	r29
    1936:	cf 93       	push	r28
    1938:	00 d0       	rcall	.+0      	; 0x193a <PSHBTTN_Init+0x6>
    193a:	00 d0       	rcall	.+0      	; 0x193c <PSHBTTN_Init+0x8>
    193c:	cd b7       	in	r28, 0x3d	; 61
    193e:	de b7       	in	r29, 0x3e	; 62
    1940:	8a 83       	std	Y+2, r24	; 0x02
    1942:	6b 83       	std	Y+3, r22	; 0x03
    1944:	4c 83       	std	Y+4, r20	; 0x04
	PSHBTTN_ERROR_RETVAL_t retVal = EXIT_SUCCESFUL;
    1946:	19 82       	std	Y+1, r1	; 0x01
	GpioSetPinDirection(port, pin, PIN_INPUT);
    1948:	8a 81       	ldd	r24, Y+2	; 0x02
    194a:	6b 81       	ldd	r22, Y+3	; 0x03
    194c:	40 e0       	ldi	r20, 0x00	; 0
    194e:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
	if (!status)
    1952:	8c 81       	ldd	r24, Y+4	; 0x04
    1954:	88 23       	and	r24, r24
    1956:	21 f4       	brne	.+8      	; 0x1960 <PSHBTTN_Init+0x2c>
		GpioEnablePinPullup(port, pin);
    1958:	8a 81       	ldd	r24, Y+2	; 0x02
    195a:	6b 81       	ldd	r22, Y+3	; 0x03
    195c:	0e 94 85 0a 	call	0x150a	; 0x150a <GpioEnablePinPullup>
	return retVal;
    1960:	89 81       	ldd	r24, Y+1	; 0x01
}
    1962:	0f 90       	pop	r0
    1964:	0f 90       	pop	r0
    1966:	0f 90       	pop	r0
    1968:	0f 90       	pop	r0
    196a:	cf 91       	pop	r28
    196c:	df 91       	pop	r29
    196e:	08 95       	ret

00001970 <PSHBTTN_EnablePullUp>:
PSHBTTN_ERROR_RETVAL_t PSHBTTN_EnablePullUp(DIO_PORT_ID_t port,DIO_PIN_ID_t pin){
    1970:	df 93       	push	r29
    1972:	cf 93       	push	r28
    1974:	00 d0       	rcall	.+0      	; 0x1976 <PSHBTTN_EnablePullUp+0x6>
    1976:	0f 92       	push	r0
    1978:	cd b7       	in	r28, 0x3d	; 61
    197a:	de b7       	in	r29, 0x3e	; 62
    197c:	8a 83       	std	Y+2, r24	; 0x02
    197e:	6b 83       	std	Y+3, r22	; 0x03
	PSHBTTN_ERROR_RETVAL_t retVal = EXIT_SUCCESFUL;
    1980:	19 82       	std	Y+1, r1	; 0x01
	retVal = GpioEnablePinPullup(port,pin);
    1982:	8a 81       	ldd	r24, Y+2	; 0x02
    1984:	6b 81       	ldd	r22, Y+3	; 0x03
    1986:	0e 94 85 0a 	call	0x150a	; 0x150a <GpioEnablePinPullup>
    198a:	89 83       	std	Y+1, r24	; 0x01
	return retVal;
    198c:	89 81       	ldd	r24, Y+1	; 0x01
}
    198e:	0f 90       	pop	r0
    1990:	0f 90       	pop	r0
    1992:	0f 90       	pop	r0
    1994:	cf 91       	pop	r28
    1996:	df 91       	pop	r29
    1998:	08 95       	ret

0000199a <PSHBTTN_Status>:
uint8_t PSHBTTN_Status (DIO_PORT_ID_t port, DIO_PIN_ID_t pin){
    199a:	df 93       	push	r29
    199c:	cf 93       	push	r28
    199e:	cd b7       	in	r28, 0x3d	; 61
    19a0:	de b7       	in	r29, 0x3e	; 62
    19a2:	27 97       	sbiw	r28, 0x07	; 7
    19a4:	0f b6       	in	r0, 0x3f	; 63
    19a6:	f8 94       	cli
    19a8:	de bf       	out	0x3e, r29	; 62
    19aa:	0f be       	out	0x3f, r0	; 63
    19ac:	cd bf       	out	0x3d, r28	; 61
    19ae:	8e 83       	std	Y+6, r24	; 0x06
    19b0:	6f 83       	std	Y+7, r22	; 0x07
	uint8_t pushButton = 1;
    19b2:	81 e0       	ldi	r24, 0x01	; 1
    19b4:	89 83       	std	Y+1, r24	; 0x01
	GpioReadPin(port, pin, &pushButton);
    19b6:	8e 81       	ldd	r24, Y+6	; 0x06
    19b8:	6f 81       	ldd	r22, Y+7	; 0x07
    19ba:	9e 01       	movw	r18, r28
    19bc:	2f 5f       	subi	r18, 0xFF	; 255
    19be:	3f 4f       	sbci	r19, 0xFF	; 255
    19c0:	a9 01       	movw	r20, r18
    19c2:	0e 94 fe 09 	call	0x13fc	; 0x13fc <GpioReadPin>
	if (pushButton == 0)
    19c6:	89 81       	ldd	r24, Y+1	; 0x01
    19c8:	88 23       	and	r24, r24
    19ca:	31 f5       	brne	.+76     	; 0x1a18 <PSHBTTN_Status+0x7e>
   {
   	for(volatile uint16_t i=0; i<1000; i++)
    19cc:	1b 82       	std	Y+3, r1	; 0x03
    19ce:	1a 82       	std	Y+2, r1	; 0x02
    19d0:	15 c0       	rjmp	.+42     	; 0x19fc <PSHBTTN_Status+0x62>
      {
         for(volatile uint8_t j=0; j<16; j++)
    19d2:	1c 82       	std	Y+4, r1	; 0x04
    19d4:	0b c0       	rjmp	.+22     	; 0x19ec <PSHBTTN_Status+0x52>
         {
            for(volatile uint8_t k=0; k<20; k++)
    19d6:	1d 82       	std	Y+5, r1	; 0x05
    19d8:	03 c0       	rjmp	.+6      	; 0x19e0 <PSHBTTN_Status+0x46>
    19da:	8d 81       	ldd	r24, Y+5	; 0x05
    19dc:	8f 5f       	subi	r24, 0xFF	; 255
    19de:	8d 83       	std	Y+5, r24	; 0x05
    19e0:	8d 81       	ldd	r24, Y+5	; 0x05
    19e2:	84 31       	cpi	r24, 0x14	; 20
    19e4:	d0 f3       	brcs	.-12     	; 0x19da <PSHBTTN_Status+0x40>
	GpioReadPin(port, pin, &pushButton);
	if (pushButton == 0)
   {
   	for(volatile uint16_t i=0; i<1000; i++)
      {
         for(volatile uint8_t j=0; j<16; j++)
    19e6:	8c 81       	ldd	r24, Y+4	; 0x04
    19e8:	8f 5f       	subi	r24, 0xFF	; 255
    19ea:	8c 83       	std	Y+4, r24	; 0x04
    19ec:	8c 81       	ldd	r24, Y+4	; 0x04
    19ee:	80 31       	cpi	r24, 0x10	; 16
    19f0:	90 f3       	brcs	.-28     	; 0x19d6 <PSHBTTN_Status+0x3c>
uint8_t PSHBTTN_Status (DIO_PORT_ID_t port, DIO_PIN_ID_t pin){
	uint8_t pushButton = 1;
	GpioReadPin(port, pin, &pushButton);
	if (pushButton == 0)
   {
   	for(volatile uint16_t i=0; i<1000; i++)
    19f2:	8a 81       	ldd	r24, Y+2	; 0x02
    19f4:	9b 81       	ldd	r25, Y+3	; 0x03
    19f6:	01 96       	adiw	r24, 0x01	; 1
    19f8:	9b 83       	std	Y+3, r25	; 0x03
    19fa:	8a 83       	std	Y+2, r24	; 0x02
    19fc:	8a 81       	ldd	r24, Y+2	; 0x02
    19fe:	9b 81       	ldd	r25, Y+3	; 0x03
    1a00:	23 e0       	ldi	r18, 0x03	; 3
    1a02:	88 3e       	cpi	r24, 0xE8	; 232
    1a04:	92 07       	cpc	r25, r18
    1a06:	28 f3       	brcs	.-54     	; 0x19d2 <PSHBTTN_Status+0x38>
            {
               
            }
         }
      }//dummy delay for 20ms
   	GpioReadPin(port, pin, &pushButton);
    1a08:	8e 81       	ldd	r24, Y+6	; 0x06
    1a0a:	6f 81       	ldd	r22, Y+7	; 0x07
    1a0c:	9e 01       	movw	r18, r28
    1a0e:	2f 5f       	subi	r18, 0xFF	; 255
    1a10:	3f 4f       	sbci	r19, 0xFF	; 255
    1a12:	a9 01       	movw	r20, r18
    1a14:	0e 94 fe 09 	call	0x13fc	; 0x13fc <GpioReadPin>
	}
	return pushButton;
    1a18:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a1a:	27 96       	adiw	r28, 0x07	; 7
    1a1c:	0f b6       	in	r0, 0x3f	; 63
    1a1e:	f8 94       	cli
    1a20:	de bf       	out	0x3e, r29	; 62
    1a22:	0f be       	out	0x3f, r0	; 63
    1a24:	cd bf       	out	0x3d, r28	; 61
    1a26:	cf 91       	pop	r28
    1a28:	df 91       	pop	r29
    1a2a:	08 95       	ret

00001a2c <CAR_GetButtonState>:
static uint8_t gu8_previousState = S_STATE;

/*- LOCAL FUNCTIONS IMPLEMENTATION
------------------------*/
static uint8_t CAR_GetButtonState( void )
{
    1a2c:	df 93       	push	r29
    1a2e:	cf 93       	push	r28
    1a30:	00 d0       	rcall	.+0      	; 0x1a32 <CAR_GetButtonState+0x6>
    1a32:	cd b7       	in	r28, 0x3d	; 61
    1a34:	de b7       	in	r29, 0x3e	; 62
   uint8_t u8_IsPressed;

   u8_IsPressed = PSHBTTN_Status(BUTTON_FORWARD_PORT, BUTTON_FORWARD_PIN);
    1a36:	81 e0       	ldi	r24, 0x01	; 1
    1a38:	62 e0       	ldi	r22, 0x02	; 2
    1a3a:	0e 94 cd 0c 	call	0x199a	; 0x199a <PSHBTTN_Status>
    1a3e:	89 83       	std	Y+1, r24	; 0x01
   if (PRESSED == u8_IsPressed)
    1a40:	89 81       	ldd	r24, Y+1	; 0x01
    1a42:	88 23       	and	r24, r24
    1a44:	11 f4       	brne	.+4      	; 0x1a4a <CAR_GetButtonState+0x1e>
   {
      return F_STATE;
    1a46:	1a 82       	std	Y+2, r1	; 0x02
    1a48:	23 c0       	rjmp	.+70     	; 0x1a90 <CAR_GetButtonState+0x64>
   }
   
   u8_IsPressed = PSHBTTN_Status(BUTTON_RIGHT_PORT, BUTTON_RIGHT_PIN);
    1a4a:	82 e0       	ldi	r24, 0x02	; 2
    1a4c:	65 e0       	ldi	r22, 0x05	; 5
    1a4e:	0e 94 cd 0c 	call	0x199a	; 0x199a <PSHBTTN_Status>
    1a52:	89 83       	std	Y+1, r24	; 0x01
   if (PRESSED == u8_IsPressed)
    1a54:	89 81       	ldd	r24, Y+1	; 0x01
    1a56:	88 23       	and	r24, r24
    1a58:	19 f4       	brne	.+6      	; 0x1a60 <CAR_GetButtonState+0x34>
   {
      return R_STATE;
    1a5a:	81 e0       	ldi	r24, 0x01	; 1
    1a5c:	8a 83       	std	Y+2, r24	; 0x02
    1a5e:	18 c0       	rjmp	.+48     	; 0x1a90 <CAR_GetButtonState+0x64>
   }

   u8_IsPressed = PSHBTTN_Status(BUTTON_LEFT_PORT, BUTTON_LEFT_PIN);
    1a60:	82 e0       	ldi	r24, 0x02	; 2
    1a62:	66 e0       	ldi	r22, 0x06	; 6
    1a64:	0e 94 cd 0c 	call	0x199a	; 0x199a <PSHBTTN_Status>
    1a68:	89 83       	std	Y+1, r24	; 0x01
   if (PRESSED == u8_IsPressed)
    1a6a:	89 81       	ldd	r24, Y+1	; 0x01
    1a6c:	88 23       	and	r24, r24
    1a6e:	19 f4       	brne	.+6      	; 0x1a76 <CAR_GetButtonState+0x4a>
   {
      return L_STATE;
    1a70:	82 e0       	ldi	r24, 0x02	; 2
    1a72:	8a 83       	std	Y+2, r24	; 0x02
    1a74:	0d c0       	rjmp	.+26     	; 0x1a90 <CAR_GetButtonState+0x64>
   }

   u8_IsPressed = PSHBTTN_Status(BUTTON_GEAR_PORT, BUTTON_GEAR_PIN);
    1a76:	82 e0       	ldi	r24, 0x02	; 2
    1a78:	67 e0       	ldi	r22, 0x07	; 7
    1a7a:	0e 94 cd 0c 	call	0x199a	; 0x199a <PSHBTTN_Status>
    1a7e:	89 83       	std	Y+1, r24	; 0x01
   if (PRESSED == u8_IsPressed)
    1a80:	89 81       	ldd	r24, Y+1	; 0x01
    1a82:	88 23       	and	r24, r24
    1a84:	19 f4       	brne	.+6      	; 0x1a8c <CAR_GetButtonState+0x60>
   {
      return G_STATE;
    1a86:	83 e0       	ldi	r24, 0x03	; 3
    1a88:	8a 83       	std	Y+2, r24	; 0x02
    1a8a:	02 c0       	rjmp	.+4      	; 0x1a90 <CAR_GetButtonState+0x64>
   }

   return S_STATE;
    1a8c:	84 e0       	ldi	r24, 0x04	; 4
    1a8e:	8a 83       	std	Y+2, r24	; 0x02
    1a90:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1a92:	0f 90       	pop	r0
    1a94:	0f 90       	pop	r0
    1a96:	cf 91       	pop	r28
    1a98:	df 91       	pop	r29
    1a9a:	08 95       	ret

00001a9c <CAR_SetMotorState>:

static void CAR_SetMotorState(uint8_t state)
{
    1a9c:	df 93       	push	r29
    1a9e:	cf 93       	push	r28
    1aa0:	00 d0       	rcall	.+0      	; 0x1aa2 <CAR_SetMotorState+0x6>
    1aa2:	0f 92       	push	r0
    1aa4:	cd b7       	in	r28, 0x3d	; 61
    1aa6:	de b7       	in	r29, 0x3e	; 62
    1aa8:	89 83       	std	Y+1, r24	; 0x01
   switch (state)
    1aaa:	89 81       	ldd	r24, Y+1	; 0x01
    1aac:	28 2f       	mov	r18, r24
    1aae:	30 e0       	ldi	r19, 0x00	; 0
    1ab0:	3b 83       	std	Y+3, r19	; 0x03
    1ab2:	2a 83       	std	Y+2, r18	; 0x02
    1ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ab8:	82 30       	cpi	r24, 0x02	; 2
    1aba:	91 05       	cpc	r25, r1
    1abc:	09 f4       	brne	.+2      	; 0x1ac0 <CAR_SetMotorState+0x24>
    1abe:	44 c0       	rjmp	.+136    	; 0x1b48 <CAR_SetMotorState+0xac>
    1ac0:	2a 81       	ldd	r18, Y+2	; 0x02
    1ac2:	3b 81       	ldd	r19, Y+3	; 0x03
    1ac4:	23 30       	cpi	r18, 0x03	; 3
    1ac6:	31 05       	cpc	r19, r1
    1ac8:	54 f4       	brge	.+20     	; 0x1ade <CAR_SetMotorState+0x42>
    1aca:	8a 81       	ldd	r24, Y+2	; 0x02
    1acc:	9b 81       	ldd	r25, Y+3	; 0x03
    1ace:	00 97       	sbiw	r24, 0x00	; 0
    1ad0:	91 f0       	breq	.+36     	; 0x1af6 <CAR_SetMotorState+0x5a>
    1ad2:	2a 81       	ldd	r18, Y+2	; 0x02
    1ad4:	3b 81       	ldd	r19, Y+3	; 0x03
    1ad6:	21 30       	cpi	r18, 0x01	; 1
    1ad8:	31 05       	cpc	r19, r1
    1ada:	59 f1       	breq	.+86     	; 0x1b32 <CAR_SetMotorState+0x96>
    1adc:	74 c0       	rjmp	.+232    	; 0x1bc6 <CAR_SetMotorState+0x12a>
    1ade:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ae2:	83 30       	cpi	r24, 0x03	; 3
    1ae4:	91 05       	cpc	r25, r1
    1ae6:	d9 f1       	breq	.+118    	; 0x1b5e <CAR_SetMotorState+0xc2>
    1ae8:	2a 81       	ldd	r18, Y+2	; 0x02
    1aea:	3b 81       	ldd	r19, Y+3	; 0x03
    1aec:	24 30       	cpi	r18, 0x04	; 4
    1aee:	31 05       	cpc	r19, r1
    1af0:	09 f4       	brne	.+2      	; 0x1af4 <CAR_SetMotorState+0x58>
    1af2:	63 c0       	rjmp	.+198    	; 0x1bba <CAR_SetMotorState+0x11e>
    1af4:	68 c0       	rjmp	.+208    	; 0x1bc6 <CAR_SetMotorState+0x12a>
   {
      case F_STATE:
         if(MOTOR_BACKWARD == gu8_direction)
    1af6:	80 91 69 01 	lds	r24, 0x0169
    1afa:	88 23       	and	r24, r24
    1afc:	59 f4       	brne	.+22     	; 0x1b14 <CAR_SetMotorState+0x78>
         {
            MOTOR_start(MOTOR_1, MOTOR_SPEED_1, MOTOR_BACKWARD);
    1afe:	80 e0       	ldi	r24, 0x00	; 0
    1b00:	6e e1       	ldi	r22, 0x1E	; 30
    1b02:	40 e0       	ldi	r20, 0x00	; 0
    1b04:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
            MOTOR_start(MOTOR_2, MOTOR_SPEED_1, MOTOR_BACKWARD);
    1b08:	81 e0       	ldi	r24, 0x01	; 1
    1b0a:	6e e1       	ldi	r22, 0x1E	; 30
    1b0c:	40 e0       	ldi	r20, 0x00	; 0
    1b0e:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
    1b12:	59 c0       	rjmp	.+178    	; 0x1bc6 <CAR_SetMotorState+0x12a>
         }
         else
         {
            MOTOR_start(MOTOR_1, gu8_dutyCycle, MOTOR_FORWARD);
    1b14:	90 91 68 01 	lds	r25, 0x0168
    1b18:	80 e0       	ldi	r24, 0x00	; 0
    1b1a:	69 2f       	mov	r22, r25
    1b1c:	41 e0       	ldi	r20, 0x01	; 1
    1b1e:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
            MOTOR_start(MOTOR_2, gu8_dutyCycle, MOTOR_FORWARD);
    1b22:	90 91 68 01 	lds	r25, 0x0168
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	69 2f       	mov	r22, r25
    1b2a:	41 e0       	ldi	r20, 0x01	; 1
    1b2c:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
    1b30:	4a c0       	rjmp	.+148    	; 0x1bc6 <CAR_SetMotorState+0x12a>
         }
         break;
      case R_STATE:
         MOTOR_start(MOTOR_1, MOTOR_SPEED_1,MOTOR_FORWARD);
    1b32:	80 e0       	ldi	r24, 0x00	; 0
    1b34:	6e e1       	ldi	r22, 0x1E	; 30
    1b36:	41 e0       	ldi	r20, 0x01	; 1
    1b38:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
         MOTOR_start(MOTOR_2, MOTOR_SPEED_1,MOTOR_BACKWARD);
    1b3c:	81 e0       	ldi	r24, 0x01	; 1
    1b3e:	6e e1       	ldi	r22, 0x1E	; 30
    1b40:	40 e0       	ldi	r20, 0x00	; 0
    1b42:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
    1b46:	3f c0       	rjmp	.+126    	; 0x1bc6 <CAR_SetMotorState+0x12a>
         break;
      case L_STATE:
         MOTOR_start(MOTOR_1, MOTOR_SPEED_1,MOTOR_BACKWARD);
    1b48:	80 e0       	ldi	r24, 0x00	; 0
    1b4a:	6e e1       	ldi	r22, 0x1E	; 30
    1b4c:	40 e0       	ldi	r20, 0x00	; 0
    1b4e:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
         MOTOR_start(MOTOR_2, MOTOR_SPEED_1,MOTOR_FORWARD);
    1b52:	81 e0       	ldi	r24, 0x01	; 1
    1b54:	6e e1       	ldi	r22, 0x1E	; 30
    1b56:	41 e0       	ldi	r20, 0x01	; 1
    1b58:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <MOTOR_start>
    1b5c:	34 c0       	rjmp	.+104    	; 0x1bc6 <CAR_SetMotorState+0x12a>
         break;
      case G_STATE:
         if(MOTOR_SPEED_1 == gu8_dutyCycle && gu8_direction == MOTOR_FORWARD)
    1b5e:	80 91 68 01 	lds	r24, 0x0168
    1b62:	8e 31       	cpi	r24, 0x1E	; 30
    1b64:	41 f4       	brne	.+16     	; 0x1b76 <CAR_SetMotorState+0xda>
    1b66:	80 91 69 01 	lds	r24, 0x0169
    1b6a:	81 30       	cpi	r24, 0x01	; 1
    1b6c:	21 f4       	brne	.+8      	; 0x1b76 <CAR_SetMotorState+0xda>
         {
            gu8_dutyCycle = MOTOR_SPEED_2;
    1b6e:	8c e3       	ldi	r24, 0x3C	; 60
    1b70:	80 93 68 01 	sts	0x0168, r24
    1b74:	28 c0       	rjmp	.+80     	; 0x1bc6 <CAR_SetMotorState+0x12a>
         }
         else if(MOTOR_SPEED_2 == gu8_dutyCycle)
    1b76:	80 91 68 01 	lds	r24, 0x0168
    1b7a:	8c 33       	cpi	r24, 0x3C	; 60
    1b7c:	21 f4       	brne	.+8      	; 0x1b86 <CAR_SetMotorState+0xea>
         {
            gu8_dutyCycle = MOTOR_SPEED_3;
    1b7e:	8a e5       	ldi	r24, 0x5A	; 90
    1b80:	80 93 68 01 	sts	0x0168, r24
    1b84:	20 c0       	rjmp	.+64     	; 0x1bc6 <CAR_SetMotorState+0x12a>
         }
         else if(MOTOR_SPEED_3 == gu8_dutyCycle)
    1b86:	80 91 68 01 	lds	r24, 0x0168
    1b8a:	8a 35       	cpi	r24, 0x5A	; 90
    1b8c:	31 f4       	brne	.+12     	; 0x1b9a <CAR_SetMotorState+0xfe>
         {
            gu8_dutyCycle = MOTOR_SPEED_1;
    1b8e:	8e e1       	ldi	r24, 0x1E	; 30
    1b90:	80 93 68 01 	sts	0x0168, r24
            gu8_direction = MOTOR_BACKWARD;
    1b94:	10 92 69 01 	sts	0x0169, r1
    1b98:	16 c0       	rjmp	.+44     	; 0x1bc6 <CAR_SetMotorState+0x12a>
         }
         else if(MOTOR_SPEED_1 == gu8_dutyCycle && gu8_direction == MOTOR_BACKWARD)
    1b9a:	80 91 68 01 	lds	r24, 0x0168
    1b9e:	8e 31       	cpi	r24, 0x1E	; 30
    1ba0:	41 f4       	brne	.+16     	; 0x1bb2 <CAR_SetMotorState+0x116>
    1ba2:	80 91 69 01 	lds	r24, 0x0169
    1ba6:	88 23       	and	r24, r24
    1ba8:	21 f4       	brne	.+8      	; 0x1bb2 <CAR_SetMotorState+0x116>
         {
            gu8_direction = MOTOR_FORWARD;
    1baa:	81 e0       	ldi	r24, 0x01	; 1
    1bac:	80 93 69 01 	sts	0x0169, r24
    1bb0:	0a c0       	rjmp	.+20     	; 0x1bc6 <CAR_SetMotorState+0x12a>
         }
         else
         {
            gu8_state = S_STATE;
    1bb2:	84 e0       	ldi	r24, 0x04	; 4
    1bb4:	80 93 6a 01 	sts	0x016A, r24
    1bb8:	06 c0       	rjmp	.+12     	; 0x1bc6 <CAR_SetMotorState+0x12a>
         }

         break;
      case S_STATE:
         MOTOR_stop(MOTOR_1);
    1bba:	80 e0       	ldi	r24, 0x00	; 0
    1bbc:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <MOTOR_stop>
         MOTOR_stop(MOTOR_2);
    1bc0:	81 e0       	ldi	r24, 0x01	; 1
    1bc2:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <MOTOR_stop>
         break;
      default:
         return;
   }
}
    1bc6:	0f 90       	pop	r0
    1bc8:	0f 90       	pop	r0
    1bca:	0f 90       	pop	r0
    1bcc:	cf 91       	pop	r28
    1bce:	df 91       	pop	r29
    1bd0:	08 95       	ret

00001bd2 <CAR_Init>:
* @brief: This function initialize all car drivers.
*
* @return function error state.
*/
CAR_ERROR_state_t CAR_Init(void)
{
    1bd2:	df 93       	push	r29
    1bd4:	cf 93       	push	r28
    1bd6:	00 d0       	rcall	.+0      	; 0x1bd8 <CAR_Init+0x6>
    1bd8:	cd b7       	in	r28, 0x3d	; 61
    1bda:	de b7       	in	r29, 0x3e	; 62
   /* initialize motors */
   MOTOR_init();
    1bdc:	0e 94 36 0b 	call	0x166c	; 0x166c <MOTOR_init>
   /* set row in the matrix output */
   GpioSetPinDirection(ROW_MATRIX_PORT, ROW_MATRIX_PIN, PIN_OUTPUT);
    1be0:	82 e0       	ldi	r24, 0x02	; 2
    1be2:	62 e0       	ldi	r22, 0x02	; 2
    1be4:	41 e0       	ldi	r20, 0x01	; 1
    1be6:	0e 94 07 08 	call	0x100e	; 0x100e <GpioSetPinDirection>
   
   /* initialize buttons */
   PSHBTTN_ERROR_RETVAL_t PSHBTTN_errorState;   
   PSHBTTN_errorState = PSHBTTN_Init(BUTTON_FORWARD_PORT, BUTTON_FORWARD_PIN, PULLED_UP);
    1bea:	81 e0       	ldi	r24, 0x01	; 1
    1bec:	62 e0       	ldi	r22, 0x02	; 2
    1bee:	40 e0       	ldi	r20, 0x00	; 0
    1bf0:	0e 94 9a 0c 	call	0x1934	; 0x1934 <PSHBTTN_Init>
    1bf4:	89 83       	std	Y+1, r24	; 0x01
   PSHBTTN_errorState |= PSHBTTN_Init(BUTTON_RIGHT_PORT, BUTTON_RIGHT_PIN, PULLED_UP);
    1bf6:	82 e0       	ldi	r24, 0x02	; 2
    1bf8:	65 e0       	ldi	r22, 0x05	; 5
    1bfa:	40 e0       	ldi	r20, 0x00	; 0
    1bfc:	0e 94 9a 0c 	call	0x1934	; 0x1934 <PSHBTTN_Init>
    1c00:	98 2f       	mov	r25, r24
    1c02:	89 81       	ldd	r24, Y+1	; 0x01
    1c04:	89 2b       	or	r24, r25
    1c06:	89 83       	std	Y+1, r24	; 0x01
   PSHBTTN_errorState |= PSHBTTN_Init(BUTTON_LEFT_PORT, BUTTON_LEFT_PIN, PULLED_UP);
    1c08:	82 e0       	ldi	r24, 0x02	; 2
    1c0a:	66 e0       	ldi	r22, 0x06	; 6
    1c0c:	40 e0       	ldi	r20, 0x00	; 0
    1c0e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <PSHBTTN_Init>
    1c12:	98 2f       	mov	r25, r24
    1c14:	89 81       	ldd	r24, Y+1	; 0x01
    1c16:	89 2b       	or	r24, r25
    1c18:	89 83       	std	Y+1, r24	; 0x01
   PSHBTTN_errorState |= PSHBTTN_Init(BUTTON_GEAR_PORT, BUTTON_GEAR_PIN, PULLED_UP);
    1c1a:	82 e0       	ldi	r24, 0x02	; 2
    1c1c:	67 e0       	ldi	r22, 0x07	; 7
    1c1e:	40 e0       	ldi	r20, 0x00	; 0
    1c20:	0e 94 9a 0c 	call	0x1934	; 0x1934 <PSHBTTN_Init>
    1c24:	98 2f       	mov	r25, r24
    1c26:	89 81       	ldd	r24, Y+1	; 0x01
    1c28:	89 2b       	or	r24, r25
    1c2a:	89 83       	std	Y+1, r24	; 0x01
   
   if(EXIT_SUCCESFUL != PSHBTTN_errorState)
    1c2c:	89 81       	ldd	r24, Y+1	; 0x01
    1c2e:	88 23       	and	r24, r24
    1c30:	19 f0       	breq	.+6      	; 0x1c38 <CAR_Init+0x66>
   {
      return E_CAR_INIT_ERROR;
    1c32:	81 e0       	ldi	r24, 0x01	; 1
    1c34:	8a 83       	std	Y+2, r24	; 0x02
    1c36:	01 c0       	rjmp	.+2      	; 0x1c3a <CAR_Init+0x68>
   }
   
   return E_CAR_SUCCESS;
    1c38:	1a 82       	std	Y+2, r1	; 0x02
    1c3a:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1c3c:	0f 90       	pop	r0
    1c3e:	0f 90       	pop	r0
    1c40:	cf 91       	pop	r28
    1c42:	df 91       	pop	r29
    1c44:	08 95       	ret

00001c46 <CAR_Update>:
* @brief: This function updates the car state.
*
* @return function error state.
*/
CAR_ERROR_state_t CAR_Update(void)
{
    1c46:	df 93       	push	r29
    1c48:	cf 93       	push	r28
    1c4a:	cd b7       	in	r28, 0x3d	; 61
    1c4c:	de b7       	in	r29, 0x3e	; 62
   gu8_state = CAR_GetButtonState();
    1c4e:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <CAR_GetButtonState>
    1c52:	80 93 6a 01 	sts	0x016A, r24
   
   if(gu8_previousState != gu8_state)
    1c56:	90 91 6b 01 	lds	r25, 0x016B
    1c5a:	80 91 6a 01 	lds	r24, 0x016A
    1c5e:	98 17       	cp	r25, r24
    1c60:	21 f0       	breq	.+8      	; 0x1c6a <CAR_Update+0x24>
   {
      CAR_SetMotorState(gu8_state);
    1c62:	80 91 6a 01 	lds	r24, 0x016A
    1c66:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <CAR_SetMotorState>
   }
   gu8_previousState = gu8_state;
    1c6a:	80 91 6a 01 	lds	r24, 0x016A
    1c6e:	80 93 6b 01 	sts	0x016B, r24
   
   return E_CAR_SUCCESS;
    1c72:	80 e0       	ldi	r24, 0x00	; 0
    1c74:	cf 91       	pop	r28
    1c76:	df 91       	pop	r29
    1c78:	08 95       	ret

00001c7a <main>:
#include "Car_Control/CarControl.h"

int main() {
    1c7a:	df 93       	push	r29
    1c7c:	cf 93       	push	r28
    1c7e:	0f 92       	push	r0
    1c80:	cd b7       	in	r28, 0x3d	; 61
    1c82:	de b7       	in	r29, 0x3e	; 62
	CAR_ERROR_state_t CAR_InitState;
   CAR_InitState = CAR_Init();
    1c84:	0e 94 e9 0d 	call	0x1bd2	; 0x1bd2 <CAR_Init>
    1c88:	89 83       	std	Y+1, r24	; 0x01
	if(CAR_InitState != E_CAR_SUCCESS)
    1c8a:	89 81       	ldd	r24, Y+1	; 0x01
    1c8c:	88 23       	and	r24, r24
    1c8e:	09 f0       	breq	.+2      	; 0x1c92 <main+0x18>
    1c90:	ff cf       	rjmp	.-2      	; 0x1c90 <main+0x16>
      }
   }
   
   while (1) 
   {
      CAR_Update();
    1c92:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <CAR_Update>
    1c96:	fd cf       	rjmp	.-6      	; 0x1c92 <main+0x18>

00001c98 <__prologue_saves__>:
    1c98:	2f 92       	push	r2
    1c9a:	3f 92       	push	r3
    1c9c:	4f 92       	push	r4
    1c9e:	5f 92       	push	r5
    1ca0:	6f 92       	push	r6
    1ca2:	7f 92       	push	r7
    1ca4:	8f 92       	push	r8
    1ca6:	9f 92       	push	r9
    1ca8:	af 92       	push	r10
    1caa:	bf 92       	push	r11
    1cac:	cf 92       	push	r12
    1cae:	df 92       	push	r13
    1cb0:	ef 92       	push	r14
    1cb2:	ff 92       	push	r15
    1cb4:	0f 93       	push	r16
    1cb6:	1f 93       	push	r17
    1cb8:	cf 93       	push	r28
    1cba:	df 93       	push	r29
    1cbc:	cd b7       	in	r28, 0x3d	; 61
    1cbe:	de b7       	in	r29, 0x3e	; 62
    1cc0:	ca 1b       	sub	r28, r26
    1cc2:	db 0b       	sbc	r29, r27
    1cc4:	0f b6       	in	r0, 0x3f	; 63
    1cc6:	f8 94       	cli
    1cc8:	de bf       	out	0x3e, r29	; 62
    1cca:	0f be       	out	0x3f, r0	; 63
    1ccc:	cd bf       	out	0x3d, r28	; 61
    1cce:	09 94       	ijmp

00001cd0 <__epilogue_restores__>:
    1cd0:	2a 88       	ldd	r2, Y+18	; 0x12
    1cd2:	39 88       	ldd	r3, Y+17	; 0x11
    1cd4:	48 88       	ldd	r4, Y+16	; 0x10
    1cd6:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cd8:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cda:	7d 84       	ldd	r7, Y+13	; 0x0d
    1cdc:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cde:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ce0:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ce2:	b9 84       	ldd	r11, Y+9	; 0x09
    1ce4:	c8 84       	ldd	r12, Y+8	; 0x08
    1ce6:	df 80       	ldd	r13, Y+7	; 0x07
    1ce8:	ee 80       	ldd	r14, Y+6	; 0x06
    1cea:	fd 80       	ldd	r15, Y+5	; 0x05
    1cec:	0c 81       	ldd	r16, Y+4	; 0x04
    1cee:	1b 81       	ldd	r17, Y+3	; 0x03
    1cf0:	aa 81       	ldd	r26, Y+2	; 0x02
    1cf2:	b9 81       	ldd	r27, Y+1	; 0x01
    1cf4:	ce 0f       	add	r28, r30
    1cf6:	d1 1d       	adc	r29, r1
    1cf8:	0f b6       	in	r0, 0x3f	; 63
    1cfa:	f8 94       	cli
    1cfc:	de bf       	out	0x3e, r29	; 62
    1cfe:	0f be       	out	0x3f, r0	; 63
    1d00:	cd bf       	out	0x3d, r28	; 61
    1d02:	ed 01       	movw	r28, r26
    1d04:	08 95       	ret

00001d06 <_exit>:
    1d06:	f8 94       	cli

00001d08 <__stop_program>:
    1d08:	ff cf       	rjmp	.-2      	; 0x1d08 <__stop_program>
