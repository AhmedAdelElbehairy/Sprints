/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  CPU.h
 *       Module:  CPU Driver
 *
 *  Description:  Null     
 *  
 *********************************************************************************************************************/
#ifndef CPU_H
#define CPU_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
//#include "stdint.h"

#include "CPU_Cfg.h"
/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/
/**Atomic Operations**/
#define SET_BIT_ATOMIC(REG,BIT) 	(*(volatile uint32_t*)(((((uint32_t)(&(REG))&0x0FFFFFFF)*0x20)+(BIT*4))+((uint32_t)(&(REG))&0xF0000000)+0x02000000) = 1)
#define CLEAR_BIT_ATOMIC(REG,BIT) 	(*(volatile uint32_t*)(((((uint32_t)(&(REG))&0x0FFFFFFF)*0x20)+(BIT*4))+((uint32_t)(&(REG))&0xF0000000)+0x02000000) = 0)
#define READ_BIT_ATOMIC(REG,BIT) 	(*(volatile uint32_t*)(((((uint32_t)(&(REG))&0x0FFFFFFF)*0x20)+(BIT*4))+((uint32_t)(&(REG))&0xF0000000)+0x02000000))
#define TOG_BIT_ATOMIC(REG,BIT) 	(*(volatile uint32_t*)(((((uint32_t)(&(REG))&0x0FFFFFFF)*0x20)+(BIT*4))+((uint32_t)(&(REG))&0xF0000000)+0x02000000) ^= 1)

/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/
void SVC_Handler(void);
void CPU_SwitchToPrivilegedMode(void);
void CPU_SwitchToUserMode(void);
void CPU_SetBasePriority(void);
void CPU_Config_IRQ_FIQ(void);
#endif  /* FILE_NAME_H */

/**********************************************************************************************************************
 *  END OF FILE: SYSTEMTIMER.h
 *********************************************************************************************************************/
