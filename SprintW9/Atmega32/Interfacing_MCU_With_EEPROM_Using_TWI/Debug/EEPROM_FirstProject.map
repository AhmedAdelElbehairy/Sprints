Archive member included because of file (symbol)

e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                              ./INFRASTRUCTURE/LIB/STRING.o (__mulsi3)
e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./INFRASTRUCTURE/LIB/STRING.o (__udivmodsi4)
e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./MCAL/TWI/TWI.o (__do_copy_data)
e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./MCAL/UART/UART.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

UART_string         0xff              ./APP/APP.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/UART/UART.o
LOAD ./MCAL/TWI/TWI.o
LOAD ./MCAL/DIO/DIO_DRIVER.o
LOAD ./INFRASTRUCTURE/LIB/STRING.o
LOAD ./HAL/EEPROM/EEPROM.o
LOAD ./APP/APP.o
LOAD ./main.o
LOAD e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x21f8
 *(.vectors)
 .vectors       0x00000000       0x54 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_8
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./MCAL/UART/UART.o
 .text          0x00000092        0x0 ./MCAL/TWI/TWI.o
 .text          0x00000092        0x0 ./MCAL/DIO/DIO_DRIVER.o
 .text          0x00000092        0x0 ./INFRASTRUCTURE/LIB/STRING.o
 .text          0x00000092        0x0 ./HAL/EEPROM/EEPROM.o
 .text          0x00000092        0x0 ./APP/APP.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .text          0x00000092        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.UART_Init
                0x00000092       0xf6 ./MCAL/UART/UART.o
                0x00000092                UART_Init
 .text.UART_FlushReceiveBuffer
                0x00000188       0x24 ./MCAL/UART/UART.o
                0x00000188                UART_FlushReceiveBuffer
 .text.UART_TransmitChar
                0x000001ac       0x58 ./MCAL/UART/UART.o
                0x000001ac                UART_TransmitChar
 .text.UART_ReceiveChar
                0x00000204       0x52 ./MCAL/UART/UART.o
                0x00000204                UART_ReceiveChar
 .text.UART_TransmitString
                0x00000256       0x68 ./MCAL/UART/UART.o
                0x00000256                UART_TransmitString
 .text.UART_ReceiveString
                0x000002be       0x6a ./MCAL/UART/UART.o
                0x000002be                UART_ReceiveString
 .text.UART_EnableInterrupt
                0x00000328       0xa2 ./MCAL/UART/UART.o
                0x00000328                UART_EnableInterrupt
 .text.UART_DisableInterrupt
                0x000003ca       0x94 ./MCAL/UART/UART.o
                0x000003ca                UART_DisableInterrupt
 .text.UART_Set_RX_CompleteCallback
                0x0000045e       0x3e ./MCAL/UART/UART.o
                0x0000045e                UART_Set_RX_CompleteCallback
 .text.UART_UDRE_Empty_CompleteCallback
                0x0000049c       0x3e ./MCAL/UART/UART.o
                0x0000049c                UART_UDRE_Empty_CompleteCallback
 .text.UART_Set_TX_CompleteCallback
                0x000004da       0x3e ./MCAL/UART/UART.o
                0x000004da                UART_Set_TX_CompleteCallback
 .text.__vector_13
                0x00000518       0x66 ./MCAL/UART/UART.o
                0x00000518                __vector_13
 .text.__vector_14
                0x0000057e       0x66 ./MCAL/UART/UART.o
                0x0000057e                __vector_14
 .text.__vector_15
                0x000005e4       0x66 ./MCAL/UART/UART.o
                0x000005e4                __vector_15
 .text.TWI_Init
                0x0000064a       0x58 ./MCAL/TWI/TWI.o
                0x0000064a                TWI_Init
 .text.TWI_ReadDataWithACK
                0x000006a2       0x96 ./MCAL/TWI/TWI.o
                0x000006a2                TWI_ReadDataWithACK
 .text.TWI_ReadDataWithNACK
                0x00000738       0x94 ./MCAL/TWI/TWI.o
                0x00000738                TWI_ReadDataWithNACK
 .text.TWI_WriteData
                0x000007cc       0x8c ./MCAL/TWI/TWI.o
                0x000007cc                TWI_WriteData
 .text.TWI_SendStartCondition
                0x00000858       0x7a ./MCAL/TWI/TWI.o
                0x00000858                TWI_SendStartCondition
 .text.TWI_SendStopCondition
                0x000008d2       0x82 ./MCAL/TWI/TWI.o
                0x000008d2                TWI_SendStopCondition
 .text.TWI_GetStatus
                0x00000954       0x20 ./MCAL/TWI/TWI.o
                0x00000954                TWI_GetStatus
 .text.TWI_EnableACK
                0x00000974       0x2c ./MCAL/TWI/TWI.o
                0x00000974                TWI_EnableACK
 .text.TWI_SetClk
                0x000009a0       0xb4 ./MCAL/TWI/TWI.o
 .text.DIO_PortInit
                0x00000a54       0xac ./MCAL/DIO/DIO_DRIVER.o
                0x00000a54                DIO_PortInit
 .text.DIO_PinInit
                0x00000b00      0x230 ./MCAL/DIO/DIO_DRIVER.o
                0x00000b00                DIO_PinInit
 .text.DIO_PinEnablePullUp
                0x00000d30      0x164 ./MCAL/DIO/DIO_DRIVER.o
                0x00000d30                DIO_PinEnablePullUp
 .text.DIO_SetPortVal
                0x00000e94       0x9e ./MCAL/DIO/DIO_DRIVER.o
                0x00000e94                DIO_SetPortVal
 .text.DIO_ClrPortVal
                0x00000f32       0xe0 ./MCAL/DIO/DIO_DRIVER.o
                0x00000f32                DIO_ClrPortVal
 .text.DIO_SetPinVal
                0x00001012      0x45a ./MCAL/DIO/DIO_DRIVER.o
                0x00001012                DIO_SetPinVal
 .text.DIO_GetPortVal
                0x0000146c       0x9a ./MCAL/DIO/DIO_DRIVER.o
                0x0000146c                DIO_GetPortVal
 .text.DIO_GetPinVal
                0x00001506      0x170 ./MCAL/DIO/DIO_DRIVER.o
                0x00001506                DIO_GetPinVal
 .text.DIO_TogPortVal
                0x00001676      0x100 ./MCAL/DIO/DIO_DRIVER.o
                0x00001676                DIO_TogPortVal
 .text.DIO_TogPinVal
                0x00001776      0x236 ./MCAL/DIO/DIO_DRIVER.o
                0x00001776                DIO_TogPinVal
 .text.STR_Length
                0x000019ac       0x54 ./INFRASTRUCTURE/LIB/STRING.o
                0x000019ac                STR_Length
 .text.STR_CharIsNumeric
                0x00001a00       0x3c ./INFRASTRUCTURE/LIB/STRING.o
                0x00001a00                STR_CharIsNumeric
 .text.STR_StringIsNumeric
                0x00001a3c       0x68 ./INFRASTRUCTURE/LIB/STRING.o
                0x00001a3c                STR_StringIsNumeric
 .text.STR_CompareString
                0x00001aa4       0x94 ./INFRASTRUCTURE/LIB/STRING.o
                0x00001aa4                STR_CompareString
 .text.STR_String2Number
                0x00001b38       0xe6 ./INFRASTRUCTURE/LIB/STRING.o
                0x00001b38                STR_String2Number
 .text.STR_Number2String
                0x00001c1e       0xb2 ./INFRASTRUCTURE/LIB/STRING.o
                0x00001c1e                STR_Number2String
 .text.STR_StringReverse
                0x00001cd0       0x9e ./INFRASTRUCTURE/LIB/STRING.o
                0x00001cd0                STR_StringReverse
 .text.EEPROM_Init
                0x00001d6e       0x20 ./HAL/EEPROM/EEPROM.o
                0x00001d6e                EEPROM_Init
 .text.EEPROM_ReadByte
                0x00001d8e      0x134 ./HAL/EEPROM/EEPROM.o
                0x00001d8e                EEPROM_ReadByte
 .text.EEPROM_WriteByte
                0x00001ec2       0xc4 ./HAL/EEPROM/EEPROM.o
                0x00001ec2                EEPROM_WriteByte
 .text.APP_Init
                0x00001f86       0x18 ./APP/APP.o
                0x00001f86                APP_Init
 .text.APP_Start
                0x00001f9e      0x1c2 ./APP/APP.o
                0x00001f9e                APP_Start
 .text.main     0x00002160       0x12 ./main.o
                0x00002160                main
 .text.libgcc   0x00002172       0x3e e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                0x00002172                __mulsi3
 .text.libgcc   0x000021b0       0x44 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x000021b0                __udivmodsi4
 .text.libgcc   0x000021f4        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000021f4        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000021f4        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000021f4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000021f4        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000021f4                exit
                0x000021f4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000021f4        0x4 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000021f8                _etext = .

.data           0x00800060       0xae load address 0x000021f8
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/UART/UART.o
 .data          0x00800060        0x0 ./MCAL/TWI/TWI.o
 .data          0x00800060        0x0 ./MCAL/DIO/DIO_DRIVER.o
 .data          0x00800060        0x0 ./INFRASTRUCTURE/LIB/STRING.o
 .data          0x00800060        0x0 ./HAL/EEPROM/EEPROM.o
 .data          0x00800060       0xa9 ./APP/APP.o
 .data          0x00800109        0x0 ./main.o
 .data          0x00800109        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .data          0x00800109        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800109        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800109        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800109        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.State.1260
                0x00800109        0x1 ./MCAL/TWI/TWI.o
 .data.State.1292
                0x0080010a        0x1 ./MCAL/TWI/TWI.o
 .data.State.1321
                0x0080010b        0x1 ./MCAL/TWI/TWI.o
 .data.State.1348
                0x0080010c        0x1 ./MCAL/TWI/TWI.o
 .data.State.1374
                0x0080010d        0x1 ./MCAL/TWI/TWI.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080010e                . = ALIGN (0x2)
                0x0080010e                _edata = .
                0x0080010e                PROVIDE (__data_end, .)

.bss            0x0080010e      0x10c
                0x0080010e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080010e        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080010e        0x0 ./MCAL/UART/UART.o
 .bss           0x0080010e        0x0 ./MCAL/TWI/TWI.o
 .bss           0x0080010e        0x0 ./MCAL/DIO/DIO_DRIVER.o
 .bss           0x0080010e        0x0 ./INFRASTRUCTURE/LIB/STRING.o
 .bss           0x0080010e        0x0 ./HAL/EEPROM/EEPROM.o
 .bss           0x0080010e        0x0 ./APP/APP.o
 .bss           0x0080010e        0x0 ./main.o
 .bss           0x0080010e        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .bss           0x0080010e        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x0080010e        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080010e        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080010e        0x0 e:/courses and certificates/imt/tools/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.UART_RX_Complete_callback
                0x0080010e        0x2 ./MCAL/UART/UART.o
 .bss.UART_UDRE_Empty_callback
                0x00800110        0x2 ./MCAL/UART/UART.o
 .bss.UART_TX_Complete_callback
                0x00800112        0x2 ./MCAL/UART/UART.o
 .bss.writestate
                0x00800114        0x1 ./APP/APP.o
                0x00800114                writestate
 .bss.readstate
                0x00800115        0x1 ./APP/APP.o
                0x00800115                readstate
 .bss.isnumericstate
                0x00800116        0x1 ./APP/APP.o
                0x00800116                isnumericstate
 .bss.UART_char
                0x00800117        0x1 ./APP/APP.o
                0x00800117                UART_char
 .bss.DataFromEEPROM
                0x00800118        0x1 ./APP/APP.o
                0x00800118                DataFromEEPROM
 .bss.ByteAddress
                0x00800119        0x2 ./APP/APP.o
                0x00800119                ByteAddress
 *(COMMON)
 COMMON         0x0080011b       0xff ./APP/APP.o
                0x0080011b                UART_string
                0x0080021a                PROVIDE (__bss_end, .)
                0x000021f8                __data_load_start = LOADADDR (.data)
                0x000022a6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080021a        0x0
                0x0080021a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080021a                PROVIDE (__noinit_end, .)
                0x0080021a                _end = .
                0x0080021a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x30c0
 *(.stab)
 .stab          0x00000000      0xaec ./MCAL/UART/UART.o
 .stab          0x00000aec      0x894 ./MCAL/TWI/TWI.o
                                0x8a0 (size before relaxing)
 .stab          0x00001380      0xcf0 ./MCAL/DIO/DIO_DRIVER.o
                                0xcfc (size before relaxing)
 .stab          0x00002070      0x654 ./INFRASTRUCTURE/LIB/STRING.o
                                0x660 (size before relaxing)
 .stab          0x000026c4      0x474 ./HAL/EEPROM/EEPROM.o
                                0x480 (size before relaxing)
 .stab          0x00002b38      0x390 ./APP/APP.o
                                0x39c (size before relaxing)
 .stab          0x00002ec8      0x1f8 ./main.o
                                0x204 (size before relaxing)

.stabstr        0x00000000      0xe70
 *(.stabstr)
 .stabstr       0x00000000      0xe70 ./MCAL/UART/UART.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(EEPROM_FirstProject.elf elf32-avr)
LOAD linker stubs
