
testinterrupthandlerpattern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000abc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000b30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  00800060  00800060  00000b30  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000110e  00000000  00000000  00000dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000075b  00000000  00000000  00001eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f1e  00000000  00000000  00002615  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000950  00000000  00000000  00003534  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ea  00000000  00000000  00003e84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b85  00000000  00000000  0000466e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  000061f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__vector_1>
   8:	0c 94 10 01 	jmp	0x220	; 0x220 <__vector_2>
   c:	0c 94 34 01 	jmp	0x268	; 0x268 <__vector_3>
  10:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__vector_4>
  14:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <__vector_5>
  18:	0c 94 a0 01 	jmp	0x340	; 0x340 <__vector_6>
  1c:	0c 94 c4 01 	jmp	0x388	; 0x388 <__vector_7>
  20:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__vector_8>
  24:	0c 94 0c 02 	jmp	0x418	; 0x418 <__vector_9>
  28:	0c 94 30 02 	jmp	0x460	; 0x460 <__vector_10>
  2c:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__vector_11>
  30:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__vector_12>
  34:	0c 94 9c 02 	jmp	0x538	; 0x538 <__vector_13>
  38:	0c 94 c0 02 	jmp	0x580	; 0x580 <__vector_14>
  3c:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__vector_15>
  40:	0c 94 08 03 	jmp	0x610	; 0x610 <__vector_16>
  44:	0c 94 2c 03 	jmp	0x658	; 0x658 <__vector_17>
  48:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__vector_18>
  4c:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <__vector_19>
  50:	0c 94 98 03 	jmp	0x730	; 0x730 <__vector_20>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a9 38       	cpi	r26, 0x89	; 137
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 37 05 	call	0xa6e	; 0xa6e <main>
  74:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <_exit>

00000078 <Install>:
uint8_t DeInstall(uint8_t VectorNum)
{
	uint8_t ErrRetVal = 0;
	FunctionHandler[VectorNum-1] = NULL_PTR;
	return ErrRetVal;
}
  78:	61 15       	cp	r22, r1
  7a:	71 05       	cpc	r23, r1
  7c:	59 f0       	breq	.+22     	; 0x94 <Install+0x1c>
  7e:	e8 2f       	mov	r30, r24
  80:	f0 e0       	ldi	r31, 0x00	; 0
  82:	31 97       	sbiw	r30, 0x01	; 1
  84:	ee 0f       	add	r30, r30
  86:	ff 1f       	adc	r31, r31
  88:	e0 5a       	subi	r30, 0xA0	; 160
  8a:	ff 4f       	sbci	r31, 0xFF	; 255
  8c:	71 83       	std	Z+1, r23	; 0x01
  8e:	60 83       	st	Z, r22
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	08 95       	ret
  94:	81 e0       	ldi	r24, 0x01	; 1
  96:	08 95       	ret

00000098 <InterruptHandler_1>:


void InterruptHandler_1 (void)
{
	if(FunctionHandler[0] != NULL_PTR)
  98:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  9c:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  a0:	30 97       	sbiw	r30, 0x00	; 0
  a2:	09 f0       	breq	.+2      	; 0xa6 <InterruptHandler_1+0xe>
	{
		FunctionHandler[0]();
  a4:	09 95       	icall
  a6:	08 95       	ret

000000a8 <InterruptHandler_2>:
	}
}
void InterruptHandler_2 (void)
{
	if(FunctionHandler[1] != NULL_PTR)
  a8:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
  ac:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
  b0:	30 97       	sbiw	r30, 0x00	; 0
  b2:	09 f0       	breq	.+2      	; 0xb6 <InterruptHandler_2+0xe>
	{
		FunctionHandler[1]();
  b4:	09 95       	icall
  b6:	08 95       	ret

000000b8 <InterruptHandler_3>:
	}
}
void InterruptHandler_3 (void)
{
	if(FunctionHandler[2] != NULL_PTR)
  b8:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
  bc:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
  c0:	30 97       	sbiw	r30, 0x00	; 0
  c2:	09 f0       	breq	.+2      	; 0xc6 <InterruptHandler_3+0xe>
	{
		FunctionHandler[2]();
  c4:	09 95       	icall
  c6:	08 95       	ret

000000c8 <InterruptHandler_4>:
	}
}
void InterruptHandler_4 (void)
{
	if(FunctionHandler[3] != NULL_PTR)
  c8:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
  cc:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
  d0:	30 97       	sbiw	r30, 0x00	; 0
  d2:	09 f0       	breq	.+2      	; 0xd6 <InterruptHandler_4+0xe>
	{
		FunctionHandler[3]();
  d4:	09 95       	icall
  d6:	08 95       	ret

000000d8 <InterruptHandler_5>:
	}
}
void InterruptHandler_5 (void)
{
	if(FunctionHandler[4] != NULL_PTR)
  d8:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
  dc:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
  e0:	30 97       	sbiw	r30, 0x00	; 0
  e2:	09 f0       	breq	.+2      	; 0xe6 <InterruptHandler_5+0xe>
	{
		FunctionHandler[4]();
  e4:	09 95       	icall
  e6:	08 95       	ret

000000e8 <InterruptHandler_6>:
	}
}
void InterruptHandler_6 (void)
{
	if(FunctionHandler[5] != NULL_PTR)
  e8:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__DATA_REGION_ORIGIN__+0xa>
  ec:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__DATA_REGION_ORIGIN__+0xb>
  f0:	30 97       	sbiw	r30, 0x00	; 0
  f2:	09 f0       	breq	.+2      	; 0xf6 <InterruptHandler_6+0xe>
	{
		FunctionHandler[5]();
  f4:	09 95       	icall
  f6:	08 95       	ret

000000f8 <InterruptHandler_7>:
	}
}
void InterruptHandler_7 (void)
{
	if(FunctionHandler[6] != NULL_PTR)
  f8:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <__DATA_REGION_ORIGIN__+0xc>
  fc:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <__DATA_REGION_ORIGIN__+0xd>
 100:	30 97       	sbiw	r30, 0x00	; 0
 102:	09 f0       	breq	.+2      	; 0x106 <InterruptHandler_7+0xe>
	{
		FunctionHandler[6]();
 104:	09 95       	icall
 106:	08 95       	ret

00000108 <InterruptHandler_8>:
	}
}
void InterruptHandler_8 (void)
{
	if(FunctionHandler[7] != NULL_PTR)
 108:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
 10c:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
 110:	30 97       	sbiw	r30, 0x00	; 0
 112:	09 f0       	breq	.+2      	; 0x116 <InterruptHandler_8+0xe>
	{
		FunctionHandler[7]();
 114:	09 95       	icall
 116:	08 95       	ret

00000118 <InterruptHandler_9>:
	}
}
void InterruptHandler_9 (void)
{
	if(FunctionHandler[8] != NULL_PTR)
 118:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
 11c:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <__DATA_REGION_ORIGIN__+0x11>
 120:	30 97       	sbiw	r30, 0x00	; 0
 122:	09 f0       	breq	.+2      	; 0x126 <InterruptHandler_9+0xe>
	{
		FunctionHandler[8]();
 124:	09 95       	icall
 126:	08 95       	ret

00000128 <InterruptHandler_10>:
	}
}
void InterruptHandler_10(void)
{
	if(FunctionHandler[9] != NULL_PTR)
 128:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <__DATA_REGION_ORIGIN__+0x12>
 12c:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <__DATA_REGION_ORIGIN__+0x13>
 130:	30 97       	sbiw	r30, 0x00	; 0
 132:	09 f0       	breq	.+2      	; 0x136 <InterruptHandler_10+0xe>
	{
		FunctionHandler[9]();
 134:	09 95       	icall
 136:	08 95       	ret

00000138 <InterruptHandler_11>:
	}
}
void InterruptHandler_11(void)
{
	if(FunctionHandler[10] != NULL_PTR)
 138:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <__DATA_REGION_ORIGIN__+0x14>
 13c:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <__DATA_REGION_ORIGIN__+0x15>
 140:	30 97       	sbiw	r30, 0x00	; 0
 142:	09 f0       	breq	.+2      	; 0x146 <InterruptHandler_11+0xe>
	{
		FunctionHandler[10]();
 144:	09 95       	icall
 146:	08 95       	ret

00000148 <InterruptHandler_12>:
	}
}
void InterruptHandler_12(void)
{
	if(FunctionHandler[11] != NULL_PTR)
 148:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <__DATA_REGION_ORIGIN__+0x16>
 14c:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <__DATA_REGION_ORIGIN__+0x17>
 150:	30 97       	sbiw	r30, 0x00	; 0
 152:	09 f0       	breq	.+2      	; 0x156 <InterruptHandler_12+0xe>
	{
		FunctionHandler[11]();
 154:	09 95       	icall
 156:	08 95       	ret

00000158 <InterruptHandler_13>:
	}
}
void InterruptHandler_13(void)
{
	if(FunctionHandler[12] != NULL_PTR)
 158:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 15c:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 160:	30 97       	sbiw	r30, 0x00	; 0
 162:	09 f0       	breq	.+2      	; 0x166 <InterruptHandler_13+0xe>
	{
		FunctionHandler[12]();
 164:	09 95       	icall
 166:	08 95       	ret

00000168 <InterruptHandler_14>:
	}
}
void InterruptHandler_14(void)
{
	if(FunctionHandler[13] != NULL_PTR)
 168:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
 16c:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
 170:	30 97       	sbiw	r30, 0x00	; 0
 172:	09 f0       	breq	.+2      	; 0x176 <InterruptHandler_14+0xe>
	{
		FunctionHandler[13]();
 174:	09 95       	icall
 176:	08 95       	ret

00000178 <InterruptHandler_15>:
	}
}
void InterruptHandler_15(void)
{
	if(FunctionHandler[14] != NULL_PTR)
 178:	e0 91 7c 00 	lds	r30, 0x007C	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 17c:	f0 91 7d 00 	lds	r31, 0x007D	; 0x80007d <__DATA_REGION_ORIGIN__+0x1d>
 180:	30 97       	sbiw	r30, 0x00	; 0
 182:	09 f0       	breq	.+2      	; 0x186 <InterruptHandler_15+0xe>
	{
		FunctionHandler[14]();
 184:	09 95       	icall
 186:	08 95       	ret

00000188 <InterruptHandler_16>:
	}
}
void InterruptHandler_16(void)
{
	if(FunctionHandler[15] != NULL_PTR)
 188:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <__DATA_REGION_ORIGIN__+0x1e>
 18c:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <__DATA_REGION_ORIGIN__+0x1f>
 190:	30 97       	sbiw	r30, 0x00	; 0
 192:	09 f0       	breq	.+2      	; 0x196 <InterruptHandler_16+0xe>
	{
		FunctionHandler[15]();
 194:	09 95       	icall
 196:	08 95       	ret

00000198 <InterruptHandler_17>:
	}
}
void InterruptHandler_17(void)
{
	if(FunctionHandler[16] != NULL_PTR)
 198:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
 19c:	f0 91 81 00 	lds	r31, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 1a0:	30 97       	sbiw	r30, 0x00	; 0
 1a2:	09 f0       	breq	.+2      	; 0x1a6 <InterruptHandler_17+0xe>
	{
		FunctionHandler[16]();
 1a4:	09 95       	icall
 1a6:	08 95       	ret

000001a8 <InterruptHandler_18>:
	}
}
void InterruptHandler_18(void)
{
	if(FunctionHandler[17] != NULL_PTR)
 1a8:	e0 91 82 00 	lds	r30, 0x0082	; 0x800082 <__DATA_REGION_ORIGIN__+0x22>
 1ac:	f0 91 83 00 	lds	r31, 0x0083	; 0x800083 <__DATA_REGION_ORIGIN__+0x23>
 1b0:	30 97       	sbiw	r30, 0x00	; 0
 1b2:	09 f0       	breq	.+2      	; 0x1b6 <InterruptHandler_18+0xe>
	{
		FunctionHandler[17]();
 1b4:	09 95       	icall
 1b6:	08 95       	ret

000001b8 <InterruptHandler_19>:
	}
}
void InterruptHandler_19(void)
{
	if(FunctionHandler[18] != NULL_PTR)
 1b8:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
 1bc:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 1c0:	30 97       	sbiw	r30, 0x00	; 0
 1c2:	09 f0       	breq	.+2      	; 0x1c6 <InterruptHandler_19+0xe>
	{
		FunctionHandler[18]();
 1c4:	09 95       	icall
 1c6:	08 95       	ret

000001c8 <InterruptHandler_20>:
	}
}
void InterruptHandler_20(void)
{
	if(FunctionHandler[19] != NULL_PTR)
 1c8:	e0 91 86 00 	lds	r30, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 1cc:	f0 91 87 00 	lds	r31, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 1d0:	30 97       	sbiw	r30, 0x00	; 0
 1d2:	09 f0       	breq	.+2      	; 0x1d6 <InterruptHandler_20+0xe>
	{
		FunctionHandler[19]();
 1d4:	09 95       	icall
 1d6:	08 95       	ret

000001d8 <__vector_1>:
#include "InterruptVectorTable.h"


void __vector_1(void)
{
 1d8:	1f 92       	push	r1
 1da:	0f 92       	push	r0
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	0f 92       	push	r0
 1e0:	11 24       	eor	r1, r1
 1e2:	2f 93       	push	r18
 1e4:	3f 93       	push	r19
 1e6:	4f 93       	push	r20
 1e8:	5f 93       	push	r21
 1ea:	6f 93       	push	r22
 1ec:	7f 93       	push	r23
 1ee:	8f 93       	push	r24
 1f0:	9f 93       	push	r25
 1f2:	af 93       	push	r26
 1f4:	bf 93       	push	r27
 1f6:	ef 93       	push	r30
 1f8:	ff 93       	push	r31
	InterruptHandler_1();
 1fa:	0e 94 4c 00 	call	0x98	; 0x98 <InterruptHandler_1>
}
 1fe:	ff 91       	pop	r31
 200:	ef 91       	pop	r30
 202:	bf 91       	pop	r27
 204:	af 91       	pop	r26
 206:	9f 91       	pop	r25
 208:	8f 91       	pop	r24
 20a:	7f 91       	pop	r23
 20c:	6f 91       	pop	r22
 20e:	5f 91       	pop	r21
 210:	4f 91       	pop	r20
 212:	3f 91       	pop	r19
 214:	2f 91       	pop	r18
 216:	0f 90       	pop	r0
 218:	0f be       	out	0x3f, r0	; 63
 21a:	0f 90       	pop	r0
 21c:	1f 90       	pop	r1
 21e:	18 95       	reti

00000220 <__vector_2>:
void __vector_2(void)
{
 220:	1f 92       	push	r1
 222:	0f 92       	push	r0
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	0f 92       	push	r0
 228:	11 24       	eor	r1, r1
 22a:	2f 93       	push	r18
 22c:	3f 93       	push	r19
 22e:	4f 93       	push	r20
 230:	5f 93       	push	r21
 232:	6f 93       	push	r22
 234:	7f 93       	push	r23
 236:	8f 93       	push	r24
 238:	9f 93       	push	r25
 23a:	af 93       	push	r26
 23c:	bf 93       	push	r27
 23e:	ef 93       	push	r30
 240:	ff 93       	push	r31
	InterruptHandler_2();
 242:	0e 94 54 00 	call	0xa8	; 0xa8 <InterruptHandler_2>
}
 246:	ff 91       	pop	r31
 248:	ef 91       	pop	r30
 24a:	bf 91       	pop	r27
 24c:	af 91       	pop	r26
 24e:	9f 91       	pop	r25
 250:	8f 91       	pop	r24
 252:	7f 91       	pop	r23
 254:	6f 91       	pop	r22
 256:	5f 91       	pop	r21
 258:	4f 91       	pop	r20
 25a:	3f 91       	pop	r19
 25c:	2f 91       	pop	r18
 25e:	0f 90       	pop	r0
 260:	0f be       	out	0x3f, r0	; 63
 262:	0f 90       	pop	r0
 264:	1f 90       	pop	r1
 266:	18 95       	reti

00000268 <__vector_3>:
void __vector_3(void)
{
 268:	1f 92       	push	r1
 26a:	0f 92       	push	r0
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	0f 92       	push	r0
 270:	11 24       	eor	r1, r1
 272:	2f 93       	push	r18
 274:	3f 93       	push	r19
 276:	4f 93       	push	r20
 278:	5f 93       	push	r21
 27a:	6f 93       	push	r22
 27c:	7f 93       	push	r23
 27e:	8f 93       	push	r24
 280:	9f 93       	push	r25
 282:	af 93       	push	r26
 284:	bf 93       	push	r27
 286:	ef 93       	push	r30
 288:	ff 93       	push	r31
	InterruptHandler_3();
 28a:	0e 94 5c 00 	call	0xb8	; 0xb8 <InterruptHandler_3>
}
 28e:	ff 91       	pop	r31
 290:	ef 91       	pop	r30
 292:	bf 91       	pop	r27
 294:	af 91       	pop	r26
 296:	9f 91       	pop	r25
 298:	8f 91       	pop	r24
 29a:	7f 91       	pop	r23
 29c:	6f 91       	pop	r22
 29e:	5f 91       	pop	r21
 2a0:	4f 91       	pop	r20
 2a2:	3f 91       	pop	r19
 2a4:	2f 91       	pop	r18
 2a6:	0f 90       	pop	r0
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	0f 90       	pop	r0
 2ac:	1f 90       	pop	r1
 2ae:	18 95       	reti

000002b0 <__vector_4>:
void __vector_4(void)
{
 2b0:	1f 92       	push	r1
 2b2:	0f 92       	push	r0
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	0f 92       	push	r0
 2b8:	11 24       	eor	r1, r1
 2ba:	2f 93       	push	r18
 2bc:	3f 93       	push	r19
 2be:	4f 93       	push	r20
 2c0:	5f 93       	push	r21
 2c2:	6f 93       	push	r22
 2c4:	7f 93       	push	r23
 2c6:	8f 93       	push	r24
 2c8:	9f 93       	push	r25
 2ca:	af 93       	push	r26
 2cc:	bf 93       	push	r27
 2ce:	ef 93       	push	r30
 2d0:	ff 93       	push	r31
	InterruptHandler_4();
 2d2:	0e 94 64 00 	call	0xc8	; 0xc8 <InterruptHandler_4>
}
 2d6:	ff 91       	pop	r31
 2d8:	ef 91       	pop	r30
 2da:	bf 91       	pop	r27
 2dc:	af 91       	pop	r26
 2de:	9f 91       	pop	r25
 2e0:	8f 91       	pop	r24
 2e2:	7f 91       	pop	r23
 2e4:	6f 91       	pop	r22
 2e6:	5f 91       	pop	r21
 2e8:	4f 91       	pop	r20
 2ea:	3f 91       	pop	r19
 2ec:	2f 91       	pop	r18
 2ee:	0f 90       	pop	r0
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	0f 90       	pop	r0
 2f4:	1f 90       	pop	r1
 2f6:	18 95       	reti

000002f8 <__vector_5>:
void __vector_5(void)
{
 2f8:	1f 92       	push	r1
 2fa:	0f 92       	push	r0
 2fc:	0f b6       	in	r0, 0x3f	; 63
 2fe:	0f 92       	push	r0
 300:	11 24       	eor	r1, r1
 302:	2f 93       	push	r18
 304:	3f 93       	push	r19
 306:	4f 93       	push	r20
 308:	5f 93       	push	r21
 30a:	6f 93       	push	r22
 30c:	7f 93       	push	r23
 30e:	8f 93       	push	r24
 310:	9f 93       	push	r25
 312:	af 93       	push	r26
 314:	bf 93       	push	r27
 316:	ef 93       	push	r30
 318:	ff 93       	push	r31
	InterruptHandler_5();
 31a:	0e 94 6c 00 	call	0xd8	; 0xd8 <InterruptHandler_5>
}
 31e:	ff 91       	pop	r31
 320:	ef 91       	pop	r30
 322:	bf 91       	pop	r27
 324:	af 91       	pop	r26
 326:	9f 91       	pop	r25
 328:	8f 91       	pop	r24
 32a:	7f 91       	pop	r23
 32c:	6f 91       	pop	r22
 32e:	5f 91       	pop	r21
 330:	4f 91       	pop	r20
 332:	3f 91       	pop	r19
 334:	2f 91       	pop	r18
 336:	0f 90       	pop	r0
 338:	0f be       	out	0x3f, r0	; 63
 33a:	0f 90       	pop	r0
 33c:	1f 90       	pop	r1
 33e:	18 95       	reti

00000340 <__vector_6>:
void __vector_6(void)
{
 340:	1f 92       	push	r1
 342:	0f 92       	push	r0
 344:	0f b6       	in	r0, 0x3f	; 63
 346:	0f 92       	push	r0
 348:	11 24       	eor	r1, r1
 34a:	2f 93       	push	r18
 34c:	3f 93       	push	r19
 34e:	4f 93       	push	r20
 350:	5f 93       	push	r21
 352:	6f 93       	push	r22
 354:	7f 93       	push	r23
 356:	8f 93       	push	r24
 358:	9f 93       	push	r25
 35a:	af 93       	push	r26
 35c:	bf 93       	push	r27
 35e:	ef 93       	push	r30
 360:	ff 93       	push	r31
	InterruptHandler_6();
 362:	0e 94 74 00 	call	0xe8	; 0xe8 <InterruptHandler_6>
}
 366:	ff 91       	pop	r31
 368:	ef 91       	pop	r30
 36a:	bf 91       	pop	r27
 36c:	af 91       	pop	r26
 36e:	9f 91       	pop	r25
 370:	8f 91       	pop	r24
 372:	7f 91       	pop	r23
 374:	6f 91       	pop	r22
 376:	5f 91       	pop	r21
 378:	4f 91       	pop	r20
 37a:	3f 91       	pop	r19
 37c:	2f 91       	pop	r18
 37e:	0f 90       	pop	r0
 380:	0f be       	out	0x3f, r0	; 63
 382:	0f 90       	pop	r0
 384:	1f 90       	pop	r1
 386:	18 95       	reti

00000388 <__vector_7>:
void __vector_7(void)
{
 388:	1f 92       	push	r1
 38a:	0f 92       	push	r0
 38c:	0f b6       	in	r0, 0x3f	; 63
 38e:	0f 92       	push	r0
 390:	11 24       	eor	r1, r1
 392:	2f 93       	push	r18
 394:	3f 93       	push	r19
 396:	4f 93       	push	r20
 398:	5f 93       	push	r21
 39a:	6f 93       	push	r22
 39c:	7f 93       	push	r23
 39e:	8f 93       	push	r24
 3a0:	9f 93       	push	r25
 3a2:	af 93       	push	r26
 3a4:	bf 93       	push	r27
 3a6:	ef 93       	push	r30
 3a8:	ff 93       	push	r31
	InterruptHandler_7();
 3aa:	0e 94 7c 00 	call	0xf8	; 0xf8 <InterruptHandler_7>
}
 3ae:	ff 91       	pop	r31
 3b0:	ef 91       	pop	r30
 3b2:	bf 91       	pop	r27
 3b4:	af 91       	pop	r26
 3b6:	9f 91       	pop	r25
 3b8:	8f 91       	pop	r24
 3ba:	7f 91       	pop	r23
 3bc:	6f 91       	pop	r22
 3be:	5f 91       	pop	r21
 3c0:	4f 91       	pop	r20
 3c2:	3f 91       	pop	r19
 3c4:	2f 91       	pop	r18
 3c6:	0f 90       	pop	r0
 3c8:	0f be       	out	0x3f, r0	; 63
 3ca:	0f 90       	pop	r0
 3cc:	1f 90       	pop	r1
 3ce:	18 95       	reti

000003d0 <__vector_8>:
void __vector_8(void)
{
 3d0:	1f 92       	push	r1
 3d2:	0f 92       	push	r0
 3d4:	0f b6       	in	r0, 0x3f	; 63
 3d6:	0f 92       	push	r0
 3d8:	11 24       	eor	r1, r1
 3da:	2f 93       	push	r18
 3dc:	3f 93       	push	r19
 3de:	4f 93       	push	r20
 3e0:	5f 93       	push	r21
 3e2:	6f 93       	push	r22
 3e4:	7f 93       	push	r23
 3e6:	8f 93       	push	r24
 3e8:	9f 93       	push	r25
 3ea:	af 93       	push	r26
 3ec:	bf 93       	push	r27
 3ee:	ef 93       	push	r30
 3f0:	ff 93       	push	r31
	InterruptHandler_8();
 3f2:	0e 94 84 00 	call	0x108	; 0x108 <InterruptHandler_8>
}
 3f6:	ff 91       	pop	r31
 3f8:	ef 91       	pop	r30
 3fa:	bf 91       	pop	r27
 3fc:	af 91       	pop	r26
 3fe:	9f 91       	pop	r25
 400:	8f 91       	pop	r24
 402:	7f 91       	pop	r23
 404:	6f 91       	pop	r22
 406:	5f 91       	pop	r21
 408:	4f 91       	pop	r20
 40a:	3f 91       	pop	r19
 40c:	2f 91       	pop	r18
 40e:	0f 90       	pop	r0
 410:	0f be       	out	0x3f, r0	; 63
 412:	0f 90       	pop	r0
 414:	1f 90       	pop	r1
 416:	18 95       	reti

00000418 <__vector_9>:
void __vector_9(void)
{
 418:	1f 92       	push	r1
 41a:	0f 92       	push	r0
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	0f 92       	push	r0
 420:	11 24       	eor	r1, r1
 422:	2f 93       	push	r18
 424:	3f 93       	push	r19
 426:	4f 93       	push	r20
 428:	5f 93       	push	r21
 42a:	6f 93       	push	r22
 42c:	7f 93       	push	r23
 42e:	8f 93       	push	r24
 430:	9f 93       	push	r25
 432:	af 93       	push	r26
 434:	bf 93       	push	r27
 436:	ef 93       	push	r30
 438:	ff 93       	push	r31
	InterruptHandler_9();
 43a:	0e 94 8c 00 	call	0x118	; 0x118 <InterruptHandler_9>
}
 43e:	ff 91       	pop	r31
 440:	ef 91       	pop	r30
 442:	bf 91       	pop	r27
 444:	af 91       	pop	r26
 446:	9f 91       	pop	r25
 448:	8f 91       	pop	r24
 44a:	7f 91       	pop	r23
 44c:	6f 91       	pop	r22
 44e:	5f 91       	pop	r21
 450:	4f 91       	pop	r20
 452:	3f 91       	pop	r19
 454:	2f 91       	pop	r18
 456:	0f 90       	pop	r0
 458:	0f be       	out	0x3f, r0	; 63
 45a:	0f 90       	pop	r0
 45c:	1f 90       	pop	r1
 45e:	18 95       	reti

00000460 <__vector_10>:
void __vector_10(void)
{
 460:	1f 92       	push	r1
 462:	0f 92       	push	r0
 464:	0f b6       	in	r0, 0x3f	; 63
 466:	0f 92       	push	r0
 468:	11 24       	eor	r1, r1
 46a:	2f 93       	push	r18
 46c:	3f 93       	push	r19
 46e:	4f 93       	push	r20
 470:	5f 93       	push	r21
 472:	6f 93       	push	r22
 474:	7f 93       	push	r23
 476:	8f 93       	push	r24
 478:	9f 93       	push	r25
 47a:	af 93       	push	r26
 47c:	bf 93       	push	r27
 47e:	ef 93       	push	r30
 480:	ff 93       	push	r31
	InterruptHandler_10();
 482:	0e 94 94 00 	call	0x128	; 0x128 <InterruptHandler_10>
}
 486:	ff 91       	pop	r31
 488:	ef 91       	pop	r30
 48a:	bf 91       	pop	r27
 48c:	af 91       	pop	r26
 48e:	9f 91       	pop	r25
 490:	8f 91       	pop	r24
 492:	7f 91       	pop	r23
 494:	6f 91       	pop	r22
 496:	5f 91       	pop	r21
 498:	4f 91       	pop	r20
 49a:	3f 91       	pop	r19
 49c:	2f 91       	pop	r18
 49e:	0f 90       	pop	r0
 4a0:	0f be       	out	0x3f, r0	; 63
 4a2:	0f 90       	pop	r0
 4a4:	1f 90       	pop	r1
 4a6:	18 95       	reti

000004a8 <__vector_11>:
void __vector_11(void)
{
 4a8:	1f 92       	push	r1
 4aa:	0f 92       	push	r0
 4ac:	0f b6       	in	r0, 0x3f	; 63
 4ae:	0f 92       	push	r0
 4b0:	11 24       	eor	r1, r1
 4b2:	2f 93       	push	r18
 4b4:	3f 93       	push	r19
 4b6:	4f 93       	push	r20
 4b8:	5f 93       	push	r21
 4ba:	6f 93       	push	r22
 4bc:	7f 93       	push	r23
 4be:	8f 93       	push	r24
 4c0:	9f 93       	push	r25
 4c2:	af 93       	push	r26
 4c4:	bf 93       	push	r27
 4c6:	ef 93       	push	r30
 4c8:	ff 93       	push	r31
	InterruptHandler_11();
 4ca:	0e 94 9c 00 	call	0x138	; 0x138 <InterruptHandler_11>
}
 4ce:	ff 91       	pop	r31
 4d0:	ef 91       	pop	r30
 4d2:	bf 91       	pop	r27
 4d4:	af 91       	pop	r26
 4d6:	9f 91       	pop	r25
 4d8:	8f 91       	pop	r24
 4da:	7f 91       	pop	r23
 4dc:	6f 91       	pop	r22
 4de:	5f 91       	pop	r21
 4e0:	4f 91       	pop	r20
 4e2:	3f 91       	pop	r19
 4e4:	2f 91       	pop	r18
 4e6:	0f 90       	pop	r0
 4e8:	0f be       	out	0x3f, r0	; 63
 4ea:	0f 90       	pop	r0
 4ec:	1f 90       	pop	r1
 4ee:	18 95       	reti

000004f0 <__vector_12>:
void __vector_12(void)
{
 4f0:	1f 92       	push	r1
 4f2:	0f 92       	push	r0
 4f4:	0f b6       	in	r0, 0x3f	; 63
 4f6:	0f 92       	push	r0
 4f8:	11 24       	eor	r1, r1
 4fa:	2f 93       	push	r18
 4fc:	3f 93       	push	r19
 4fe:	4f 93       	push	r20
 500:	5f 93       	push	r21
 502:	6f 93       	push	r22
 504:	7f 93       	push	r23
 506:	8f 93       	push	r24
 508:	9f 93       	push	r25
 50a:	af 93       	push	r26
 50c:	bf 93       	push	r27
 50e:	ef 93       	push	r30
 510:	ff 93       	push	r31
	InterruptHandler_12();
 512:	0e 94 a4 00 	call	0x148	; 0x148 <InterruptHandler_12>
}
 516:	ff 91       	pop	r31
 518:	ef 91       	pop	r30
 51a:	bf 91       	pop	r27
 51c:	af 91       	pop	r26
 51e:	9f 91       	pop	r25
 520:	8f 91       	pop	r24
 522:	7f 91       	pop	r23
 524:	6f 91       	pop	r22
 526:	5f 91       	pop	r21
 528:	4f 91       	pop	r20
 52a:	3f 91       	pop	r19
 52c:	2f 91       	pop	r18
 52e:	0f 90       	pop	r0
 530:	0f be       	out	0x3f, r0	; 63
 532:	0f 90       	pop	r0
 534:	1f 90       	pop	r1
 536:	18 95       	reti

00000538 <__vector_13>:
void __vector_13(void)
{
 538:	1f 92       	push	r1
 53a:	0f 92       	push	r0
 53c:	0f b6       	in	r0, 0x3f	; 63
 53e:	0f 92       	push	r0
 540:	11 24       	eor	r1, r1
 542:	2f 93       	push	r18
 544:	3f 93       	push	r19
 546:	4f 93       	push	r20
 548:	5f 93       	push	r21
 54a:	6f 93       	push	r22
 54c:	7f 93       	push	r23
 54e:	8f 93       	push	r24
 550:	9f 93       	push	r25
 552:	af 93       	push	r26
 554:	bf 93       	push	r27
 556:	ef 93       	push	r30
 558:	ff 93       	push	r31
	InterruptHandler_13();
 55a:	0e 94 ac 00 	call	0x158	; 0x158 <InterruptHandler_13>
}
 55e:	ff 91       	pop	r31
 560:	ef 91       	pop	r30
 562:	bf 91       	pop	r27
 564:	af 91       	pop	r26
 566:	9f 91       	pop	r25
 568:	8f 91       	pop	r24
 56a:	7f 91       	pop	r23
 56c:	6f 91       	pop	r22
 56e:	5f 91       	pop	r21
 570:	4f 91       	pop	r20
 572:	3f 91       	pop	r19
 574:	2f 91       	pop	r18
 576:	0f 90       	pop	r0
 578:	0f be       	out	0x3f, r0	; 63
 57a:	0f 90       	pop	r0
 57c:	1f 90       	pop	r1
 57e:	18 95       	reti

00000580 <__vector_14>:
void __vector_14(void)
{
 580:	1f 92       	push	r1
 582:	0f 92       	push	r0
 584:	0f b6       	in	r0, 0x3f	; 63
 586:	0f 92       	push	r0
 588:	11 24       	eor	r1, r1
 58a:	2f 93       	push	r18
 58c:	3f 93       	push	r19
 58e:	4f 93       	push	r20
 590:	5f 93       	push	r21
 592:	6f 93       	push	r22
 594:	7f 93       	push	r23
 596:	8f 93       	push	r24
 598:	9f 93       	push	r25
 59a:	af 93       	push	r26
 59c:	bf 93       	push	r27
 59e:	ef 93       	push	r30
 5a0:	ff 93       	push	r31
	InterruptHandler_14();
 5a2:	0e 94 b4 00 	call	0x168	; 0x168 <InterruptHandler_14>
}
 5a6:	ff 91       	pop	r31
 5a8:	ef 91       	pop	r30
 5aa:	bf 91       	pop	r27
 5ac:	af 91       	pop	r26
 5ae:	9f 91       	pop	r25
 5b0:	8f 91       	pop	r24
 5b2:	7f 91       	pop	r23
 5b4:	6f 91       	pop	r22
 5b6:	5f 91       	pop	r21
 5b8:	4f 91       	pop	r20
 5ba:	3f 91       	pop	r19
 5bc:	2f 91       	pop	r18
 5be:	0f 90       	pop	r0
 5c0:	0f be       	out	0x3f, r0	; 63
 5c2:	0f 90       	pop	r0
 5c4:	1f 90       	pop	r1
 5c6:	18 95       	reti

000005c8 <__vector_15>:
void __vector_15(void)
{
 5c8:	1f 92       	push	r1
 5ca:	0f 92       	push	r0
 5cc:	0f b6       	in	r0, 0x3f	; 63
 5ce:	0f 92       	push	r0
 5d0:	11 24       	eor	r1, r1
 5d2:	2f 93       	push	r18
 5d4:	3f 93       	push	r19
 5d6:	4f 93       	push	r20
 5d8:	5f 93       	push	r21
 5da:	6f 93       	push	r22
 5dc:	7f 93       	push	r23
 5de:	8f 93       	push	r24
 5e0:	9f 93       	push	r25
 5e2:	af 93       	push	r26
 5e4:	bf 93       	push	r27
 5e6:	ef 93       	push	r30
 5e8:	ff 93       	push	r31
	InterruptHandler_15();
 5ea:	0e 94 bc 00 	call	0x178	; 0x178 <InterruptHandler_15>
}
 5ee:	ff 91       	pop	r31
 5f0:	ef 91       	pop	r30
 5f2:	bf 91       	pop	r27
 5f4:	af 91       	pop	r26
 5f6:	9f 91       	pop	r25
 5f8:	8f 91       	pop	r24
 5fa:	7f 91       	pop	r23
 5fc:	6f 91       	pop	r22
 5fe:	5f 91       	pop	r21
 600:	4f 91       	pop	r20
 602:	3f 91       	pop	r19
 604:	2f 91       	pop	r18
 606:	0f 90       	pop	r0
 608:	0f be       	out	0x3f, r0	; 63
 60a:	0f 90       	pop	r0
 60c:	1f 90       	pop	r1
 60e:	18 95       	reti

00000610 <__vector_16>:
void __vector_16(void)
{
 610:	1f 92       	push	r1
 612:	0f 92       	push	r0
 614:	0f b6       	in	r0, 0x3f	; 63
 616:	0f 92       	push	r0
 618:	11 24       	eor	r1, r1
 61a:	2f 93       	push	r18
 61c:	3f 93       	push	r19
 61e:	4f 93       	push	r20
 620:	5f 93       	push	r21
 622:	6f 93       	push	r22
 624:	7f 93       	push	r23
 626:	8f 93       	push	r24
 628:	9f 93       	push	r25
 62a:	af 93       	push	r26
 62c:	bf 93       	push	r27
 62e:	ef 93       	push	r30
 630:	ff 93       	push	r31
	InterruptHandler_16();
 632:	0e 94 c4 00 	call	0x188	; 0x188 <InterruptHandler_16>
}
 636:	ff 91       	pop	r31
 638:	ef 91       	pop	r30
 63a:	bf 91       	pop	r27
 63c:	af 91       	pop	r26
 63e:	9f 91       	pop	r25
 640:	8f 91       	pop	r24
 642:	7f 91       	pop	r23
 644:	6f 91       	pop	r22
 646:	5f 91       	pop	r21
 648:	4f 91       	pop	r20
 64a:	3f 91       	pop	r19
 64c:	2f 91       	pop	r18
 64e:	0f 90       	pop	r0
 650:	0f be       	out	0x3f, r0	; 63
 652:	0f 90       	pop	r0
 654:	1f 90       	pop	r1
 656:	18 95       	reti

00000658 <__vector_17>:
void __vector_17(void)
{
 658:	1f 92       	push	r1
 65a:	0f 92       	push	r0
 65c:	0f b6       	in	r0, 0x3f	; 63
 65e:	0f 92       	push	r0
 660:	11 24       	eor	r1, r1
 662:	2f 93       	push	r18
 664:	3f 93       	push	r19
 666:	4f 93       	push	r20
 668:	5f 93       	push	r21
 66a:	6f 93       	push	r22
 66c:	7f 93       	push	r23
 66e:	8f 93       	push	r24
 670:	9f 93       	push	r25
 672:	af 93       	push	r26
 674:	bf 93       	push	r27
 676:	ef 93       	push	r30
 678:	ff 93       	push	r31
	InterruptHandler_17();
 67a:	0e 94 cc 00 	call	0x198	; 0x198 <InterruptHandler_17>
}
 67e:	ff 91       	pop	r31
 680:	ef 91       	pop	r30
 682:	bf 91       	pop	r27
 684:	af 91       	pop	r26
 686:	9f 91       	pop	r25
 688:	8f 91       	pop	r24
 68a:	7f 91       	pop	r23
 68c:	6f 91       	pop	r22
 68e:	5f 91       	pop	r21
 690:	4f 91       	pop	r20
 692:	3f 91       	pop	r19
 694:	2f 91       	pop	r18
 696:	0f 90       	pop	r0
 698:	0f be       	out	0x3f, r0	; 63
 69a:	0f 90       	pop	r0
 69c:	1f 90       	pop	r1
 69e:	18 95       	reti

000006a0 <__vector_18>:
void __vector_18(void)
{
 6a0:	1f 92       	push	r1
 6a2:	0f 92       	push	r0
 6a4:	0f b6       	in	r0, 0x3f	; 63
 6a6:	0f 92       	push	r0
 6a8:	11 24       	eor	r1, r1
 6aa:	2f 93       	push	r18
 6ac:	3f 93       	push	r19
 6ae:	4f 93       	push	r20
 6b0:	5f 93       	push	r21
 6b2:	6f 93       	push	r22
 6b4:	7f 93       	push	r23
 6b6:	8f 93       	push	r24
 6b8:	9f 93       	push	r25
 6ba:	af 93       	push	r26
 6bc:	bf 93       	push	r27
 6be:	ef 93       	push	r30
 6c0:	ff 93       	push	r31
	InterruptHandler_18();
 6c2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <InterruptHandler_18>
}
 6c6:	ff 91       	pop	r31
 6c8:	ef 91       	pop	r30
 6ca:	bf 91       	pop	r27
 6cc:	af 91       	pop	r26
 6ce:	9f 91       	pop	r25
 6d0:	8f 91       	pop	r24
 6d2:	7f 91       	pop	r23
 6d4:	6f 91       	pop	r22
 6d6:	5f 91       	pop	r21
 6d8:	4f 91       	pop	r20
 6da:	3f 91       	pop	r19
 6dc:	2f 91       	pop	r18
 6de:	0f 90       	pop	r0
 6e0:	0f be       	out	0x3f, r0	; 63
 6e2:	0f 90       	pop	r0
 6e4:	1f 90       	pop	r1
 6e6:	18 95       	reti

000006e8 <__vector_19>:
void __vector_19(void)
{
 6e8:	1f 92       	push	r1
 6ea:	0f 92       	push	r0
 6ec:	0f b6       	in	r0, 0x3f	; 63
 6ee:	0f 92       	push	r0
 6f0:	11 24       	eor	r1, r1
 6f2:	2f 93       	push	r18
 6f4:	3f 93       	push	r19
 6f6:	4f 93       	push	r20
 6f8:	5f 93       	push	r21
 6fa:	6f 93       	push	r22
 6fc:	7f 93       	push	r23
 6fe:	8f 93       	push	r24
 700:	9f 93       	push	r25
 702:	af 93       	push	r26
 704:	bf 93       	push	r27
 706:	ef 93       	push	r30
 708:	ff 93       	push	r31
	InterruptHandler_19();
 70a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <InterruptHandler_19>
}
 70e:	ff 91       	pop	r31
 710:	ef 91       	pop	r30
 712:	bf 91       	pop	r27
 714:	af 91       	pop	r26
 716:	9f 91       	pop	r25
 718:	8f 91       	pop	r24
 71a:	7f 91       	pop	r23
 71c:	6f 91       	pop	r22
 71e:	5f 91       	pop	r21
 720:	4f 91       	pop	r20
 722:	3f 91       	pop	r19
 724:	2f 91       	pop	r18
 726:	0f 90       	pop	r0
 728:	0f be       	out	0x3f, r0	; 63
 72a:	0f 90       	pop	r0
 72c:	1f 90       	pop	r1
 72e:	18 95       	reti

00000730 <__vector_20>:
void __vector_20(void)
{
 730:	1f 92       	push	r1
 732:	0f 92       	push	r0
 734:	0f b6       	in	r0, 0x3f	; 63
 736:	0f 92       	push	r0
 738:	11 24       	eor	r1, r1
 73a:	2f 93       	push	r18
 73c:	3f 93       	push	r19
 73e:	4f 93       	push	r20
 740:	5f 93       	push	r21
 742:	6f 93       	push	r22
 744:	7f 93       	push	r23
 746:	8f 93       	push	r24
 748:	9f 93       	push	r25
 74a:	af 93       	push	r26
 74c:	bf 93       	push	r27
 74e:	ef 93       	push	r30
 750:	ff 93       	push	r31
	InterruptHandler_20();
 752:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <InterruptHandler_20>
 756:	ff 91       	pop	r31
 758:	ef 91       	pop	r30
 75a:	bf 91       	pop	r27
 75c:	af 91       	pop	r26
 75e:	9f 91       	pop	r25
 760:	8f 91       	pop	r24
 762:	7f 91       	pop	r23
 764:	6f 91       	pop	r22
 766:	5f 91       	pop	r21
 768:	4f 91       	pop	r20
 76a:	3f 91       	pop	r19
 76c:	2f 91       	pop	r18
 76e:	0f 90       	pop	r0
 770:	0f be       	out	0x3f, r0	; 63
 772:	0f 90       	pop	r0
 774:	1f 90       	pop	r1
 776:	18 95       	reti

00000778 <DIO_PinInit>:
		}
	} else {
		ErrorValue = EXIT_FAILURE;
	}
	return ErrorValue;
}
 778:	85 30       	cpi	r24, 0x05	; 5
 77a:	08 f0       	brcs	.+2      	; 0x77e <DIO_PinInit+0x6>
 77c:	81 c0       	rjmp	.+258    	; 0x880 <__stack+0x21>
 77e:	68 30       	cpi	r22, 0x08	; 8
 780:	08 f0       	brcs	.+2      	; 0x784 <DIO_PinInit+0xc>
 782:	80 c0       	rjmp	.+256    	; 0x884 <__stack+0x25>
 784:	41 30       	cpi	r20, 0x01	; 1
 786:	d9 f5       	brne	.+118    	; 0x7fe <DIO_PinInit+0x86>
 788:	82 30       	cpi	r24, 0x02	; 2
 78a:	a9 f0       	breq	.+42     	; 0x7b6 <DIO_PinInit+0x3e>
 78c:	18 f4       	brcc	.+6      	; 0x794 <DIO_PinInit+0x1c>
 78e:	81 30       	cpi	r24, 0x01	; 1
 790:	31 f0       	breq	.+12     	; 0x79e <DIO_PinInit+0x26>
 792:	7a c0       	rjmp	.+244    	; 0x888 <__stack+0x29>
 794:	83 30       	cpi	r24, 0x03	; 3
 796:	d9 f0       	breq	.+54     	; 0x7ce <DIO_PinInit+0x56>
 798:	84 30       	cpi	r24, 0x04	; 4
 79a:	29 f1       	breq	.+74     	; 0x7e6 <DIO_PinInit+0x6e>
 79c:	75 c0       	rjmp	.+234    	; 0x888 <__stack+0x29>
 79e:	2a b3       	in	r18, 0x1a	; 26
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <DIO_PinInit+0x32>
 7a6:	88 0f       	add	r24, r24
 7a8:	99 1f       	adc	r25, r25
 7aa:	6a 95       	dec	r22
 7ac:	e2 f7       	brpl	.-8      	; 0x7a6 <DIO_PinInit+0x2e>
 7ae:	82 2b       	or	r24, r18
 7b0:	8a bb       	out	0x1a, r24	; 26
 7b2:	80 e0       	ldi	r24, 0x00	; 0
 7b4:	08 95       	ret
 7b6:	27 b3       	in	r18, 0x17	; 23
 7b8:	81 e0       	ldi	r24, 0x01	; 1
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <DIO_PinInit+0x4a>
 7be:	88 0f       	add	r24, r24
 7c0:	99 1f       	adc	r25, r25
 7c2:	6a 95       	dec	r22
 7c4:	e2 f7       	brpl	.-8      	; 0x7be <DIO_PinInit+0x46>
 7c6:	82 2b       	or	r24, r18
 7c8:	87 bb       	out	0x17, r24	; 23
 7ca:	80 e0       	ldi	r24, 0x00	; 0
 7cc:	08 95       	ret
 7ce:	24 b3       	in	r18, 0x14	; 20
 7d0:	81 e0       	ldi	r24, 0x01	; 1
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <DIO_PinInit+0x62>
 7d6:	88 0f       	add	r24, r24
 7d8:	99 1f       	adc	r25, r25
 7da:	6a 95       	dec	r22
 7dc:	e2 f7       	brpl	.-8      	; 0x7d6 <DIO_PinInit+0x5e>
 7de:	82 2b       	or	r24, r18
 7e0:	84 bb       	out	0x14, r24	; 20
 7e2:	80 e0       	ldi	r24, 0x00	; 0
 7e4:	08 95       	ret
 7e6:	21 b3       	in	r18, 0x11	; 17
 7e8:	81 e0       	ldi	r24, 0x01	; 1
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <DIO_PinInit+0x7a>
 7ee:	88 0f       	add	r24, r24
 7f0:	99 1f       	adc	r25, r25
 7f2:	6a 95       	dec	r22
 7f4:	e2 f7       	brpl	.-8      	; 0x7ee <DIO_PinInit+0x76>
 7f6:	82 2b       	or	r24, r18
 7f8:	81 bb       	out	0x11, r24	; 17
 7fa:	80 e0       	ldi	r24, 0x00	; 0
 7fc:	08 95       	ret
 7fe:	41 11       	cpse	r20, r1
 800:	45 c0       	rjmp	.+138    	; 0x88c <__stack+0x2d>
 802:	82 30       	cpi	r24, 0x02	; 2
 804:	b1 f0       	breq	.+44     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 806:	18 f4       	brcc	.+6      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 808:	81 30       	cpi	r24, 0x01	; 1
 80a:	31 f0       	breq	.+12     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 80c:	41 c0       	rjmp	.+130    	; 0x890 <__stack+0x31>
 80e:	83 30       	cpi	r24, 0x03	; 3
 810:	e9 f0       	breq	.+58     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 812:	84 30       	cpi	r24, 0x04	; 4
 814:	41 f1       	breq	.+80     	; 0x866 <__stack+0x7>
 816:	3c c0       	rjmp	.+120    	; 0x890 <__stack+0x31>
 818:	2a b3       	in	r18, 0x1a	; 26
 81a:	81 e0       	ldi	r24, 0x01	; 1
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	02 c0       	rjmp	.+4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 820:	88 0f       	add	r24, r24
 822:	99 1f       	adc	r25, r25
 824:	6a 95       	dec	r22
 826:	e2 f7       	brpl	.-8      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 828:	80 95       	com	r24
 82a:	82 23       	and	r24, r18
 82c:	8a bb       	out	0x1a, r24	; 26
 82e:	80 e0       	ldi	r24, 0x00	; 0
 830:	08 95       	ret
 832:	27 b3       	in	r18, 0x17	; 23
 834:	81 e0       	ldi	r24, 0x01	; 1
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	02 c0       	rjmp	.+4      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 83a:	88 0f       	add	r24, r24
 83c:	99 1f       	adc	r25, r25
 83e:	6a 95       	dec	r22
 840:	e2 f7       	brpl	.-8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 842:	80 95       	com	r24
 844:	82 23       	and	r24, r18
 846:	87 bb       	out	0x17, r24	; 23
 848:	80 e0       	ldi	r24, 0x00	; 0
 84a:	08 95       	ret
 84c:	24 b3       	in	r18, 0x14	; 20
 84e:	81 e0       	ldi	r24, 0x01	; 1
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	02 c0       	rjmp	.+4      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 854:	88 0f       	add	r24, r24
 856:	99 1f       	adc	r25, r25
 858:	6a 95       	dec	r22
 85a:	e2 f7       	brpl	.-8      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 85c:	80 95       	com	r24
 85e:	82 23       	and	r24, r18
 860:	84 bb       	out	0x14, r24	; 20
 862:	80 e0       	ldi	r24, 0x00	; 0
 864:	08 95       	ret
 866:	21 b3       	in	r18, 0x11	; 17
 868:	81 e0       	ldi	r24, 0x01	; 1
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	02 c0       	rjmp	.+4      	; 0x872 <__stack+0x13>
 86e:	88 0f       	add	r24, r24
 870:	99 1f       	adc	r25, r25
 872:	6a 95       	dec	r22
 874:	e2 f7       	brpl	.-8      	; 0x86e <__stack+0xf>
 876:	80 95       	com	r24
 878:	82 23       	and	r24, r18
 87a:	81 bb       	out	0x11, r24	; 17
 87c:	80 e0       	ldi	r24, 0x00	; 0
 87e:	08 95       	ret
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	08 95       	ret
 884:	81 e0       	ldi	r24, 0x01	; 1
 886:	08 95       	ret
 888:	81 e0       	ldi	r24, 0x01	; 1
 88a:	08 95       	ret
 88c:	81 e0       	ldi	r24, 0x01	; 1
 88e:	08 95       	ret
 890:	81 e0       	ldi	r24, 0x01	; 1
 892:	08 95       	ret

00000894 <DIO_PinEnablePullUp>:
 894:	85 30       	cpi	r24, 0x05	; 5
 896:	08 f0       	brcs	.+2      	; 0x89a <DIO_PinEnablePullUp+0x6>
 898:	4a c0       	rjmp	.+148    	; 0x92e <DIO_PinEnablePullUp+0x9a>
 89a:	68 30       	cpi	r22, 0x08	; 8
 89c:	08 f0       	brcs	.+2      	; 0x8a0 <DIO_PinEnablePullUp+0xc>
 89e:	49 c0       	rjmp	.+146    	; 0x932 <DIO_PinEnablePullUp+0x9e>
 8a0:	82 30       	cpi	r24, 0x02	; 2
 8a2:	c1 f0       	breq	.+48     	; 0x8d4 <DIO_PinEnablePullUp+0x40>
 8a4:	18 f4       	brcc	.+6      	; 0x8ac <DIO_PinEnablePullUp+0x18>
 8a6:	81 30       	cpi	r24, 0x01	; 1
 8a8:	31 f0       	breq	.+12     	; 0x8b6 <DIO_PinEnablePullUp+0x22>
 8aa:	45 c0       	rjmp	.+138    	; 0x936 <DIO_PinEnablePullUp+0xa2>
 8ac:	83 30       	cpi	r24, 0x03	; 3
 8ae:	09 f1       	breq	.+66     	; 0x8f2 <DIO_PinEnablePullUp+0x5e>
 8b0:	84 30       	cpi	r24, 0x04	; 4
 8b2:	71 f1       	breq	.+92     	; 0x910 <DIO_PinEnablePullUp+0x7c>
 8b4:	40 c0       	rjmp	.+128    	; 0x936 <DIO_PinEnablePullUp+0xa2>
 8b6:	8a b3       	in	r24, 0x1a	; 26
 8b8:	81 11       	cpse	r24, r1
 8ba:	3f c0       	rjmp	.+126    	; 0x93a <DIO_PinEnablePullUp+0xa6>
 8bc:	2b b3       	in	r18, 0x1b	; 27
 8be:	81 e0       	ldi	r24, 0x01	; 1
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <DIO_PinEnablePullUp+0x34>
 8c4:	88 0f       	add	r24, r24
 8c6:	99 1f       	adc	r25, r25
 8c8:	6a 95       	dec	r22
 8ca:	e2 f7       	brpl	.-8      	; 0x8c4 <DIO_PinEnablePullUp+0x30>
 8cc:	82 2b       	or	r24, r18
 8ce:	8b bb       	out	0x1b, r24	; 27
 8d0:	80 e0       	ldi	r24, 0x00	; 0
 8d2:	08 95       	ret
 8d4:	87 b3       	in	r24, 0x17	; 23
 8d6:	81 11       	cpse	r24, r1
 8d8:	32 c0       	rjmp	.+100    	; 0x93e <DIO_PinEnablePullUp+0xaa>
 8da:	28 b3       	in	r18, 0x18	; 24
 8dc:	81 e0       	ldi	r24, 0x01	; 1
 8de:	90 e0       	ldi	r25, 0x00	; 0
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <DIO_PinEnablePullUp+0x52>
 8e2:	88 0f       	add	r24, r24
 8e4:	99 1f       	adc	r25, r25
 8e6:	6a 95       	dec	r22
 8e8:	e2 f7       	brpl	.-8      	; 0x8e2 <DIO_PinEnablePullUp+0x4e>
 8ea:	82 2b       	or	r24, r18
 8ec:	88 bb       	out	0x18, r24	; 24
 8ee:	80 e0       	ldi	r24, 0x00	; 0
 8f0:	08 95       	ret
 8f2:	84 b3       	in	r24, 0x14	; 20
 8f4:	81 11       	cpse	r24, r1
 8f6:	25 c0       	rjmp	.+74     	; 0x942 <DIO_PinEnablePullUp+0xae>
 8f8:	25 b3       	in	r18, 0x15	; 21
 8fa:	81 e0       	ldi	r24, 0x01	; 1
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	02 c0       	rjmp	.+4      	; 0x904 <DIO_PinEnablePullUp+0x70>
 900:	88 0f       	add	r24, r24
 902:	99 1f       	adc	r25, r25
 904:	6a 95       	dec	r22
 906:	e2 f7       	brpl	.-8      	; 0x900 <DIO_PinEnablePullUp+0x6c>
 908:	82 2b       	or	r24, r18
 90a:	85 bb       	out	0x15, r24	; 21
 90c:	80 e0       	ldi	r24, 0x00	; 0
 90e:	08 95       	ret
 910:	81 b3       	in	r24, 0x11	; 17
 912:	81 11       	cpse	r24, r1
 914:	18 c0       	rjmp	.+48     	; 0x946 <DIO_PinEnablePullUp+0xb2>
 916:	22 b3       	in	r18, 0x12	; 18
 918:	81 e0       	ldi	r24, 0x01	; 1
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	02 c0       	rjmp	.+4      	; 0x922 <DIO_PinEnablePullUp+0x8e>
 91e:	88 0f       	add	r24, r24
 920:	99 1f       	adc	r25, r25
 922:	6a 95       	dec	r22
 924:	e2 f7       	brpl	.-8      	; 0x91e <DIO_PinEnablePullUp+0x8a>
 926:	82 2b       	or	r24, r18
 928:	82 bb       	out	0x12, r24	; 18
 92a:	80 e0       	ldi	r24, 0x00	; 0
 92c:	08 95       	ret
 92e:	81 e0       	ldi	r24, 0x01	; 1
 930:	08 95       	ret
 932:	81 e0       	ldi	r24, 0x01	; 1
 934:	08 95       	ret
 936:	81 e0       	ldi	r24, 0x01	; 1
 938:	08 95       	ret
 93a:	81 e0       	ldi	r24, 0x01	; 1
 93c:	08 95       	ret
 93e:	81 e0       	ldi	r24, 0x01	; 1
 940:	08 95       	ret
 942:	81 e0       	ldi	r24, 0x01	; 1
 944:	08 95       	ret
 946:	81 e0       	ldi	r24, 0x01	; 1
 948:	08 95       	ret

0000094a <DIO_TogPinVal>:

DIO_ERROR_RETVAL_t DIO_TogPinVal(DIO_PORT_ID_t DIO_port, DIO_PIN_ID_t DIO_pin) {
	DIO_ERROR_RETVAL_t ErrorValue = EXIT_SUCCESFUL;
	if ((DIO_port <= PORTD) && (DIO_pin <= PIN7)) {
 94a:	85 30       	cpi	r24, 0x05	; 5
 94c:	08 f0       	brcs	.+2      	; 0x950 <DIO_TogPinVal+0x6>
 94e:	70 c0       	rjmp	.+224    	; 0xa30 <DIO_TogPinVal+0xe6>
 950:	68 30       	cpi	r22, 0x08	; 8
 952:	08 f0       	brcs	.+2      	; 0x956 <DIO_TogPinVal+0xc>
 954:	6f c0       	rjmp	.+222    	; 0xa34 <DIO_TogPinVal+0xea>
		switch (DIO_port) {
 956:	82 30       	cpi	r24, 0x02	; 2
 958:	19 f1       	breq	.+70     	; 0x9a0 <DIO_TogPinVal+0x56>
 95a:	18 f4       	brcc	.+6      	; 0x962 <DIO_TogPinVal+0x18>
 95c:	81 30       	cpi	r24, 0x01	; 1
 95e:	39 f0       	breq	.+14     	; 0x96e <DIO_TogPinVal+0x24>
 960:	6b c0       	rjmp	.+214    	; 0xa38 <DIO_TogPinVal+0xee>
 962:	83 30       	cpi	r24, 0x03	; 3
 964:	a9 f1       	breq	.+106    	; 0x9d0 <DIO_TogPinVal+0x86>
 966:	84 30       	cpi	r24, 0x04	; 4
 968:	09 f4       	brne	.+2      	; 0x96c <DIO_TogPinVal+0x22>
 96a:	4a c0       	rjmp	.+148    	; 0xa00 <DIO_TogPinVal+0xb6>
 96c:	65 c0       	rjmp	.+202    	; 0xa38 <DIO_TogPinVal+0xee>
		case PORTA:
			if (READ_BIT(DDRA_Register, DIO_pin) == PIN_OUTPUT) {
 96e:	8a b3       	in	r24, 0x1a	; 26
 970:	21 e0       	ldi	r18, 0x01	; 1
 972:	30 e0       	ldi	r19, 0x00	; 0
 974:	06 2e       	mov	r0, r22
 976:	02 c0       	rjmp	.+4      	; 0x97c <DIO_TogPinVal+0x32>
 978:	22 0f       	add	r18, r18
 97a:	33 1f       	adc	r19, r19
 97c:	0a 94       	dec	r0
 97e:	e2 f7       	brpl	.-8      	; 0x978 <DIO_TogPinVal+0x2e>
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	82 23       	and	r24, r18
 984:	93 23       	and	r25, r19
 986:	02 c0       	rjmp	.+4      	; 0x98c <DIO_TogPinVal+0x42>
 988:	95 95       	asr	r25
 98a:	87 95       	ror	r24
 98c:	6a 95       	dec	r22
 98e:	e2 f7       	brpl	.-8      	; 0x988 <DIO_TogPinVal+0x3e>
 990:	01 97       	sbiw	r24, 0x01	; 1
 992:	09 f0       	breq	.+2      	; 0x996 <DIO_TogPinVal+0x4c>
 994:	53 c0       	rjmp	.+166    	; 0xa3c <DIO_TogPinVal+0xf2>
				TOG_BIT(PORTA_Register, DIO_pin);
 996:	8b b3       	in	r24, 0x1b	; 27
 998:	28 27       	eor	r18, r24
 99a:	2b bb       	out	0x1b, r18	; 27
	}
	return ErrorValue;
}

DIO_ERROR_RETVAL_t DIO_TogPinVal(DIO_PORT_ID_t DIO_port, DIO_PIN_ID_t DIO_pin) {
	DIO_ERROR_RETVAL_t ErrorValue = EXIT_SUCCESFUL;
 99c:	80 e0       	ldi	r24, 0x00	; 0
 99e:	08 95       	ret
			} else {
				ErrorValue = EXIT_FAILURE;
			}
			break;
		case PORTB:
			if (READ_BIT(DDRB_Register, DIO_pin) == PIN_OUTPUT) {
 9a0:	87 b3       	in	r24, 0x17	; 23
 9a2:	21 e0       	ldi	r18, 0x01	; 1
 9a4:	30 e0       	ldi	r19, 0x00	; 0
 9a6:	06 2e       	mov	r0, r22
 9a8:	02 c0       	rjmp	.+4      	; 0x9ae <DIO_TogPinVal+0x64>
 9aa:	22 0f       	add	r18, r18
 9ac:	33 1f       	adc	r19, r19
 9ae:	0a 94       	dec	r0
 9b0:	e2 f7       	brpl	.-8      	; 0x9aa <DIO_TogPinVal+0x60>
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	82 23       	and	r24, r18
 9b6:	93 23       	and	r25, r19
 9b8:	02 c0       	rjmp	.+4      	; 0x9be <DIO_TogPinVal+0x74>
 9ba:	95 95       	asr	r25
 9bc:	87 95       	ror	r24
 9be:	6a 95       	dec	r22
 9c0:	e2 f7       	brpl	.-8      	; 0x9ba <DIO_TogPinVal+0x70>
 9c2:	01 97       	sbiw	r24, 0x01	; 1
 9c4:	e9 f5       	brne	.+122    	; 0xa40 <DIO_TogPinVal+0xf6>
				TOG_BIT(PORTB_Register, DIO_pin);
 9c6:	88 b3       	in	r24, 0x18	; 24
 9c8:	28 27       	eor	r18, r24
 9ca:	28 bb       	out	0x18, r18	; 24
	}
	return ErrorValue;
}

DIO_ERROR_RETVAL_t DIO_TogPinVal(DIO_PORT_ID_t DIO_port, DIO_PIN_ID_t DIO_pin) {
	DIO_ERROR_RETVAL_t ErrorValue = EXIT_SUCCESFUL;
 9cc:	80 e0       	ldi	r24, 0x00	; 0
 9ce:	08 95       	ret
			} else {
				ErrorValue = EXIT_FAILURE;
			}
			break;
		case PORTC:
			if (READ_BIT(DDRC_Register, DIO_pin) == PIN_OUTPUT) {
 9d0:	84 b3       	in	r24, 0x14	; 20
 9d2:	21 e0       	ldi	r18, 0x01	; 1
 9d4:	30 e0       	ldi	r19, 0x00	; 0
 9d6:	06 2e       	mov	r0, r22
 9d8:	02 c0       	rjmp	.+4      	; 0x9de <DIO_TogPinVal+0x94>
 9da:	22 0f       	add	r18, r18
 9dc:	33 1f       	adc	r19, r19
 9de:	0a 94       	dec	r0
 9e0:	e2 f7       	brpl	.-8      	; 0x9da <DIO_TogPinVal+0x90>
 9e2:	90 e0       	ldi	r25, 0x00	; 0
 9e4:	82 23       	and	r24, r18
 9e6:	93 23       	and	r25, r19
 9e8:	02 c0       	rjmp	.+4      	; 0x9ee <DIO_TogPinVal+0xa4>
 9ea:	95 95       	asr	r25
 9ec:	87 95       	ror	r24
 9ee:	6a 95       	dec	r22
 9f0:	e2 f7       	brpl	.-8      	; 0x9ea <DIO_TogPinVal+0xa0>
 9f2:	01 97       	sbiw	r24, 0x01	; 1
 9f4:	39 f5       	brne	.+78     	; 0xa44 <DIO_TogPinVal+0xfa>
				TOG_BIT(PORTC_Register, DIO_pin);
 9f6:	85 b3       	in	r24, 0x15	; 21
 9f8:	28 27       	eor	r18, r24
 9fa:	25 bb       	out	0x15, r18	; 21
	}
	return ErrorValue;
}

DIO_ERROR_RETVAL_t DIO_TogPinVal(DIO_PORT_ID_t DIO_port, DIO_PIN_ID_t DIO_pin) {
	DIO_ERROR_RETVAL_t ErrorValue = EXIT_SUCCESFUL;
 9fc:	80 e0       	ldi	r24, 0x00	; 0
 9fe:	08 95       	ret
			} else {
				ErrorValue = EXIT_FAILURE;
			}
			break;
		case PORTD:
			if (READ_BIT(DDRD_Register, DIO_pin) == PIN_OUTPUT) {
 a00:	81 b3       	in	r24, 0x11	; 17
 a02:	21 e0       	ldi	r18, 0x01	; 1
 a04:	30 e0       	ldi	r19, 0x00	; 0
 a06:	06 2e       	mov	r0, r22
 a08:	02 c0       	rjmp	.+4      	; 0xa0e <DIO_TogPinVal+0xc4>
 a0a:	22 0f       	add	r18, r18
 a0c:	33 1f       	adc	r19, r19
 a0e:	0a 94       	dec	r0
 a10:	e2 f7       	brpl	.-8      	; 0xa0a <DIO_TogPinVal+0xc0>
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	82 23       	and	r24, r18
 a16:	93 23       	and	r25, r19
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <DIO_TogPinVal+0xd4>
 a1a:	95 95       	asr	r25
 a1c:	87 95       	ror	r24
 a1e:	6a 95       	dec	r22
 a20:	e2 f7       	brpl	.-8      	; 0xa1a <DIO_TogPinVal+0xd0>
 a22:	01 97       	sbiw	r24, 0x01	; 1
 a24:	89 f4       	brne	.+34     	; 0xa48 <DIO_TogPinVal+0xfe>
				TOG_BIT(PORTD_Register, DIO_pin);
 a26:	82 b3       	in	r24, 0x12	; 18
 a28:	28 27       	eor	r18, r24
 a2a:	22 bb       	out	0x12, r18	; 18
	}
	return ErrorValue;
}

DIO_ERROR_RETVAL_t DIO_TogPinVal(DIO_PORT_ID_t DIO_port, DIO_PIN_ID_t DIO_pin) {
	DIO_ERROR_RETVAL_t ErrorValue = EXIT_SUCCESFUL;
 a2c:	80 e0       	ldi	r24, 0x00	; 0
 a2e:	08 95       	ret
		default:
			ErrorValue = EXIT_FAILURE;
			break;
		}
	} else {
		ErrorValue = EXIT_FAILURE;
 a30:	81 e0       	ldi	r24, 0x01	; 1
 a32:	08 95       	ret
 a34:	81 e0       	ldi	r24, 0x01	; 1
 a36:	08 95       	ret
			} else {
				ErrorValue = EXIT_FAILURE;
			}
			break;
		default:
			ErrorValue = EXIT_FAILURE;
 a38:	81 e0       	ldi	r24, 0x01	; 1
 a3a:	08 95       	ret
		switch (DIO_port) {
		case PORTA:
			if (READ_BIT(DDRA_Register, DIO_pin) == PIN_OUTPUT) {
				TOG_BIT(PORTA_Register, DIO_pin);
			} else {
				ErrorValue = EXIT_FAILURE;
 a3c:	81 e0       	ldi	r24, 0x01	; 1
 a3e:	08 95       	ret
			break;
		case PORTB:
			if (READ_BIT(DDRB_Register, DIO_pin) == PIN_OUTPUT) {
				TOG_BIT(PORTB_Register, DIO_pin);
			} else {
				ErrorValue = EXIT_FAILURE;
 a40:	81 e0       	ldi	r24, 0x01	; 1
 a42:	08 95       	ret
			break;
		case PORTC:
			if (READ_BIT(DDRC_Register, DIO_pin) == PIN_OUTPUT) {
				TOG_BIT(PORTC_Register, DIO_pin);
			} else {
				ErrorValue = EXIT_FAILURE;
 a44:	81 e0       	ldi	r24, 0x01	; 1
 a46:	08 95       	ret
			break;
		case PORTD:
			if (READ_BIT(DDRD_Register, DIO_pin) == PIN_OUTPUT) {
				TOG_BIT(PORTD_Register, DIO_pin);
			} else {
				ErrorValue = EXIT_FAILURE;
 a48:	81 e0       	ldi	r24, 0x01	; 1
		}
	} else {
		ErrorValue = EXIT_FAILURE;
	}
	return ErrorValue;
}
 a4a:	08 95       	ret

00000a4c <task1>:
#define GICR   *((volatile uint8_t*)0x5B)
#define STATUS_REG	*((volatile uint8_t*)0x5F)//SREG
uint8_t counter = 0;
void task1()
{
	if(counter<=5)
 a4c:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <counter>
 a50:	86 30       	cpi	r24, 0x06	; 6
 a52:	40 f4       	brcc	.+16     	; 0xa64 <task1+0x18>
	{
		counter++;
 a54:	8f 5f       	subi	r24, 0xFF	; 255
 a56:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <counter>
		DIO_TogPinVal(PORTA,PIN0);
 a5a:	60 e0       	ldi	r22, 0x00	; 0
 a5c:	81 e0       	ldi	r24, 0x01	; 1
 a5e:	0e 94 a5 04 	call	0x94a	; 0x94a <DIO_TogPinVal>
 a62:	08 95       	ret
	}
	else
	{
		DIO_TogPinVal(PORTA,PIN1);
 a64:	61 e0       	ldi	r22, 0x01	; 1
 a66:	81 e0       	ldi	r24, 0x01	; 1
 a68:	0e 94 a5 04 	call	0x94a	; 0x94a <DIO_TogPinVal>
 a6c:	08 95       	ret

00000a6e <main>:
	
}
int main(void)
{
	/*initialize pin for switch*/
	DIO_PinInit(PORTD,PIN2,PIN_INPUT);
 a6e:	40 e0       	ldi	r20, 0x00	; 0
 a70:	62 e0       	ldi	r22, 0x02	; 2
 a72:	84 e0       	ldi	r24, 0x04	; 4
 a74:	0e 94 bc 03 	call	0x778	; 0x778 <DIO_PinInit>
	DIO_PinEnablePullUp(PORTD,PIN2);
 a78:	62 e0       	ldi	r22, 0x02	; 2
 a7a:	84 e0       	ldi	r24, 0x04	; 4
 a7c:	0e 94 4a 04 	call	0x894	; 0x894 <DIO_PinEnablePullUp>
	/*initialize pin for LED*/
	DIO_PinInit(PORTA,PIN0,PIN_OUTPUT);
 a80:	41 e0       	ldi	r20, 0x01	; 1
 a82:	60 e0       	ldi	r22, 0x00	; 0
 a84:	81 e0       	ldi	r24, 0x01	; 1
 a86:	0e 94 bc 03 	call	0x778	; 0x778 <DIO_PinInit>
	DIO_PinInit(PORTA,PIN1,PIN_OUTPUT);
 a8a:	41 e0       	ldi	r20, 0x01	; 1
 a8c:	61 e0       	ldi	r22, 0x01	; 1
 a8e:	81 e0       	ldi	r24, 0x01	; 1
 a90:	0e 94 bc 03 	call	0x778	; 0x778 <DIO_PinInit>
	/*enable global interrupt*/
	STATUS_REG |= 0x80;
 a94:	8f b7       	in	r24, 0x3f	; 63
 a96:	80 68       	ori	r24, 0x80	; 128
 a98:	8f bf       	out	0x3f, r24	; 63
    /* Replace with your application code */
	MCUCR &= 0xFC;/*clearing*/
 a9a:	85 b7       	in	r24, 0x35	; 53
 a9c:	8c 7f       	andi	r24, 0xFC	; 252
 a9e:	85 bf       	out	0x35, r24	; 53
	MCUCR |= 0x02;/*setting fall edge as trigerring edge*/
 aa0:	85 b7       	in	r24, 0x35	; 53
 aa2:	82 60       	ori	r24, 0x02	; 2
 aa4:	85 bf       	out	0x35, r24	; 53
	GICR  |= 0x40;/*enable external interrupt*/
 aa6:	8b b7       	in	r24, 0x3b	; 59
 aa8:	80 64       	ori	r24, 0x40	; 64
 aaa:	8b bf       	out	0x3b, r24	; 59
	Install(1,task1);
 aac:	66 e2       	ldi	r22, 0x26	; 38
 aae:	75 e0       	ldi	r23, 0x05	; 5
 ab0:	81 e0       	ldi	r24, 0x01	; 1
 ab2:	0e 94 3c 00 	call	0x78	; 0x78 <Install>
 ab6:	ff cf       	rjmp	.-2      	; 0xab6 <main+0x48>

00000ab8 <_exit>:
 ab8:	f8 94       	cli

00000aba <__stop_program>:
 aba:	ff cf       	rjmp	.-2      	; 0xaba <__stop_program>
